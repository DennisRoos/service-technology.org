# the main program
bin_PROGRAMS = sara

# the plain sources you need to compile (no generated code)
sara_SOURCES = main.cc problem.cc problem.h reachalyzer.cc reachalyzer.h imatrix.cc imatrix.h constraint.cc constraint.h lpwrapper.cc lpwrapper.h pathfinder.cc pathfinder.h partialsolution.cc partialsolution.h jobqueue.cc jobqueue.h cmdline.c cmdline.h verbose.cc verbose.h tarjan.cc tarjan.h syntax_sara.yy lexic_sara.ll 
# syntax_my.yy lexic_my.ll

# the configuration files
#sysconf_DATA = sara.conf

# pass the sysconfdir to Wendy (ugly, but see http://www.gnu.org/software/autoconf/manual/autoconf.html#Defining-Directories)
#sara_CPPFLAGS = -DSYSCONFDIR=\"$(sysconfdir)\"
sara_CPPFLAGS = -I$(top_srcdir)/libs
sara_LDADD = $(top_builddir)/libs/lp_solve/liblpsolve55.la
sara_LDFLAGS = -ldl
#-lpthread

# only add the local Petri net API if necessary
if COMPILE_PNAPI
sara_LDADD += $(top_builddir)/libs/pnapi/libpnapi.a
endif


#############################################################################
# EVERYTHING BELOW THIS LINE IS GENERIC - YOU MUST NOT CHANGE ANYTHING BELOW
#############################################################################

#---------------------------------------------------#
# GENERIC: initialization for other generic targets #
#---------------------------------------------------#
BUILT_SOURCES =
EXTRA_DIST =
MAINTAINERCLEANFILES =
DISTCLEANFILES = 

#--------------------------------------------------------------#
# GENERIC: organize distribution and cleaning of Bison sources #
#--------------------------------------------------------------#
BISON_FILES = $(filter %.yy,$(sara_SOURCES))
BUILT_SOURCES += $(BISON_FILES:.yy=.cc)
EXTRA_DIST += $(BISON_FILES:.yy=.h)
MAINTAINERCLEANFILES += $(BISON_FILES:.yy=.h)

#----------------------------------------------------------------#
# GENERIC: copy the content of the config.log file to a C header #
#----------------------------------------------------------------#
config-log.h: $(top_builddir)/config.log
	echo "/// the content of the file 'config.log' generated by the configure script" > $@
	echo "#define CONFIG_LOG \\" >> $@
	$(SED) -e 's/\\/\\\\/g' $< | $(SED) -e 's/"/\\"/g' | $(AWK) '{print "\""$$0"\\n\"\\"}' >> $@
	echo '""' >> $@
	echo "" >> $@
BUILT_SOURCES += config-log.h
DISTCLEANFILES += config-log.h

#----------------------------------------------------------#
# GENERIC: use GNU gengetopt to create command line parser #
#----------------------------------------------------------#
.ggo.c:
	$(GENGETOPT) --input=$<
GENGETOPT_FILES = cmdline.ggo
BUILT_SOURCES += $(GENGETOPT_FILES:.ggo=.c)
EXTRA_DIST += $(GENGETOPT_FILES)
MAINTAINERCLEANFILES += $(GENGETOPT_FILES:.ggo=.c) $(GENGETOPT_FILES:.ggo=.h)
