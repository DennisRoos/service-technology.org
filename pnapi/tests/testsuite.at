AT_INIT

# check if dot/petrify/fiona was found by the configure script
m4_define(AT_CHECK_DOT, [AT_CHECK([if test "DOT" == "not found"; then exit 77; fi])])
m4_define(AT_CHECK_PETRIFY, [AT_CHECK([if test "PETRIFY" == "not found"; then exit 77; fi])])
m4_define(AT_CHECK_FIONA, [AT_CHECK([if test "FIONA" == "not found"; then exit 77; fi])])
AT_TESTED(versions.sh)

############################################################################
AT_BANNER([Frontend Tool "petri" Standard Options])
############################################################################

AT_SETUP([Help output])
AT_CHECK([PETRI --help],0,ignore)
AT_KEYWORDS([frontend])
AT_CLEANUP

AT_SETUP([Version output])
AT_CHECK([PETRI --version],0,ignore)
AT_KEYWORDS([frontend])
AT_CLEANUP


############################################################################
AT_BANNER([Input])
############################################################################

AT_SETUP([Reading open net from file])
m4_define([NET], [test_input.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 132  |P_in|= 2  |P_out|= 9  |T|= 88  |F|= 314" stderr])
AT_KEYWORDS([frontend input])
AT_CLEANUP

AT_SETUP([Reading open net from pipe])
m4_define([NET], [test_input.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI --verbose < NET],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 132  |P_in|= 2  |P_out|= 9  |T|= 88  |F|= 314" stderr])
AT_KEYWORDS([frontend input])
AT_CLEANUP

AT_SETUP([Reading LoLA net from file])
m4_define([NET], [test_input.lola])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose --input=lola],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 50  |P_in|= 0  |P_out|= 0  |T|= 40  |F|= 120" stderr])
AT_KEYWORDS([frontend input])
AT_CLEANUP

AT_SETUP([Reading LoLA net from pipe])
m4_define([NET], [test_input.lola])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI --verbose --input=lola < NET],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 50  |P_in|= 0  |P_out|= 0  |T|= 40  |F|= 120" stderr])
AT_KEYWORDS([frontend input])
AT_CLEANUP


############################################################################
AT_BANNER([Output])
############################################################################

AT_SETUP([Writing open net (from open net)])
m4_define([NET], [test_input.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --output=owfn],0)
AT_CHECK([test -f NET.owfn])
AT_CHECK([PETRI NET.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 132  |P_in|= 2  |P_out|= 9  |T|= 88  |F|= 314" stderr])
AT_KEYWORDS([frontend output])
AT_CLEANUP

AT_SETUP([Writing LoLA net (from open net)])
m4_define([NET], [test_input.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --output=lola],0)
AT_CHECK([test -f NET.lola])
AT_CHECK([PETRI NET.lola --input=lola --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 121  |P_in|= 0  |P_out|= 0  |T|= 88  |F|= 303" stderr])
AT_KEYWORDS([frontend output])
AT_CLEANUP

AT_SETUP([Writing service automaton (from open net)])
m4_define([NET], [test_input.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --output=sa],0)
AT_CHECK([test -f NET.sa])
# the generated service automaton is expected to have 71332 edges
AT_CHECK([GREP "\->" NET.sa | wc -l | GREP -q 71332],0)
AT_KEYWORDS([frontend output slow])
AT_CLEANUP

AT_SETUP([Writing Graphviz dot file (from open net)])
m4_define([NET], [test_input.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --output=dot],0)
AT_CHECK([test -f NET.dot])
# the generated service automaton is expected to have 534 edges
AT_CHECK([GREP "\->" NET.dot | wc -l | GREP -q 534],0)
AT_KEYWORDS([frontend output])
AT_CLEANUP

AT_SETUP([Writing PNG file (from open net)])
AT_CHECK_DOT
m4_define([NET], [test_input.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --output=png],0,ignore,ignore)
AT_CHECK([test -f NET.png])
AT_KEYWORDS([frontend output slow])
AT_CLEANUP

############################################################################
AT_BANNER([oWFN Syntax])
############################################################################

AT_SETUP([Syntax Example 1])
m4_define([NET], [syntax_example.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET],0,ignore,stderr)
AT_KEYWORDS([syntax])
AT_CLEANUP

AT_SETUP([Syntax Example 2])
m4_define([NET], [syntax_example_new.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET],0,ignore,stderr)
AT_KEYWORDS([syntax])
AT_CLEANUP

AT_SETUP([Syntax Example 3])
m4_define([NET], [syntax_example_new_short.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET],0,ignore,stderr)
AT_KEYWORDS([syntax])
AT_CLEANUP

AT_SETUP([Syntax Formula])
m4_define([NET], [syntax_formula.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET],0,ignore,stderr)
AT_KEYWORDS([syntax])
AT_CLEANUP

AT_SETUP([Syntax Maximum Occurrence])
m4_define([NET], [syntax_max_occurrence.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET],0,ignore,stderr)
AT_KEYWORDS([syntax])
AT_CLEANUP

AT_SETUP([Reading open net (parser/lexer test)])
m4_define([NET], [syntax_example1.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET],0,ignore,stderr)
AT_KEYWORDS([frontend input])
AT_CLEANUP

AT_SETUP([Reading open net (parser/lexer test)])
m4_define([NET], [syntax_example2.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET],0,ignore,stderr)
AT_KEYWORDS([frontend input])
AT_CLEANUP

AT_SETUP([Reading open net (parser/lexer test)])
m4_define([NET], [syntax_example3.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET],0,ignore,stderr)
AT_KEYWORDS([frontend input])
AT_CLEANUP

AT_SETUP([Reading open net (parser/lexer test)])
m4_define([NET], [syntax_example4.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET],0,ignore,stderr)
AT_KEYWORDS([frontend input])
AT_CLEANUP

############################################################################
AT_BANNER([Regression Tests])
############################################################################

AT_SETUP([Bug 13579 (https://gna.org/bugs/?13579)])
m4_define([NET], [bug13579.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET],0,ignore,stderr)
AT_KEYWORDS([bug])
AT_CLEANUP

AT_SETUP([Bug 13968 (https://gna.org/bugs/?13968)])
m4_define([NET], [bug13968_sa2sm.sa])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([SA2SM NET NET.owfn], 0, ignore, stderr)
AT_KEYWORDS([bug])
AT_CLEANUP

AT_SETUP([Bug 13990 (https://gna.org/bugs/?13990)])
m4_define([NET1], [bug13990.1.owfn])
m4_define([NET2], [bug13990.2.owfn])
m4_define([NET3], [bug13990.3.owfn])
AT_CHECK([cp TESTFILES/NET1 .])
AT_CHECK([cp TESTFILES/NET2 .])
AT_CHECK([cp TESTFILES/NET3 .])
AT_CHECK([PETRI -iowfn -oowfn --compose=NET2 NET1], 0, ignore, stderr)
AT_CHECK([PETRI -iowfn -oowfn --compose=NET3 NET1.composed.owfn], 0, ignore, stderr)
AT_CHECK([PETRI -v -iowfn NET1.composed.owfn.composed.owfn], 0, ignore, stderr)
AT_CHECK([GREP -q "|P|= 6  |P_in|= 0  |P_out|= 0  |T|= 4" stderr])
AT_KEYWORDS([bug])
AT_CLEANUP

AT_SETUP([Bug 14064 (https://gna.org/bugs/?14064)])
m4_define([NET], [bug14064.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI -iowfn -rdead_nodes NET -oowfn],0,ignore,stderr)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P_in|= 3  |P_out|= 3" stderr])
AT_KEYWORDS([bug])
AT_CLEANUP

AT_SETUP([Bug 14116 (https://gna.org/bugs/?14116)])
m4_define([NET], [bug14116.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI --isNormal --verbose NET],0,stdout,stderr)
AT_CHECK([GREP -q "petri:bug14116.owfn: 0" stderr],0)
AT_KEYWORDS([bug])
AT_CLEANUP

############################################################################
AT_BANNER([Murata Reduction Rules])
############################################################################

AT_SETUP([Removal of dead nodes])
m4_define([NET], [test_dead_nodes.net.owfn])
m4_define([RED], [dead_nodes])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 3  |P_in|= 0  |P_out|= 0  |T|= 3  |F|= 6" stderr])
AT_CHECK([PETRI NET --reduce=RED --output=owfn],0,ignore,ignore)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 2  |P_in|= 0  |P_out|= 0  |T|= 2  |F|= 4" stderr])
AT_KEYWORDS([frontend reduction])
AT_CLEANUP

AT_SETUP([Removal of identical places])
m4_define([NET], [test_identical_places.net.owfn])
m4_define([RED], [identical_places])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 12  |P_in|= 0  |P_out|= 0  |T|= 6  |F|= 22" stderr])
AT_CHECK([PETRI NET --reduce=RED --output=owfn],0,ignore,ignore)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 11  |P_in|= 0  |P_out|= 0  |T|= 6  |F|= 16" stderr])
AT_KEYWORDS([frontend reduction])
AT_CLEANUP

AT_SETUP([Removal of identical transitions])
m4_define([NET], [test_identical_transitions.net.owfn])
m4_define([RED], [identical_transitions])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 6  |P_in|= 0  |P_out|= 0  |T|= 8  |F|= 18" stderr])
AT_CHECK([PETRI NET --reduce=RED --output=owfn],0,ignore,ignore)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 6  |P_in|= 0  |P_out|= 0  |T|= 7  |F|= 12" stderr])
AT_KEYWORDS([frontend reduction])
AT_CLEANUP

AT_SETUP([Removal of self-loop places])
m4_define([NET], [test_self_loop_places.net.owfn])
m4_define([RED], [self_loop_places])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 3  |P_in|= 0  |P_out|= 0  |T|= 1  |F|= 4" stderr])
AT_CHECK([PETRI NET --reduce=RED --output=owfn],0,ignore,ignore)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 2  |P_in|= 0  |P_out|= 0  |T|= 1  |F|= 2" stderr])
AT_KEYWORDS([frontend reduction])
AT_CLEANUP

AT_SETUP([Removal of self-loop transitions])
m4_define([NET], [test_self_loop_transitions.net.owfn])
m4_define([RED], [self_loop_transitions])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 1  |P_in|= 0  |P_out|= 0  |T|= 3  |F|= 4" stderr])
AT_CHECK([PETRI NET --reduce=RED --output=owfn],0,ignore,ignore)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 1  |P_in|= 0  |P_out|= 0  |T|= 2  |F|= 2" stderr])
AT_KEYWORDS([frontend reduction])
AT_CLEANUP

AT_SETUP([Removal of serial places])
m4_define([NET], [test_series_places.net.owfn])
m4_define([RED], [series_places])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 5  |P_in|= 0  |P_out|= 0  |T|= 7  |F|= 11" stderr])
AT_CHECK([PETRI NET --reduce=RED --output=owfn],0,ignore,ignore)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 4  |P_in|= 0  |P_out|= 0  |T|= 6  |F|= 9" stderr])
AT_KEYWORDS([frontend reduction])
AT_CLEANUP

AT_SETUP([Removal of serial transitions])
m4_define([NET], [test_series_transitions.net.owfn])
m4_define([RED], [series_transitions])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 5  |P_in|= 0  |P_out|= 0  |T|= 2  |F|= 6" stderr])
AT_CHECK([PETRI NET --reduce=RED --output=owfn],0,ignore,ignore)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 4  |P_in|= 0  |P_out|= 0  |T|= 1  |F|= 4" stderr])
AT_KEYWORDS([frontend reduction])
AT_CLEANUP

AT_SETUP([Removal of serial transitions (keep normal)])
m4_define([NET], [test_series_transitions_keepnormal.net.owfn])
m4_define([RED], [series_transitions])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 5  |P_in|= 1  |P_out|= 1  |T|= 2  |F|= 6" stderr])
AT_CHECK([PETRI NET --reduce=RED --output=owfn],0,ignore,ignore)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 4  |P_in|= 1  |P_out|= 1  |T|= 1  |F|= 4" stderr])
AT_CHECK([PETRI NET --reduce=RED,keep_normal --output=owfn],0,ignore,ignore)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 5  |P_in|= 1  |P_out|= 1  |T|= 2  |F|= 6" stderr])
AT_KEYWORDS([frontend reduction])
AT_CLEANUP


############################################################################
AT_BANNER([Starke Reduction Rules])
############################################################################

AT_SETUP([Starke rule 3 (places)])
m4_define([NET], [test_starke_3p.net.owfn])
m4_define([RED], [starke3p])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 2  |P_in|= 0  |P_out|= 0  |T|= 3  |F|= 6" stderr])
AT_CHECK([PETRI NET --reduce=RED --output=owfn],0,ignore,ignore)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 1  |P_in|= 0  |P_out|= 0  |T|= 3  |F|= 3" stderr])
AT_KEYWORDS([frontend reduction])
AT_CLEANUP

AT_SETUP([Starke rule 3 (transitions)])
m4_define([NET], [test_starke_3t.net.owfn])
m4_define([RED], [starke3t])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 5  |P_in|= 0  |P_out|= 0  |T|= 2  |F|= 10" stderr])
AT_CHECK([PETRI NET --reduce=RED --output=owfn],0,ignore,ignore)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 5  |P_in|= 0  |P_out|= 0  |T|= 1  |F|= 5" stderr])
AT_KEYWORDS([frontend reduction])
AT_CLEANUP

AT_SETUP([Starke rule 4])
m4_define([NET], [test_starke_4.net.owfn])
m4_define([RED], [starke4])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 4  |P_in|= 0  |P_out|= 0  |T|= 4  |F|= 8" stderr])
AT_CHECK([PETRI NET --reduce=RED --output=owfn],0,ignore,ignore)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 3  |P_in|= 0  |P_out|= 0  |T|= 3  |F|= 6" stderr])
AT_KEYWORDS([frontend reduction])
AT_CLEANUP

AT_SETUP([Starke rule 5])
m4_define([NET], [test_starke_5.net.owfn])
m4_define([RED], [starke5])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 4  |P_in|= 0  |P_out|= 0  |T|= 4  |F|= 9" stderr])
AT_CHECK([PETRI NET --reduce=RED --output=owfn],0,ignore,ignore)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 3  |P_in|= 0  |P_out|= 0  |T|= 3  |F|= 7" stderr])
AT_KEYWORDS([frontend reduction])
AT_CLEANUP

AT_SETUP([Starke rule 6])
m4_define([NET], [test_starke_6.net.owfn])
m4_define([RED], [starke6])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 5  |P_in|= 0  |P_out|= 0  |T|= 5  |F|= 12" stderr])
AT_CHECK([PETRI NET --reduce=RED --output=owfn],0,ignore,ignore)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 4  |P_in|= 0  |P_out|= 0  |T|= 4  |F|= 10" stderr])
AT_KEYWORDS([frontend reduction])
AT_CLEANUP

AT_SETUP([Starke rule 7])
m4_define([NET], [test_starke_7.net.owfn])
m4_define([RED], [starke7])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 3  |P_in|= 0  |P_out|= 0  |T|= 2  |F|= 6" stderr])
AT_CHECK([PETRI NET --reduce=RED --output=owfn],0,ignore,ignore)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 2  |P_in|= 0  |P_out|= 0  |T|= 1  |F|= 2" stderr])
AT_KEYWORDS([frontend reduction])
AT_CLEANUP

AT_SETUP([Starke rule 8])
m4_define([NET], [test_starke_8.net.owfn])
m4_define([RED], [starke8])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 4  |P_in|= 0  |P_out|= 0  |T|= 2  |F|= 10" stderr])
AT_CHECK([PETRI NET --reduce=RED --output=owfn],0,ignore,ignore)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 4  |P_in|= 0  |P_out|= 0  |T|= 1  |F|= 4" stderr])
AT_KEYWORDS([frontend reduction])
AT_CLEANUP

AT_SETUP([Starke rule 9])
m4_define([NET], [test_starke_9.net.owfn])
m4_define([RED], [starke9])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 5  |P_in|= 0  |P_out|= 0  |T|= 5  |F|= 13" stderr])
AT_CHECK([PETRI NET --reduce=RED,once --output=owfn],0,ignore,ignore)
AT_CHECK([PETRI NET.reduced.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 4  |P_in|= 0  |P_out|= 0  |T|= 4  |F|= 10" stderr])
AT_KEYWORDS([frontend reduction])
AT_CLEANUP


############################################################################
AT_BANNER([Structural Criteria])
############################################################################

AT_SETUP([Workflow net])
m4_define([NET], [test_criteria.workflownet.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --isWorkflow],0,ignore,stderr)
AT_CHECK([GREP -q "petri:NET: 1" stderr])
AT_KEYWORDS([frontend criteria])
AT_CLEANUP

AT_SETUP([No workflow net])
m4_define([NET], [test_criteria.noworkflownet.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --isWorkflow],0,ignore,stderr)
AT_CHECK([GREP -q "petri:NET: 0" stderr])
AT_KEYWORDS([frontend criteria])
AT_CLEANUP

AT_SETUP([Free choice net])
m4_define([NET], [test_criteria.freechoice.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --isFreeChoice],0,ignore,stderr)
AT_CHECK([GREP -q "petri:NET: 1" stderr])
AT_KEYWORDS([frontend criteria])
AT_CLEANUP

AT_SETUP([No free choice net])
m4_define([NET], [test_criteria.nofreechoice.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET --isFreeChoice],0,ignore,stderr)
AT_CHECK([GREP -q "petri:NET: 0" stderr])
AT_KEYWORDS([frontend criteria])
AT_CLEANUP


############################################################################
AT_BANNER([Service Automata])
############################################################################

AT_SETUP([Automaton generation from normal open net])
m4_define([NET], [test_construction.sequence_normal.net.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET -osa],0,ignore,ignore)
AT_KEYWORDS([automaton])
AT_CLEANUP

AT_SETUP([Automaton generation from arbitrary open net])
m4_define([NET], [test_construction.sequence_unnormal.net.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET -osa],0,ignore,ignore)
AT_KEYWORDS([automaton])
AT_CLEANUP

AT_SETUP([Automaton generation from arbitrary open net])
m4_define([NET], [test_construction.strange_net.net.owfn])
AT_CHECK([cp TESTFILES/NET .])
AT_CHECK([PETRI NET -osa],0,ignore,ignore)
AT_KEYWORDS([automaton])
AT_CLEANUP


############################################################################
AT_BANNER([Open Net Generator])
############################################################################

AT_SETUP([Generation of 10 nets with at most 20 places])
AT_CHECK([GENERATOR 10 20],0,ignore,stderr)
AT_CHECK([wc -l stderr],0,stdout)
AT_CHECK([GREP -q "20" stdout])
AT_KEYWORDS([generator])
AT_CLEANUP

AT_SETUP([Generation of 20 nets with at most 10 places])
AT_CHECK([GENERATOR 20 10],0,ignore,stderr)
AT_CHECK([wc -l stderr],0,stdout)
AT_CHECK([GREP -q "10" stdout])
AT_KEYWORDS([generator])
AT_CLEANUP


############################################################################
AT_BANNER([Net Synthesis])
############################################################################

AT_SETUP([Synthesis using Petrify])
m4_define([AUTOMATON], [test_myCoffee.sa])
AT_CHECK([cp TESTFILES/AUTOMATON TESTFILES/test_myCoffee-sm.owfn .])
AT_CHECK_PETRIFY
AT_CHECK([SA2OWFN AUTOMATON AUTOMATON.owfn],0)
AT_CHECK([test -f AUTOMATON.owfn])
AT_CHECK([PETRI AUTOMATON.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 9  |P_in|= 1  |P_out|= 3  |T|= 4  |F|= 13" stderr])
AT_CHECK_FIONA
AT_CHECK([FIONA -t equivalence AUTOMATON.owfn test_myCoffee-sm.owfn],0,ignore,ignore)
AT_KEYWORDS([synthesis])
AT_CLEANUP

AT_SETUP([Synthesis using state machine transition])
m4_define([AUTOMATON], [test_myCoffee.sa])
AT_CHECK([cp TESTFILES/AUTOMATON TESTFILES/test_myCoffee-syn.owfn .])
AT_CHECK([SA2SM AUTOMATON AUTOMATON.owfn],0)
AT_CHECK([test -f AUTOMATON.owfn])
AT_CHECK([PETRI AUTOMATON.owfn --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "|P|= 11  |P_in|= 1  |P_out|= 3  |T|= 9  |F|= 27" stderr])
AT_CHECK_FIONA
AT_CHECK([FIONA -t equivalence AUTOMATON.owfn test_myCoffee-syn.owfn],0,ignore,ignore)
AT_KEYWORDS([synthesis])
AT_CLEANUP
