#!/usr/bin/env bash
# @configure_input@
#
# this script will get a customer tool of the PNAPI,
# replace its version of the API with the present one
# and executes make check

TOOL="$1"
LIB=${TOOL}"/libs/pnapi"

WGET="@WGET@"
TAR="@AMTAR@"
SRC="@abs_top_builddir@/src"
MAKE="@MAKE@"

SERVER="http://esla.informatik.uni-rostock.de:8080"
TARBALL="${SERVER}/job/${TOOL}/lastSuccessfulBuild/artifact/${TOOL}/${TOOL}.tar.gz"

if [ "$WGET" != "not found" ]; then

    # check server availability
    OUTPUT=`ping -c 5 ${SERVER} 2>&1`
    echo $OUTPUT | grep "5 packets transmitted, 5 packets received" > /dev/null
    if [ $? -ne 0 ]; then

        echo "Found no stable internet connection, so we skip some tests."
        echo ""
        exit 77

    else

        # get customer tool
        ${WGET} ${TARBALL}
        ${TAR} xzf ${TOOL}.tar.gz

        # clear customer's library directory
        rm -rf ${TOOL}"/libs/pnapi/*"

        # copy files
        cp ${SRC}/*.cc ${SRC}/*.h ${SRC}/*.yy ${SRC}/*.ll ${LIB}
        cp ${SRC}/Makefile.am.customer ${LIB}/Makefile.am

        # remove unnecessary files again
        rm -rf ${LIB}/config.h

        # change to the temp dir and build tool
        cd ${TOOL}
        autoreconf -i
        ./configure --without-pnapi
        ${MAKE}
        ${MAKE} check
        result=$?
        cd ..

        echo ""

        exit $result

    fi

else

    echo "Found no wget, so we skip some tests."
    echo ""
    exit 77

fi
