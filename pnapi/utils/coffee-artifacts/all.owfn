{
  generated by: artifact (Petri Net API 4.02-unreleased)
  input file:   coin.owfn cup.owfn state.owfn final.m policy01.owfn policy02.owfn policy03.owfn policy04.owfn policy05.owfn 
  invocation:   artifact -a coin.owfn,cup.owfn,state.owfn -g final.m -p policy01.owfn,policy02.owfn,policy03.owfn,policy04.owfn,policy05.owfn -o all.owfn 
  net size:     |P|= 23  |P_in|= 0  |P_out|= 0  |T|= 12  |F|= 44
}

INTERFACE
  SYNCHRONOUS
    cup.fillCoffee, cup.sendToCustomer, cup.fillTea, state.orderCoffee, cup.sendToAutomaton, coin.receiveFromAutomaton, cup.receiceFromCustomer, coin.receiceFromCustomer, state.pay, state.orderTea, coin.sendToCustomer, coin.sendToAutomaton, cup.receiveFromAutomaton;

PLACE
  net.net.net.net.net.coin.@automaton, net.net.net.net.net.coin.@customer, net.net.net.net.net.coin.init, net.net.net.net.net.coin.transitToAutomaton, net.net.net.net.net.coin.transitToCustomer, net.net.net.net.net.cup.@automaton, net.net.net.net.net.cup.@customer, net.net.net.net.net.cup.coffee, net.net.net.net.net.cup.empty, net.net.net.net.net.cup.tea, net.net.net.net.net.cup.transitToAutomaton, net.net.net.net.net.cup.transitToCustomer, net.net.net.net.net.state.coffeeOrdered, net.net.net.net.net.state.notOrdered, net.net.net.net.net.state.notPaid, net.net.net.net.net.state.paid, net.net.net.net.net.state.teaOrdered, net.net.net.net.policy01.paid, net.net.net.policy02.paid, net.net.policy03.donthaveCoin, net.net.policy03.haveCoin, net.policy04.aorderedCoffee, policy05.orderedTea;

INITIALMARKING
  net.net.net.net.net.coin.@customer, net.net.net.net.net.coin.init, net.net.net.net.net.cup.@automaton, net.net.net.net.net.cup.empty, net.net.net.net.net.state.notOrdered, net.net.net.net.net.state.notPaid, net.net.policy03.donthaveCoin;

FINALCONDITION
  (net.net.net.net.net.cup.transitToCustomer = 0 AND (net.net.net.net.net.state.coffeeOrdered = 1 OR net.net.net.net.net.state.teaOrdered = 1) AND net.net.net.net.net.coin.transitToAutomaton = 0 AND net.net.net.net.net.coin.@automaton = 1 AND net.net.net.net.net.state.paid = 1 AND net.net.net.net.net.coin.transitToCustomer = 0 AND net.net.net.net.net.cup.@customer = 1 AND net.net.net.net.net.cup.transitToAutomaton = 0 AND (net.net.net.net.net.cup.tea = 1 OR net.net.net.net.net.cup.coffee = 1));


TRANSITION net.net.net.net.net.coin.t1
  CONSUME
    net.net.net.net.net.coin.@customer;
  PRODUCE
    net.net.net.net.net.coin.transitToAutomaton;
  SYNCHRONIZE
    coin.sendToAutomaton;

TRANSITION net.net.net.net.net.coin.t4
  CONSUME
    net.net.net.net.net.coin.transitToCustomer;
  PRODUCE
    net.net.net.net.net.coin.@customer;
  SYNCHRONIZE
    coin.receiveFromAutomaton;

TRANSITION net.net.net.net.net.cup.t5
  CONSUME
    net.net.net.net.net.cup.@automaton, net.net.net.net.net.cup.coffee;
  PRODUCE
    net.net.net.net.net.cup.coffee, net.net.net.net.net.cup.transitToCustomer;
  SYNCHRONIZE
    cup.sendToCustomer;

TRANSITION net.net.net.net.net.cup.t6
  CONSUME
    net.net.net.net.net.cup.@automaton, net.net.net.net.net.cup.tea;
  PRODUCE
    net.net.net.net.net.cup.tea, net.net.net.net.net.cup.transitToCustomer;
  SYNCHRONIZE
    cup.sendToCustomer;

TRANSITION net.net.net.net.net.cup.t7
  CONSUME
    net.net.net.net.net.cup.transitToCustomer;
  PRODUCE
    net.net.net.net.net.cup.@customer;
  SYNCHRONIZE
    cup.receiveFromAutomaton;

TRANSITION net.net.t1
  CONSUME
    net.net.net.net.net.coin.transitToAutomaton, net.net.policy03.donthaveCoin;
  PRODUCE
    net.net.net.net.net.coin.@automaton, net.net.policy03.haveCoin;
  SYNCHRONIZE
    coin.receiceFromCustomer;

TRANSITION net.net.t2
  CONSUME
    net.net.net.net.net.state.notPaid, net.net.policy03.haveCoin;
  PRODUCE
    net.net.net.net.net.state.paid, net.net.net.net.policy01.paid, net.net.net.policy02.paid;
  SYNCHRONIZE
    state.pay;

TRANSITION net.net.t3
  CONSUME
    net.net.net.net.net.coin.@automaton, net.net.policy03.haveCoin;
  PRODUCE
    net.net.net.net.net.coin.transitToCustomer;
  SYNCHRONIZE
    coin.sendToCustomer;

TRANSITION net.t1
  CONSUME
    net.net.net.net.net.state.notOrdered;
  PRODUCE
    net.net.net.net.net.state.coffeeOrdered, net.policy04.aorderedCoffee;
  SYNCHRONIZE
    state.orderCoffee;

TRANSITION net.t2
  CONSUME
    net.net.net.net.net.cup.@automaton, net.net.net.net.net.cup.empty, net.net.net.policy02.paid, net.policy04.aorderedCoffee;
  PRODUCE
    net.net.net.net.net.cup.@automaton, net.net.net.net.net.cup.coffee;
  SYNCHRONIZE
    cup.fillCoffee;

TRANSITION t1
  CONSUME
    net.net.net.net.net.state.notOrdered;
  PRODUCE
    net.net.net.net.net.state.teaOrdered, policy05.orderedTea;
  SYNCHRONIZE
    state.orderTea;

TRANSITION t2
  CONSUME
    net.net.net.net.net.cup.@automaton, net.net.net.net.net.cup.empty, net.net.net.net.policy01.paid, policy05.orderedTea;
  PRODUCE
    net.net.net.net.net.cup.@automaton, net.net.net.net.net.cup.tea;
  SYNCHRONIZE
    cup.fillTea;


{ END OF FILE '' }
