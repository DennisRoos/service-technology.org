#############################################################################
# Makefile for building: fiona
# Generated by qmake (2.01a) (Qt 4.4.3) on: Thu Oct 29 08:34:15 2009
# Project:  fiona.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile.qt fiona.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -march=i586 -mtune=i686 -fmessage-length=0 -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -march=i586 -mtune=i686 -fmessage-length=0 -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/default -I. -I/usr/include/QtCore -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtGui -I/usr/include -I. -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -L/usr/lib -L/usr/X11R6/lib -pthread -lpng -lSM -lICE -pthread -pthread -lXi -lXrender -lXrandr -lXfixes -lXcursor -lXinerama -lfreetype -lfontconfig -lXext -lX11 -lQtCore -lz -lm -pthread -lgthread-2.0 -lrt -lglib-2.0 -ldl -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = importwizard.cc \
		link.cc \
		main.cc \
		mainwindow.cc \
		monitorwidget.cc \
		node.cc \
		option.cc \
		projectswidget.cc \
		projectview.cc \
		tool.cc \
		tool_lexic.cc \
		tool_syntax.cc moc_importwizard.cpp \
		moc_mainwindow.cpp \
		moc_monitorwidget.cpp \
		moc_option.cpp \
		moc_projectswidget.cpp \
		moc_projectview.cpp \
		moc_tool.cpp
OBJECTS       = importwizard.o \
		link.o \
		main.o \
		mainwindow.o \
		monitorwidget.o \
		node.o \
		option.o \
		projectswidget.o \
		projectview.o \
		tool.o \
		tool_lexic.o \
		tool_syntax.o \
		moc_importwizard.o \
		moc_mainwindow.o \
		moc_monitorwidget.o \
		moc_option.o \
		moc_projectswidget.o \
		moc_projectview.o \
		moc_tool.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		fiona.pro
QMAKE_TARGET  = fiona
DESTDIR       = 
TARGET        = fiona

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.qt $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile.qt: fiona.pro  /usr/share/qt4/mkspecs/default/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile.qt fiona.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile.qt fiona.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/fiona1.0.0 || $(MKDIR) .tmp/fiona1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/fiona1.0.0/ && $(COPY_FILE) --parents config.h importwizard.h link.h mainwindow.h monitorwidget.h node.h option.h projectswidget.h projectview.h tool.h tool_syntax.h .tmp/fiona1.0.0/ && $(COPY_FILE) --parents importwizard.cc link.cc main.cc mainwindow.cc monitorwidget.cc node.cc option.cc projectswidget.cc projectview.cc tool.cc tool_lexic.cc tool_syntax.cc .tmp/fiona1.0.0/ && (cd `dirname .tmp/fiona1.0.0` && $(TAR) fiona1.0.0.tar fiona1.0.0 && $(COMPRESS) fiona1.0.0.tar) && $(MOVE) `dirname .tmp/fiona1.0.0`/fiona1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/fiona1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.qt


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_importwizard.cpp moc_mainwindow.cpp moc_monitorwidget.cpp moc_option.cpp moc_projectswidget.cpp moc_projectview.cpp moc_tool.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_importwizard.cpp moc_mainwindow.cpp moc_monitorwidget.cpp moc_option.cpp moc_projectswidget.cpp moc_projectview.cpp moc_tool.cpp
moc_importwizard.cpp: importwizard.h
	/usr/bin/moc $(DEFINES) $(INCPATH) importwizard.h -o moc_importwizard.cpp

moc_mainwindow.cpp: importwizard.h \
		monitorwidget.h \
		projectswidget.h \
		projectview.h \
		link.h \
		node.h \
		tool.h \
		mainwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_monitorwidget.cpp: monitorwidget.h
	/usr/bin/moc $(DEFINES) $(INCPATH) monitorwidget.h -o moc_monitorwidget.cpp

moc_option.cpp: option.h
	/usr/bin/moc $(DEFINES) $(INCPATH) option.h -o moc_option.cpp

moc_projectswidget.cpp: projectview.h \
		link.h \
		node.h \
		tool.h \
		projectswidget.h
	/usr/bin/moc $(DEFINES) $(INCPATH) projectswidget.h -o moc_projectswidget.cpp

moc_projectview.cpp: link.h \
		node.h \
		tool.h \
		projectview.h
	/usr/bin/moc $(DEFINES) $(INCPATH) projectview.h -o moc_projectview.cpp

moc_tool.cpp: tool.h
	/usr/bin/moc $(DEFINES) $(INCPATH) tool.h -o moc_tool.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

importwizard.o: importwizard.cc importwizard.h \
		tool.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o importwizard.o importwizard.cc

link.o: link.cc link.h \
		node.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o link.o link.cc

main.o: main.cc mainwindow.h \
		importwizard.h \
		monitorwidget.h \
		projectswidget.h \
		projectview.h \
		link.h \
		node.h \
		tool.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cc

mainwindow.o: mainwindow.cc mainwindow.h \
		importwizard.h \
		monitorwidget.h \
		projectswidget.h \
		projectview.h \
		link.h \
		node.h \
		tool.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cc

monitorwidget.o: monitorwidget.cc monitorwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o monitorwidget.o monitorwidget.cc

node.o: node.cc link.h \
		node.h \
		tool.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o node.o node.cc

option.o: option.cc option.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o option.o option.cc

projectswidget.o: projectswidget.cc option.h \
		projectswidget.h \
		projectview.h \
		link.h \
		node.h \
		tool.h \
		tool_syntax.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o projectswidget.o projectswidget.cc

projectview.o: projectview.cc projectview.h \
		link.h \
		node.h \
		tool.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o projectview.o projectview.cc

tool.o: tool.cc option.h \
		tool.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tool.o tool.cc

tool_lexic.o: tool_lexic.cc importwizard.h \
		tool_syntax.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tool_lexic.o tool_lexic.cc

tool_syntax.o: tool_syntax.cc option.h \
		tool.h \
		tool_syntax.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tool_syntax.o tool_syntax.cc

moc_importwizard.o: moc_importwizard.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_importwizard.o moc_importwizard.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_monitorwidget.o: moc_monitorwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_monitorwidget.o moc_monitorwidget.cpp

moc_option.o: moc_option.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_option.o moc_option.cpp

moc_projectswidget.o: moc_projectswidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_projectswidget.o moc_projectswidget.cpp

moc_projectview.o: moc_projectview.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_projectview.o moc_projectview.cpp

moc_tool.o: moc_tool.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_tool.o moc_tool.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

