\input texinfo
@setfilename diane.info
@include version.texi
@afourpaper
@finalout
@settitle Diane User's Manual

@c --------------------------------------------------------------------------

@copying

@b{About this document:}

This manual is for Diane, version @value{VERSION}, a tool to decompose Petri nets, last updated @value{UPDATED}.

Copyright @copyright{} 2009 Stephan Mennicke

@quotation
Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, with the Front-Cover Texts being ``A GNU Manual,'' and with the Back-Cover Texts as in (a) below.  A copy of the license is included in the section entitled ``GNU Free Documentation License.''

(a) The FSF's Back-Cover Text is: ``You are free to copy and modify this GNU Manual. Buying copies from GNU Press supports the FSF in developing GNU and promoting software freedom.''
@end quotation
@end copying

@dircategory service-technology.org
@direntry
* diane: (diane).       Diane.
@end direntry


@c --------------------------------------------------------------------------

@titlepage

@title Diane

@subtitle Decomposition Into Atomic NEts
@subtitle @url{http://service-technology.org/diane}
@vskip 0.5em
@subtitle Version @value{VERSION}, @value{UPDATED}

@author Stephan Mennicke
@page


@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c --------------------------------------------------------------------------

@ifnottex
@node Top
@top Diane
@insertcopying
@end ifnottex

@c --------------------------------------------------------------------------

@menu
* First Steps::How to set up and install Diane.
* Command Line Options::How to run Diane.
* Exit and Error Codes::Which results Diane has.
* Theory::The theory behind Diane.
* ChangeLog::Version history.
* GNU Free Documentation License::The license of this manual.
@end menu

@c --------------------------------------------------------------------------

@contents
@paragraphindent none

@c --------------------------------------------------------------------------

@node First Steps
@chapter First Steps

@section Setup and Installation

@enumerate
@item Go to @url{http://service-technology.org/files/diane} and download the latest release version of Diane, say @file{diane-@value{VERSION}.tar.gz}. To setup and compile Diane, change into your download directory and type

@cartouche
@smallexample
tar xfz diane-@value{VERSION}.tar.gz
cd diane-@value{VERSION}
./configure
make
@end smallexample
@end cartouche

After compilation, a binary @samp{src/diane} is generated.@footnote{On Microsoft Windows, the file will be called @file{diane.exe}.} If you experience any compiler warnings, don't panic: Diane contains some generated or third party code that we cannot influence.

@item To test whether everything went fine, type

@cartouche
@smallexample
make check
@end smallexample
@end cartouche

to execute the testcases located in @file{tests}. If everything went fine, you should see something like:@footnote{Some tests use Fiona, Wendy and the Petri Net API Frontend to check whether the calculated operating guidelines are correct. If these tools were not found by the configure script, theses tests are skipped.}

@smallexample
===================
All 20 tests passed
===================
@end smallexample

If an error occurs, please send the output to @email{diane@@service-technology.org}.

@item To install the binary, the manpage, and the documentation, type

@cartouche
@smallexample
make install
@end smallexample
@end cartouche

You might need superuser permissions to do so.
@end enumerate

If you need any further information, see file @file{INSTALL} for detailed instructions.


@section Contents of the Distribution

The distribution contains several directories:

@table @file
@item doc
The Texinfo documentation of Diane. The documentation can be created using @samp{make pdf}. Note you need to have Diane properly installed before (see installation description above).

@item man
The manpage of Diane which can be displayed using @samp{man diane} after having Diane installed (see installation description above).

@item src
The source code of Diane.

@item tests
Testcases for Diane which check the generated binary.
@end table


@c --------------------------------------------------------------------------


@section Requirements

@c !!! DO NOT CHANGE THE NEXT LINE -- IT IS USED AS A FILTER IN SCRIPTS !!!
In order to run, compile, and develop Diane, several tools are required.

@subsection Compilation
To compile the source code from a source distribution, the following tools are required.

@itemize
@item GCC (@url{http://gcc.gnu.org/})
@item @acronym{GNU} Make (@url{http://www.gnu.org/software/make/})
@end itemize


@subsection Development
In case you want to make changes to the source code, the following tools are required to reconfigure and compile Diane.

@itemize
@item Autoconf, @url{http://www.gnu.org/software/autoconf/}
@item Automake, @url{http://www.gnu.org/software/automake/}
@item Bison, @url{http://www.gnu.org/software/bison/}
@item flex, @url{http://flex.sourceforge.net/}
@item Gengetopt, @url{http://www.gnu.org/software/gengetopt/}
@item help2man, @url{http://www.gnu.org/software/help2man/}
@item Texinfo, @url{http://www.gnu.org/software/texinfo/}
@end itemize


@sp 3

@c !!! DO NOT CHANGE THE NEXT LINE -- IT IS USED AS A FILTER IN SCRIPTS !!!
Please check our nightly build server at @url{http://service-technology.org/nightly} for the versions we use during development.





@c --------------------------------------------------------------------------


@node Command Line Options
@chapter Invoking Diane

Diane is a command line tool and does not come with a fancy @acronym{GUI}. However, Diane can be easily scripted and combined with other tools.

@section Command Line Options

For an overview of the command line options, type @samp{diane -h} to see the following help screen:

@smallexample
@include cmdline.out
@end smallexample

@section Using the Utils

Diane comes with one shell-script placed in the utils directory. This script
creates statistical output. As an argument it takes a directory with LoLA files.
Then Diane is invoked by the script on all LoLA files within the directory and
writes the CSV output line to a file <directory name>.csv in the base directory
(where the script was invoked). There is another file called head.csv within
the utils directory. It is easy to cat this table heading together with the
generated CSV files by

@smallexample
@cartouche
cat head.csv <list of generated CSV files> > <result output>.csv
@end cartouche
@end smallexample



@c --------------------------------------------------------------------------



@node Exit and Error Codes
@chapter Exit and Error Codes

@section Exit Codes

Diane will return @samp{0} if no error occured during the decomposition of the input Petri net(s).
After successfull termination there should be an output-line like the following

@smallexample
@cartouche
diane: <input filename> - number of components: <number>
@end cartouche
@end smallexample

Several files are generated by Diane if parameter -q is not given. Their names can be influenced by
a prefix given by the command-line parameter -p. The generated files represent the fragments
calculated by Diane.

@section Error Codes

In case any error occurs, Diane aborts with exit code @samp{1} and prints a message with an error code to the standard error stream.

@table @asis
@item #01
Error opening the input open net or input file not found.

@smallexample
@cartouche
diane: could not open file `foo.lola' -- aborting [#01]
@end cartouche
@end smallexample

@item #02
Error parsing the input file.

@smallexample
@cartouche
diane: could not parse file `foo.lola' -- aborting [#02]
@end cartouche
@end smallexample

@item #03
Unknown input format given.

@smallexample
@cartouche
diane: input format 'foo' unknown -- aborting [#03]
@end cartouche
@end smallexample

@end table



@c --------------------------------------------------------------------------


@node Theory
@chapter Theory

@c !!! DO NOT CHANGE THE NEXT LINE -- IT IS USED AS A FILTER IN SCRIPTS !!!
Diane implements several algorithms and result published in several scientific articles.

@section Decomposition of a Petri net into services

@quotation
Stephan Mennicke, Olivia Oanea, and Karsten Wolf. @b{Decomposition into open nets}. In @i{16th German Workshop on Algorithms and Tools for Petri Nets, AWPN 2009, Karlsruhe, Germany, September 25-26, 2009, Proceedings}, September 2009. 
@end quotation

@section Decomposition of an open nets into its free choice conflict clusters

@quotation
Niels Lohmann. @b{Decompositional Calculation of Operating Guidelines Using Free Choice Conflicts}. In Niels Lohmann and Karsten Wolf, editors, @i{15th German Workshop on Algorithms and Tools for Petri Nets, AWPN 2008, Rostock, Germany, September 26-27, 2008, Proceedings}, volume 380 of CEUR Workshop Proceedings, pages 63-68, September 2008. CEUR-WS.org.
@end quotation

@sp 3

@c !!! DO NOT CHANGE THE NEXT LINE -- IT IS USED AS A FILTER IN SCRIPTS !!!
See @url{http://service-technology.org/publications} for more information.



@c --------------------------------------------------------------------------

@node ChangeLog
@chapter Version History

Diane is developed under the ``Release Early, Release Often'' maxime (see @url{http://catb.org/~esr/writings/cathedral-bazaar/cathedral-bazaar/ar01s04.html}): Whenever enough integrated or a non-trivial changes have summed up, a new version is published. Though this releases might now always mark significant changes, they at least allow to quickly fix bugs and avoid infinite procrastination.

@include ChangeLog.texi

@sp 3

The most recent change log is available at Diane's website at 
@url{http://service-technology.org/files/diane/ChangeLog}.




@c --------------------------------------------------------------------------

@node GNU Free Documentation License
@appendix The GNU Free Documentation License

@include fdl.texi

@bye

