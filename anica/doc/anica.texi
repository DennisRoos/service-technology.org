\input texinfo
@setfilename anica.info
@include version.texi
@afourpaper
@finalout
@settitle Anica User's Manual


@c --------------------------------------------------------------------------


@copying
@b{About this document:}

This manual is for Anica, version @value{VERSION}, Automated Non-Interference Check Assistent, last updated @value{UPDATED}.

Copyright @copyright{} 2011 Andreas Lehmann

@quotation
Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, with the Front-Cover Texts being ``A GNU Manual,'' and with the Back-Cover Texts as in (a) below.  A copy of the license is included in the section entitled ``GNU Free Documentation License.''

(a) The FSF's Back-Cover Text is: ``You are free to copy and modify this GNU Manual. Buying copies from GNU Press supports the FSF in developing GNU and promoting software freedom.''
@end quotation
@end copying

@dircategory service-technology.org
@direntry
* Anica: (anica).       Automated Non-Interference check assistent.
@end direntry


@c --------------------------------------------------------------------------


@titlepage

@title Anica

@subtitle Automated Non-Interference Check Assistent
@subtitle @url{http://service-technology.org/anica}
@vskip 0.5em
@subtitle Version @value{VERSION}, @value{UPDATED}

@author Andreas Lehmann
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage


@c --------------------------------------------------------------------------


@ifnottex
@node Top
@top Anica
@insertcopying
@end ifnottex


@c --------------------------------------------------------------------------


@menu
* First Steps::How to set up and install Anica.
* Command Line Options::How to run Anica.
* Theory::The theory behind Anica.
* Results::What information is written to the results files.
* Exit and Error Codes::What the error and exit codes of Anica mean.
* ChangeLog::Version history.
* GNU Free Documentation License::The license of this manual.
@end menu

@c --------------------------------------------------------------------------


@contents
@paragraphindent none


@c --------------------------------------------------------------------------


@node First Steps
@chapter First Steps
@section Setup and Installation

@enumerate
@item Go to @url{http://service-technology.org/files/anica} and download the latest release version of Anica, say @file{anica-@value{VERSION}.tar.gz}. To setup and compile Anica, change into your download directory and type

@cartouche
@smallexample
tar xfz anica-@value{VERSION}.tar.gz
cd anica-@value{VERSION}
./configure
make
@end smallexample
@end cartouche

After compilation, a binary @samp{src/anica} is generated.@footnote{On Microsoft Windows, the file will be called @file{anica.exe}.} If you experience any compiler warnings, don't panic: Anica contains some generated or third party code that we cannot influence.

@item To test whether everything went fine, type

@cartouche
@smallexample
make check
@end smallexample
@end cartouche

to execute the testcases located in @file{tests}. If everything went fine, you should see something like:

@smallexample
## ------------- ##
## Test results. ##
## ------------- ##

All 48 tests were successful.
@end smallexample

If an error occurs, please send the output to @email{anica@@service-technology.org}.

@item To install the binary, the manpage, and the documentation, type

@cartouche
@smallexample
make install
@end smallexample
@end cartouche

You might need superuser permissions to do so.
@end enumerate

If you need any further information, see file @file{INSTALL} for detailed instructions.


@section Contents of the Distribution

The distribution contains several directories:

@table @file
@item doc
The Texinfo documentation of Anica. The documentation can be created using @samp{make pdf}. Note you need to have Anica properly installed before (see installation description above).

@item libs
The Petri Net @acronym{API} used by Anica to parse and organize the open net.

@item man
The manpage of Anica which can be displayed using @samp{man anica} after having Anica installed (see installation description above).

@item src
The source code of Anica.

@item tests
Testcases for Anica which check the generated binary.
@end table


@c --------------------------------------------------------------------------


@section Requirements
@anchor{Requirements}

@c !!! DO NOT CHANGE THE NEXT LINE -- IT IS USED AS A FILTER IN SCRIPTS !!!
In order to run, compile, and develop Anica, several tools are required.

@c <<-- CHANGE START (tools required, etc.) -->>

@subsection Runtime
@itemize
@item Lola (@url{http://service-technology.org/lola}). A suitable Lola binary can be created as follows:
@enumerate
@item download @url{http://service-technology.org/files/lola/lola.tar.gz}
@item untar @file{lola.tar.gz}, configure
@item call @samp{make lola-statepredicate1}
@item copy the binary @file{src/lola-statepredicate1} to a directory of your path
(e.g., @file{/usr/local/bin}) or call @samp{make install}
@end enumerate
@item @acronym{GNU} Make (@url{http://www.gnu.org/software/make/}).
@end itemize

Anica's configure script checks whether Lola (with binary @file{lola-statepredicate1}) is found in the path and adjusts the configuration file @file{src/anica.conf} accordingly.

@c <<-- CHANGE END -->>

@subsection Compilation
To compile the source code from a source distribution, the following tools are required.

@itemize
@item GCC (@url{http://gcc.gnu.org/})
@item @acronym{GNU} Make (@url{http://www.gnu.org/software/make/})
@end itemize


@subsection Development
In case you want to make changes to the source code, the following tools are required to reconfigure and compile Anica.

@itemize
@item Autoconf, @url{http://www.gnu.org/software/autoconf/}
@item Automake, @url{http://www.gnu.org/software/automake/}
@item Bison, @url{http://www.gnu.org/software/bison/}
@item flex, @url{http://flex.sourceforge.net/}
@item Gengetopt, @url{http://www.gnu.org/software/gengetopt/}
@item help2man, @url{http://www.gnu.org/software/help2man/}
@item Texinfo, @url{http://www.gnu.org/software/texinfo/}
@end itemize

@sp 3

@c !!! DO NOT CHANGE THE NEXT LINE -- IT IS USED AS A FILTER IN SCRIPTS !!!
Please check our nightly build server at @url{http://service-technology.org/nightly} for the versions we use during development.


@c --------------------------------------------------------------------------


@node Command Line Options
@chapter Invoking Anica

Anica is a command line tool and does not come with a fancy @acronym{GUI}. However, Anica can be easily scripted and combined with other tools.

@section Command Line Options

For an overview of the command line options, type @samp{anica -h} to see the following help screen:

@smallexample
@verbatiminclude cmdline.out
@end smallexample


@section Configuration Files

The parameters can also be controlled using a configuration file that can be read using the @samp{config} option; for example:

@cartouche
@smallexample
anica net.lola --config=myconf.conf
@end smallexample
@end cartouche

A configuration file consistes of @code{paramter = value} lines, each line setting the value of a parameter. Note: If not all parameters are defined, the standard values apply.

The configure script creates a default configuration file @file{anica.conf} which located in the @file{src} folder. When installing Anica, this is copied to your sysconfig directory (usually @file{/usr/local/etc}).

When Anica is executed, it evaluates parameters as follows:
@enumerate
@item When a configuration file is given via @option{--config}, it is used.
@item Otherwise, the configuration file @file{anica.conf} in the local directory is used if present.
@item Otherwise, the configuration file @file{anica.conf} in the sysconf directory (usually @file{/usr/local/etc}) is used if present.
@item Otherwise, no configuration file is used.
@end enumerate
Parameters given via command-line will overwrite parameters given via configuration files.


@c --------------------------------------------------------------------------


@node Theory
@chapter Theory

@c !!! DO NOT CHANGE THE NEXT LINE -- IT IS USED AS A FILTER IN SCRIPTS !!!
Anica implements several algorithms and result published in several scientific articles.

@c <<-- CHANGE START (theory) -->>

@section <<-- THEORY -->>

@subsubheading <<-- THEORY -->>

@quotation
<<-- THEORY -->>
@end quotation

@c <<-- CHANGE END -->>

@sp 3

@c !!! DO NOT CHANGE THE NEXT LINE -- IT IS USED AS A FILTER IN SCRIPTS !!!
See @url{http://service-technology.org/publications} for more information.


@c --------------------------------------------------------------------------

@node Results
@chapter Results

@heading @code{places}
@findex places

This part lists information on the checked places.

@ftable @code

@item potential_causal
The number of potential causal places. [Integer]

@item potential_conflict
The number of potential conflict places. [Integer]

@item active_causal
The number of active causal places. [Integer]

@item active_conflict
The number of active conflict places. [Integer]

@end ftable

@heading @code{meta}
@findex meta

This part lists information on the tool itself.

@ftable @code
@item invocation
The invocation string of the tool. [String]

@item package_name
@itemx package_version
@itemx svn_version
The name of the tool, its version, and (when applicable) the version of the SVN revision. [String]
@end ftable

@heading @code{net}
@findex net

This part lists all kind of information of the input net.

@ftable @code

@item places
The number of places of the input net. [Integer]

@item transitions
The number of transitions of the input net. [Integer]

@item high
The number of transitions assigned with high confidence level of the input net. [Integer]

@item low
The number of transitions assigned with low confidence level of the input net. [Integer]

@item arcs
The number of arcs of the input net. [Integer]
@end ftable

@heading @code{result}
@findex meta

This part lists information on the result.

@ftable @code
@item non-interference
The result of non-interference check. Possible values are: FAILED, POTENTIAL and PASSED. [String]
@end ftable

@c --------------------------------------------------------------------------

@node Exit and Error Codes
@chapter Exit and Error Codes
@section Exit Codes

Anica will exit with code @samp{0} in case everything went fine. That is, the command-line parameters were valid, the lola net could be read, all external calls were successfull and---if requested---output files could be successfully written. In case any error occurs, the exit code will be @samp{1} and an error message with an error code (see below) will be printed to the standard error stream.

Note that Anica's exit code is @b{not} related to the result of the interference result. The messages

@smallexample
@cartouche
anica: Non-Interference: PASSED
@end cartouche
@end smallexample

and

@smallexample
@cartouche
anica: Non-Interference: POTENTIAL
@end cartouche
@end smallexample

and

@smallexample
@cartouche
anica: Non-Interference: FAILED
@end cartouche
@end smallexample

all yield exit code @samp{0} (successful termination).

@section Error Codes

In case any error occurs, Anica aborts with exit code @samp{1} and prints a message with an error code to the standard error stream.

@table @asis

@c <<-- CHANGE START (exit/error codes) -->>

@item #01
Error opening the lola net or input file not found.

@smallexample
@cartouche
anica: could not open file `foo.lola' -- aborting [#01]
@end cartouche
@end smallexample

@item #02
Error parsing the lola net. Usually indicates the line of the error and some more or less helpful message on the parse error.

@smallexample
@cartouche
anica:13: error near `Place': syntax error, unexpected IDENT,
           expecting KEY_INTERFACE or KEY_PLACE -- aborting [#02]
@end cartouche
@end smallexample

@item #03
Error opening a file (to write). Usually, this error occurs in case Anica is called in a directory without (writing) permissions. Output files can be the target files of the @option{--resultFile} or any dot file @option{--dot-*} parameter as well as the temporary files by LoLA.

@smallexample
@cartouche
anica: file foo.bar cannot be opened -- aborting [#03]
@end cartouche
@end smallexample

@item #04
At most one file can be read at once. If no input filename is given, the lola net is read from standard input.

@smallexample
@cartouche
anica: at most one input file must be given -- aborting [#04]
@end cartouche
@end smallexample

@item #05
Error deleting a file. Usually, this error occurs in case a file was deleted before (by anybody else).

@smallexample
@cartouche
anica: file foo.bar cannot be deleted -- aborting [#03]
@end cartouche
@end smallexample

@item #06
Error processing the lola net. This error occurs in case any transition in the input lola net has no confidence assignment. To avoid this error, reannotate the transitions in the lola net or use the parameter @option{--unlabeledTransitions}.

@smallexample
@cartouche
anica: t1 has unknown confidence level -- aborting [#6]
@end cartouche
@end smallexample

@item #07
A wrong command-line parameter was given or there was a problem with the combination of command-line parameters. This message is usually accompanied by another message describing the exact problem. Run @samp{anica --help} for an overview of the valid command-line parameters.

@smallexample
@cartouche
anica: `activeCausal' requires `potentialCausal'
anica: invalid command-line parameter(s) -- aborting [#07]
@end cartouche
@end smallexample

@item #08
Assertation violation. Usually, this error occurs in case Anica has internal problems...maybe you found a bug.

@smallexample
@cartouche
anica: unknown result -- aborting [#09]
@end cartouche
@end smallexample

@item #09
Error parsing the lola result. Usually indicates a wrong lola version.

@smallexample
@cartouche
anica: LoLA parse error -- aborting [#02]
@end cartouche
@end smallexample

@item #10
Anica cannot find the configuration file given by @file{--config} parameter or it has syntax errors. For an example configuration file, see the standard configuration file @file{src/anica.conf} created by the configure script. See @url{http://www.gnu.org/software/gengetopt/gengetopt.html#Configuration-files} for more information on configuration file.

@smallexample
@cartouche
anica: Error opening configuration file `myconf.conf'
anica: error reading configuration file `myconf.conf' -- aborting [#14]
@end cartouche
@end smallexample

@c <<-- CHANGE END -->>

@end table


@c --------------------------------------------------------------------------


@node ChangeLog
@chapter Version History

@c !!! DO NOT CHANGE THE NEXT LINE -- IT IS USED AS A FILTER IN SCRIPTS !!!
Anica is developed under the ``Release Early, Release Often'' maxime (see @url{http://catb.org/~esr/writings/cathedral-bazaar/cathedral-bazaar/ar01s04.html}): Whenever enough integrated or a non-trivial changes have summed up, a new version is published. Though this releases might now always mark significant changes, they at least allow to quickly fix bugs and avoid infinite procrastination.

@include ChangeLog.texi
@sp 3

@c !!! DO NOT CHANGE THE NEXT LINE -- IT IS USED AS A FILTER IN SCRIPTS !!!
The most recent change log is available at Anica's website at @url{http://service-technology.org/files/anica/ChangeLog}.


@c --------------------------------------------------------------------------

@node GNU Free Documentation License
@appendix The GNU Free Documentation License

@include fdl.texi

@bye
