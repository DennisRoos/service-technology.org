AT_INIT
AT_COLOR_TESTS

############################################################################
AT_BANNER([Command-line parameters])
############################################################################

AT_SETUP([Help output])
AT_CHECK([LOLA --help],0,ignore)
AT_CHECK([LISTENER --help],0,ignore)
AT_KEYWORDS(commandline)
AT_CLEANUP

AT_SETUP([Version output])
AT_CHECK([LOLA --version],0,ignore)
AT_CHECK([LISTENER --version],0,ignore)
AT_KEYWORDS(commandline)
AT_CLEANUP

AT_SETUP([Wrong parameter])
AT_CHECK([LOLA --unknownparameter],2,ignore,stderr)
AT_CHECK([GREP -q "lola: invalid command-line parameter(s)" stderr])
AT_KEYWORDS(commandline)
AT_CLEANUP


############################################################################
AT_BANNER([Frontend])
############################################################################

AT_SETUP([Piping from stdin: Garavel])
AT_CHECK([cp TESTFILES/garavel.lola .])
AT_CHECK([cat garavel.lola | LOLA],0,ignore,ignore)
AT_KEYWORDS(frontend)
AT_CLEANUP

AT_SETUP([Piping from stdin: Kanban 5])
AT_CHECK([cp TESTFILES/Kanban5.pnml.lola .])
AT_CHECK([cat Kanban5.pnml.lola | LOLA],0,ignore,ignore)
AT_KEYWORDS(frontend)
AT_CLEANUP

AT_SETUP([Piping from stdin: Phils 1000])
AT_CHECK([cp TESTFILES/phils1000.lola .])
AT_CHECK([cat phils1000.lola | LOLA],0,ignore,ignore)
AT_KEYWORDS(frontend)
AT_CLEANUP


############################################################################
AT_BANNER([Frontend errors])
############################################################################

AT_SETUP([Syntax error])
AT_DATA(netfile,[foobar;
])
AT_CHECK([cat netfile | LOLA -v],2,ignore,stderr)
AT_CHECK([GREP -q "lola: syntax error, unexpected" stderr])
AT_CHECK([GREP -q "lola: syntax error -- aborting \[[#00\|]]" stderr])
AT_KEYWORDS(frontend)
AT_CLEANUP

AT_SETUP([Duplicate place])
AT_DATA(netfile,[PLACE p1, p1;
])
AT_CHECK([cat netfile | LOLA -v],2,ignore,stderr)
AT_CHECK([GREP -q "lola: place 'p1' name used twice" stderr])
AT_CHECK([GREP -q "lola: syntax error -- aborting \[[#00\|]]" stderr])
AT_KEYWORDS(frontend)
AT_CLEANUP

AT_SETUP([Mark nonexisting place (1/2)])
AT_DATA(netfile,[PLACE p1;
MARKING p2: 1;
])
AT_CHECK([cat netfile | LOLA -v],2,ignore,stderr)
AT_CHECK([GREP -q "lola: place 'p2' does not exist" stderr])
AT_CHECK([GREP -q "lola: syntax error -- aborting \[[#00\|]]" stderr])
AT_KEYWORDS(frontend)
AT_CLEANUP

AT_SETUP([Mark nonexisting place (2/2)])
AT_DATA(netfile,[PLACE p1;
MARKING p2;
])
AT_CHECK([cat netfile | LOLA -v],2,ignore,stderr)
AT_CHECK([GREP -q "lola: place 'p2' does not exist" stderr])
AT_CHECK([GREP -q "lola: syntax error -- aborting \[[#00\|]]" stderr])
AT_KEYWORDS(frontend)
AT_CLEANUP

AT_SETUP([Reference nonexisting place (1/2)])
AT_DATA(netfile,[PLACE p1;
MARKING p1: 1;
TRANSITION t1
CONSUME p2: 1;
PRODUCE p1;
])
AT_CHECK([cat netfile | LOLA -v],2,ignore,stderr)
AT_CHECK([GREP -q "lola: place 'p2' does not exist" stderr])
AT_CHECK([GREP -q "lola: syntax error -- aborting \[[#00\|]]" stderr])
AT_KEYWORDS(frontend)
AT_CLEANUP

AT_SETUP([Reference nonexisting place (2/2)])
AT_DATA(netfile,[PLACE p1;
MARKING p1: 1;
TRANSITION t1
CONSUME p2;
PRODUCE p1;
])
AT_CHECK([cat netfile | LOLA -v],2,ignore,stderr)
AT_CHECK([GREP -q "lola: place 'p2' does not exist" stderr])
AT_CHECK([GREP -q "lola: syntax error -- aborting \[[#00\|]]" stderr])
AT_KEYWORDS(frontend)
AT_CLEANUP

AT_SETUP([Duplicate transition])
AT_DATA(netfile,[PLACE p1;
MARKING p1;
TRANSITION t1
CONSUME p1;
PRODUCE p1;
TRANSITION t1
CONSUME p1;
PRODUCE p1;
])
AT_CHECK([cat netfile | LOLA -v],2,ignore,stderr)
AT_CHECK([GREP -q "lola: transition name 't1' used twice" stderr])
AT_CHECK([GREP -q "lola: syntax error -- aborting \[[#00\|]]" stderr])
AT_KEYWORDS(frontend)
AT_CLEANUP


############################################################################
AT_BANNER([Debugging])
############################################################################

AT_SETUP([Print net])
AT_CHECK([cp TESTFILES/garavel.lola .])
AT_CHECK([cat garavel.lola | LOLA --printNet],0,stdout)
AT_CHECK([GREP -q "485 places" stdout])
AT_CHECK([GREP -q "776  transitions" stdout])
AT_KEYWORDS(reporter)
AT_CLEANUP


############################################################################
AT_BANNER([Reporter])
############################################################################

AT_SETUP([ReporterStream: stdout])
AT_CHECK([cp TESTFILES/garavel.lola .])
AT_CHECK([cat garavel.lola | LOLA --reporter=stream --verbose],0,stdout,stderr)
AT_CHECK([GREP -q "lola: done" stderr])
AT_KEYWORDS(reporter)
AT_CLEANUP

AT_SETUP([ReporterStream: file])
AT_CHECK([cp TESTFILES/garavel.lola .])
AT_CHECK([cat garavel.lola | LOLA --reporter=stream --verbose >& output],0)
AT_CHECK([test -f output])
AT_CHECK([GREP -q "lola: done" output])
AT_KEYWORDS(reporter)
AT_CLEANUP

AT_SETUP([ReporterSocket: sending only])
AT_CHECK([cp TESTFILES/garavel.lola .])
AT_CHECK([cat garavel.lola | LOLA --reporter=socket],0,ignore,ignore)
AT_KEYWORDS(reporter)
AT_CLEANUP

AT_SETUP([ReporterSocket: sending/receiving])
AT_CHECK([cp TESTFILES/garavel.lola .])
AT_CHECK([LISTENER > listener.log &],0)
AT_CHECK([cat garavel.lola | LOLA --reporter=socket --verbose],0,ignore,ignore)
AT_CHECK([killall listener],0,stdout,stderr)
AT_CHECK([GREP -q "lola: caught signal" stderr])
AT_CHECK([GREP -q "finished parsing" listener.log])
AT_KEYWORDS(reporter)
AT_CLEANUP



############################################################################
AT_BANNER([Memory Management])
############################################################################

AT_SETUP([Checking for memory leaks: Garavel])
AT_CHECK([cp TESTFILES/garavel.lola .])
AT_CHECK([VALGRIND --leak-check=full --show-reachable=yes LOLA_RAW < garavel.lola],0,ignore,stderr)
AT_CHECK([GREP -q -E "definitely lost: 0 bytes in 0 blocks|All heap blocks were freed -- no leaks are possible" stderr])
AT_KEYWORDS(valgrind)
AT_CLEANUP

AT_SETUP([Checking for memory leaks: Phils 1000])
AT_CHECK([cp TESTFILES/phils1000.lola .])
AT_CHECK([VALGRIND --leak-check=full --show-reachable=yes LOLA_RAW < phils1000.lola],0,ignore,stderr)
AT_CHECK([GREP -q -E "definitely lost: 0 bytes in 0 blocks|All heap blocks were freed -- no leaks are possible" stderr])
AT_KEYWORDS(valgrind)
AT_CLEANUP
