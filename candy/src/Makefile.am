# the main program
bin_PROGRAMS = candy

# the plain sources you need to compile (no generated code)
candy_SOURCES = og-syntax.yy og-lexic.ll \
                cf-syntax.yy cf-lexic.ll \
                nf-syntax.yy nf-lexic.ll \
                Output.h Output.cc \
                verbose.h verbose.cc \
                settings.h \
                Graph.cc Graph.h \
                Node.cc Node.h \
                Formula.cc Formula.h \
                Event.h \
                main.cc config.h \
                cmdline.c cmdline.h

#BUILT_SOURCES = cmdline.c og-syntax.cc cf-syntax.cc nf-syntax.cc
#EXTRA_DIST = cmdline.ggo og-syntax.h cf-syntax.h nf-syntax.h
#MAINTAINERCLEANFILES = cmdline.c cmdline.h og-syntax.h cf-syntax.h nf-syntax.h

################################################################
# use GNU gengetopt to create command line parser
################################################################
#cmdline.c: cmdline.ggo
#	$(GENGETOPT) --input=cmdline.ggo
#
#
#doxygen:
#	cd ../doc ; doxygen

#############################################################################
# EVERYTHING BELOW THIS LINE IS GENERIC - YOU MUST NOT CHANGE ANYTHING BELOW
#############################################################################

#---------------------------------------------------#
# GENERIC: initialization for other generic targets #
#---------------------------------------------------#
BUILT_SOURCES =
EXTRA_DIST =
MAINTAINERCLEANFILES =
DISTCLEANFILES = 

#--------------------------------------------------------------#
# GENERIC: organize distribution and cleaning of Bison sources #
#--------------------------------------------------------------#
BISON_FILES = $(filter %.yy,$(candy_SOURCES))
BUILT_SOURCES += $(BISON_FILES:.yy=.cc)
EXTRA_DIST += $(BISON_FILES:.yy=.h)
MAINTAINERCLEANFILES += $(BISON_FILES:.yy=.h)

#----------------------------------------------------------------#
# GENERIC: copy the content of the config.log file to a C header #
#----------------------------------------------------------------#
config-log.h: $(top_builddir)/config.log
	echo "/// the content of the file 'config.log' generated by the configure script" > $@
	echo "#define CONFIG_LOG \\" >> $@
	$(SED) -e 's/\\/\\\\/g' $< | $(SED) -e 's/"/\\"/g' | $(AWK) '{print "\""$$0"\\n\"\\"}' >> $@
	echo '""' >> $@
	echo "" >> $@
BUILT_SOURCES += config-log.h
DISTCLEANFILES += config-log.h

#----------------------------------------------------------#
# GENERIC: use GNU gengetopt to create command line parser #
#----------------------------------------------------------#
.ggo.c:
	$(GENGETOPT) --input=$<
GENGETOPT_FILES = cmdline.ggo
BUILT_SOURCES += $(GENGETOPT_FILES:.ggo=.c)
EXTRA_DIST += $(GENGETOPT_FILES)
MAINTAINERCLEANFILES += $(GENGETOPT_FILES:.ggo=.c) $(GENGETOPT_FILES:.ggo=.h)
