# This is the only input file for gengetopt.

# arguments for gengetopt ... what do they do?
# --long-help: long usage line in help
# --include-getopt: adds code for getopt_long in generated C file
# --show-required: output of help will specify which options are mandatory
# --unamed-opts=FILE: accept options without names
# --no-handle-error: TODO
# --conf-parser: TODO
args "--include-getopt --show-required --unamed-opts=FILE --no-handle-error --conf-parser"

description "About Anastasia:"
purpose "Analyzer for siphons & traps in arbitrary nets.\n This programm checks properties of nets based on siphons and traps.\n\n  Report bugs to anastasia@service-technology.org.\n  Visit Anastasia's home page at http://service-technology.org/anastasia"

# <<-- CHANGE START (parameters) -->>
section "Input/Output"
sectiondesc="Anastasia reads input from standard input if no input file name is given. Output is always directed to standard output; redirect to a file if necessary.\n"

defgroup "Input Format" groupdesc="Choose an option according to the format of the input Petri net:"
groupoption "lola" -
  "Assume the input net to be in LoLA format."
  group="Input Format"

groupoption "owfn" -
  "Assume the input net to be in open net format."
  group="Input Format"

groupoption "pnml" -
  "Assume the input net to be in PNML format (default)."
  group="Input Format"

defgroup "Output Format" groupdesc="Choose an option for a different output format:"

groupoption "snoopy" y
  "Print the output in the format of Snoopy."
  details="This option is used when the output should be read by the tool Snoopy.\n"
  group="Output Format"
  
section "Properties"
defgroup "Property" groupdesc="Select the general property to be checked:" required

groupoption "siphon" s
  "Check for a (non-empty) siphon."
  group="Property"

groupoption "trap" t
  "Check for a (non-empty) trap."
  group="Property"

groupoption "usiphon" u
  "Check for an unmarked siphon."
  group="Property"

groupoption "msiphon" -
  "Check for a marked siphon."
  group="Property"

groupoption "utrap" -
  "Check for an unmarked trap."
  group="Property"

groupoption "mtrap" m
  "Check for a marked trap."
  group="Property"

groupoption "swomt" C
  "Check for a siphon without a marked trap, also known as Commoner-Hack property."
  group="Property"

groupoption "swot" S
  "Check for a siphon without a trap."
  group="Property"

groupoption "formula" f
  "Read a user-defined property from a file. See documentation for the file format."
  string
  typestr="FILENAME"
  group="Property"

section "Modifiers"
sectiondesc="Modify the property using the following options:"

option "include" i
  "The given place should be contained in the final result. Can be specified multiple times."
  string
  typestr="PLACE"
  optional
  multiple

option "exclude" e
  "The given place should not be contained in the final result. Can be specified multiple times."
  string
  typestr="PLACE"
  optional
  multiple

option "cover" c
  "Each place is included (-i) once, yielding one solution per place that may appear in a solution set."
  flag off

option "witness" w
  "If the result is a siphon without a marked trap in a free-choice net, a witness path (firing sequence) is computed showing that the net is not live."
  flag off

option "loopnet" l
  "The Petri net itself is modified. A new transition is created, its preset consists of all places so far having an empty postset, its postset of those having an empty preset. Useful for workflow nets."
  flag off

defgroup "MinMax" groupdesc="Use these options to minimize or maximize the result so that the property still holds:"

groupoption "min" 0
  "Minimize the result (-i is respected, but not -c)."
  group="MinMax"

groupoption "pmin" 1
  "Only used with option --cover. Minimize the result but require that the included place stays in the result. The result may thus be non-minimal."
  group="MinMax" 

groupoption "max" 2
  "Maximize the result (-e is respected)."
  group="MinMax"


section "Configuration"
sectiondesc="Configurations are not required at the moment.\n"

option "config" -
  "Read configuration from file."
  details="If no file is given, Anastasia first tries to parse file `anastasia.conf' from the sysconf directory (usually `/usr/local/etc'; written in case Anastasia was installed) and then from the current working directory. If neither file was found, the standard values are assumed.\n"
  string
  typestr="FILE"
  optional

option "tmpfile" -
  "Set the path and name of temporary files."
  details="The filename Anastasia should use to create temporary files. The filename should end with `XXXXXX' which is replaced at runtime with a random string.\n"
  string
  typestr="FILENAME"
  default="/tmp/anastasia-XXXXXX"
  optional
  hidden

option "noClean" -
  "Do not delete temporary files."
  details="Any temporary files created will be kept after Anastasia terminates.\n"
  flag off


section "Debugging"
sectiondesc="These options control how much debug output Anastasia creates.\n"

option "verbose" v
  "Show verbose messages."
  details="Show verbose information reporting intermediate steps.\n"
  flag off

option "clauses" -
  "Show the clauses of the constructed formula."
  details="Clauses are written to stdout unless a filename is given. It is not advised to use this option together with --cover. Each clause is a disjunction of literals, a leading minus showing a negation.\n"
  string
  typestr="FILENAME"
  argoptional
  optional

option "nocopy" -
  "Do not allow Anastasia to maintain a copy of the formula for the option --cover."
  details="If preserving memory becomes more important than runtime, use this option.\n"
  flag off

option "bug" -
  "Write configuration information into a file `bug.log'."
  details="This output file gives information on the machine Anastasia was configured and compiled which should help to fix bugs. The file `bug.log' should be attached to bug reports.\n"
  flag off
  hidden

option "stats" -
  "Display time and memory consumption on termination."
  details="The time is measured using the function clock(3). The memory usage is measured using the ps(1) command. Note that memory consumption contains a small overhead.\n"
  flag off
  hidden
# <<-- CHANGE END -->>
