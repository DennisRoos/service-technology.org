bin_PROGRAMS = fiona2wendy wendy2fiona \
	       wendyFormula2bits \
	       ig2sa sa2ig

COMMON = main.cc config.h \
         cmdline.c cmdline.h

VERBOSE = verbose.cc verbose.h

fiona2wendy_SOURCES = syntax-f2w.yy lexic-f2w.ll \
                      $(COMMON) $(VERBOSE)

wendy2fiona_SOURCES = syntax-w2f.yy lexic-w2f.ll \
		      $(COMMON)

wendyFormula2bits_SOURCES = syntax-wf2b.yy lexic-wf2b.ll \
			    types-wf2b.h \
		            $(COMMON)

ig2sa_SOURCES = syntax-ig2sa.yy lexic-ig2sa.ll \
		$(COMMON)

sa2ig_SOURCES = syntax-sa2ig.yy lexic-sa2ig.ll \
		$(COMMON)


#############################################################################
# EVERYTHING BELOW THIS LINE IS GENERIC - YOU MUST NOT CHANGE ANYTHING BELOW
#############################################################################

#---------------------------------------------------#
# GENERIC: initialization for other generic targets #
#---------------------------------------------------#
BUILT_SOURCES =
EXTRA_DIST =
MAINTAINERCLEANFILES =
DISTCLEANFILES = 

#--------------------------------------------------------------#
# GENERIC: organize distribution and cleaning of Bison sources #
#--------------------------------------------------------------#
BISON_FILES = $(filter %.yy,$(fiona2wendy_SOURCES))
BISON_FILES += $(filter %.yy,$(wendy2fiona_SOURCES))
BISON_FILES += $(filter %.yy,$(wendyFormula2bits_SOURCES))
BISON_FILES += $(filter %.yy,$(ig2sa_SOURCES))
BISON_FILES += $(filter %.yy,$(sa2ig_SOURCES))
BUILT_SOURCES += $(BISON_FILES:.yy=.cc)
EXTRA_DIST += $(BISON_FILES:.yy=.h)
MAINTAINERCLEANFILES += $(BISON_FILES:.yy=.h)

#----------------------------------------------------------------#
# GENERIC: copy the content of the config.log file to a C header #
#----------------------------------------------------------------#
config-log.h: $(top_builddir)/config.log
	$(AM_V_GEN)
	$(AM_V_at)echo "/// the content of the file 'config.log' generated by the configure script" > $@
	$(AM_V_at)echo "#define CONFIG_LOG \\" >> $@
	$(AM_V_at)$(SED) -e 's/\\/\\\\/g' $< | $(SED) -e 's/"/\\"/g' | $(AWK) '{print "\""$$0"\\n\"\\"}' >> $@
	$(AM_V_at)echo '""' >> $@
	$(AM_V_at)echo "" >> $@
BUILT_SOURCES += config-log.h
DISTCLEANFILES += config-log.h

#----------------------------------------------------------#
# GENERIC: use GNU gengetopt to create command line parser #
#----------------------------------------------------------#
.ggo.c:
	$(AM_V_GEN)$(GENGETOPT) --input=$<
GENGETOPT_FILES = cmdline.ggo
BUILT_SOURCES += $(GENGETOPT_FILES:.ggo=.c)
EXTRA_DIST += $(GENGETOPT_FILES)
MAINTAINERCLEANFILES += $(GENGETOPT_FILES:.ggo=.c) $(GENGETOPT_FILES:.ggo=.h)
