# the main program
bin_PROGRAMS = stacia

# the plain sources you need to compile (no generated code)
# <<-- CHANGE START (the program's sources) -->>
stacia_SOURCES = main.cc types.h \
		imatrix.cc imatrix.h \
		subnet.cc subnet.h \
		siphontrap.cc siphontrap.h \
		subnetinfo.cc subnetinfo.h \
		matchings.cc matchings.h \
		formula.cc formula.h \
		sthread.cc sthread.h \
		netdata.cc netdata.h \
		verbose.cc verbose.h \
		cmdline.c cmdline.h \
		Output.cc Output.h
# <<-- CHANGE END -->>

# the configuration files
sysconf_DATA = stacia.conf

# pass the sysconfdir to Satcia (ugly, but see http://www.gnu.org/software/autoconf/manual/autoconf.html#Defining-Directories)
stacia_CPPFLAGS = -DSYSCONFDIR=\"$(sysconfdir)\" -I$(top_srcdir)/libs
stacia_LDADD = $(top_builddir)/libs/minisat/libminisat.a -lpthread

# only add the local Petri net API if necessary
if COMPILE_PNAPI
stacia_CPPFLAGS += -I$(top_srcdir)/libs
stacia_LDADD += $(top_builddir)/libs/pnapi/libpnapi.a
endif


#############################################################################
# EVERYTHING BELOW THIS LINE IS GENERIC - YOU MUST NOT CHANGE ANYTHING BELOW
#############################################################################

#---------------------------------------------------#
# GENERIC: initialization for other generic targets #
#---------------------------------------------------#
BUILT_SOURCES =
EXTRA_DIST =
MAINTAINERCLEANFILES =
DISTCLEANFILES = 

#--------------------------------------------------------------#
# GENERIC: organize distribution and cleaning of Bison sources #
#--------------------------------------------------------------#
BISON_FILES = $(filter %.yy,$(stacia_SOURCES))
BUILT_SOURCES += $(BISON_FILES:.yy=.cc)
EXTRA_DIST += $(BISON_FILES:.yy=.h)
MAINTAINERCLEANFILES += $(BISON_FILES:.yy=.h)

#----------------------------------------------------------------#
# GENERIC: copy the content of the config.log file to a C header #
#----------------------------------------------------------------#
config-log.h: $(top_builddir)/config.log
	echo "/// the content of the file 'config.log' generated by the configure script" > $@
	echo "#define CONFIG_LOG \\" >> $@
	$(SED) -e 's/\\/\\\\/g' $< | $(SED) -e 's/"/\\"/g' | $(AWK) '{print "\""$$0"\\n\"\\"}' >> $@
	echo '""' >> $@
	echo "" >> $@
BUILT_SOURCES += config-log.h
DISTCLEANFILES += config-log.h

#----------------------------------------------------------#
# GENERIC: use GNU gengetopt to create command line parser #
#----------------------------------------------------------#
.ggo.c:
	$(GENGETOPT) --input=$<
GENGETOPT_FILES = cmdline.ggo
BUILT_SOURCES += $(GENGETOPT_FILES:.ggo=.c)
EXTRA_DIST += $(GENGETOPT_FILES)
MAINTAINERCLEANFILES += $(GENGETOPT_FILES:.ggo=.c) $(GENGETOPT_FILES:.ggo=.h)
