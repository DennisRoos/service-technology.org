{
  generated by: BPEL2oWFN 2.0 (see http://www.informatik.hu-berlin.de/top/tools4bpel/bpel2owfn)
  input file:   `olive_prep.bpel' (process `oliveProcess')
  invocation:   `bpel2owfn -i olive_prep.bpel -m petrinet -p simplify -p communicationonly -p cyclicwhile -f owfn -f lola -o'
  net size:     |P|=12, |P_in|= 3, |P_out|= 3, |T|=6, |F|=20
}

PLACE
  INTERNAL
    p1, p2, p3, p4, p5, p6;

  INPUT
    in.OilProviderPlnk.getPrice {$ ON_LOOP = TRUE $},
    in.OilProviderPlnk.order,
    in.OliveOilPlnk.order;

  OUTPUT
    out.OilProviderPlnk.getPrice {$ ON_LOOP = TRUE $},
    out.OilProviderPlnk.order,
    out.OliveOilPlnk.order;


INITIALMARKING
  p2 {initial place};

FINALMARKING
  p6 {final place};


TRANSITION t1 { output }
  CONSUME p1;
  PRODUCE out.OilProviderPlnk.getPrice, p4;

TRANSITION t2 { input }
  CONSUME in.OilProviderPlnk.getPrice, p3;
  PRODUCE p1;

TRANSITION t3 { output }
  CONSUME p1;
  PRODUCE out.OilProviderPlnk.order, p5;

TRANSITION t4 { input/output }
  CONSUME in.OliveOilPlnk.order, p2;
  PRODUCE out.OilProviderPlnk.getPrice, p3;

TRANSITION t5 { input }
  CONSUME in.OilProviderPlnk.getPrice, p4;
  PRODUCE p1;

TRANSITION t6 { input/output }
  CONSUME in.OilProviderPlnk.order, p5;
  PRODUCE out.OliveOilPlnk.order, p6;


{ END OF FILE `olive_prep.owfn' }
