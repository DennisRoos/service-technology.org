{
  generated by: BPEL2oWFN 2.0 (see http://www.informatik.hu-berlin.de/top/tools4bpel/bpel2owfn)
  input file:   `HelpDeskServiceRequest.bpel' (process `HelpDeskServiceRequest')
  invocation:   `bpel2owfn -i HelpDeskServiceRequest.bpel -m petrinet -p simplify -p communicationonly -p cyclicwhile -f owfn -f lola -o'
  net size:     |P|=15, |P_in|= 4, |P_out|= 4, |T|=8, |F|=24
}

PLACE
  INTERNAL
    p1, p2, p3, p4, p5, p6, p7;

  INPUT
    in.TaskActionHandler.onTaskCompleted {$ ON_LOOP = TRUE $},
    in.TaskManagerService.initiateTask,
    in.TaskRoutingService.escalateTaskOnExpiration {$ ON_LOOP = TRUE $},
    in.client.initiate;

  OUTPUT
    out.TaskActionHandler.initiate {$ ON_LOOP = TRUE $},
    out.TaskManagerService.initiateTask,
    out.TaskRoutingService.escalateTaskOnExpiration {$ ON_LOOP = TRUE $},
    out.client.onResult;


INITIALMARKING
  p1 {initial place};

FINALMARKING
  p7 {final place};


TRANSITION t1 { output }
  CONSUME p3;
  PRODUCE out.TaskActionHandler.initiate, p4;

TRANSITION t2 { output }
  CONSUME p3;
  PRODUCE out.client.onResult, p7;

TRANSITION t3 { input }
  CONSUME in.TaskManagerService.initiateTask, p2;
  PRODUCE p3;

TRANSITION t4 { output }
  CONSUME p6;
  PRODUCE out.TaskRoutingService.escalateTaskOnExpiration, p5;

TRANSITION t5 { input }
  CONSUME in.TaskActionHandler.onTaskCompleted, p4;
  PRODUCE p6;

TRANSITION t6 { input }
  CONSUME in.TaskRoutingService.escalateTaskOnExpiration, p5;
  PRODUCE p3;

TRANSITION t7
  CONSUME p6;
  PRODUCE p3;

TRANSITION t8 { input/output }
  CONSUME in.client.initiate, p1;
  PRODUCE out.TaskManagerService.initiateTask, p2;


{ END OF FILE `HelpDeskServiceRequest.owfn' }
