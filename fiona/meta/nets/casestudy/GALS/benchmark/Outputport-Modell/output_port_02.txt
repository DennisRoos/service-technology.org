{Output Port des zweiten Wrappers}


{01: konkret}
{02: OR entfernt, weil im wrapper_01 auch OR im OP weggelassen.}
{    INT_CLK = LCLKM or REQ_INT}

PLACE
    {1. D-FF mit D beliebig und RST}
    op.ff1.p.INT_CLK,  {clk}  {Input-Flanke}
    op.ff1.p.n_INT_CLK,  {n_clk}
    op.ff1.p.DATAV_OUT,  {d}
    op.ff1.p.n_DATAV_OUT,  {n_d}
    op.ff1.p.rst,
    op.ff1.p.n_rst,
    {op.ff1.p.q => op.oc.p.DONV}  {Output-Flanke}
    op.ff1.p.pegel_0_0_0_0,  {Pegel: (clk, d, rst, q)}
    op.ff1.p.pegel_0_0_0_1,
    op.ff1.p.pegel_0_0_1_0,
    op.ff1.p.pegel_0_1_0_0,
    op.ff1.p.pegel_0_1_0_1,
    op.ff1.p.pegel_0_1_1_0,
    op.ff1.p.pegel_1_0_0_0,
    op.ff1.p.pegel_1_0_0_1,
    op.ff1.p.pegel_1_0_1_0,
    op.ff1.p.pegel_1_1_0_0,
    op.ff1.p.pegel_1_1_0_1,
    op.ff1.p.pegel_1_1_1_0,

    {2. D-FF mit D beliebig und RST}
    op.ff2.p.INT_CLK,  {clk}  {Input-Flanke}
    op.ff2.p.n_INT_CLK,  {n_clk}
    op.ff2.p.DATAV_OUT,  {d}
    op.ff2.p.n_DATAV_OUT,  {n_d}
    op.ff2.p.rst,
    op.ff2.p.n_rst,
    {op.ff2.p.q => op.oc.p.DOV}  {Output-Flanke}
    op.ff2.p.pegel_0_0_0_0,  {Pegel: (clk, d, rst, q)}
    op.ff2.p.pegel_0_0_0_1,
    op.ff2.p.pegel_0_0_1_0,
    op.ff2.p.pegel_0_1_0_0,
    op.ff2.p.pegel_0_1_0_1,
    op.ff2.p.pegel_0_1_1_0,
    op.ff2.p.pegel_1_0_0_0,
    op.ff2.p.pegel_1_0_0_1,
    op.ff2.p.pegel_1_0_1_0,
    op.ff2.p.pegel_1_1_0_0,
    op.ff2.p.pegel_1_1_0_1,
    op.ff2.p.pegel_1_1_1_0,

    {AND im OP}
    op.and.p.a,  {Input-Flanken}
    op.and.p.n_a,
    op.and.p.ACK_B,  {b}
    op.and.p.n_ACK_B,  {n_b}
    {op.and.p.out => op.ff2.p.rst}  {Output-Flanke}
    op.and.p.pegel_0_0,  {alte Pegel}
    op.and.p.pegel_0_1,
    op.and.p.pegel_1_0,
    op.and.p.pegel_1_1,

    {Output Controller im OP}
    op.oc.p.0,  {Zustände des Output Controllers}
    op.oc.p.1,
    op.oc.p.2,
    op.oc.p.3,
    op.oc.p.DOV,
    op.oc.p.n_DOV,
    op.oc.p.DONV,
    op.oc.p.n_DONV,
    op.oc.p.ACK_B,
    op.oc.p.n_ACK_B,
    op.oc.p.REQ_B,
    op.oc.p.n_REQ_B,
    op.oc.p.STRETCH,
    op.oc.p.n_STRETCH,
    op.oc.p.ACK_INT,
    op.oc.p.n_ACK_INT;


MARKING
    op.ff1.p.n_INT_CLK: 1,
    op.ff1.p.n_DATAV_OUT: 1,
    op.ff1.p.n_rst: 1,
    op.ff1.p.pegel_0_1_1_0: 1, {d- und rst-Eingaenge negiert}

    op.ff2.p.n_INT_CLK: 1,
    op.ff2.p.n_DATAV_OUT: 1,
    op.ff2.p.n_rst: 1,
    op.ff2.p.pegel_0_0_0_0: 1,

    op.and.p.n_a: 1,
    op.and.p.n_ACK_B: 1,
    op.and.p.pegel_1_0: 1,  {a=1, weil Ausgang des davorliegenden OR negiert}

    op.oc.p.0: 1,
    op.oc.p.n_DOV: 1,
    op.oc.p.n_DONV: 1,
    op.oc.p.n_ACK_B: 1,
    op.oc.p.n_REQ_B: 1,
    op.oc.p.n_STRETCH: 1,
    op.oc.p.n_ACK_INT: 1;



{1. D-FF mit D beliebig und RST im OP}

TRANSITION op.ff1.t.d0_0_1_0_0
CONSUME op.ff1.p.DATAV_OUT: 1, op.ff1.p.pegel_0_1_0_0: 1;
PRODUCE op.ff1.p.pegel_0_0_0_0: 1, op.ff1.p.n_DATAV_OUT: 1;

TRANSITION op.ff1.t.d0_0_1_0_1
CONSUME op.ff1.p.DATAV_OUT: 1, op.ff1.p.pegel_0_1_0_1: 1;
PRODUCE op.ff1.p.pegel_0_0_0_1: 1, op.ff1.p.n_DATAV_OUT: 1;

TRANSITION op.ff1.t.d0_0_1_1_0
CONSUME op.ff1.p.DATAV_OUT: 1, op.ff1.p.pegel_0_1_1_0: 1;
PRODUCE op.ff1.p.pegel_0_0_1_0: 1, op.ff1.p.n_DATAV_OUT: 1;

TRANSITION op.ff1.t.d1_0_0_0_0
CONSUME op.ff1.p.DATAV_OUT: 1, op.ff1.p.pegel_0_0_0_0: 1;
PRODUCE op.ff1.p.pegel_0_1_0_0: 1, op.ff1.p.n_DATAV_OUT: 1;

TRANSITION op.ff1.t.d1_0_0_0_1
CONSUME op.ff1.p.DATAV_OUT: 1, op.ff1.p.pegel_0_0_0_1: 1;
PRODUCE op.ff1.p.pegel_0_1_0_1: 1, op.ff1.p.n_DATAV_OUT: 1;

TRANSITION op.ff1.t.d1_0_0_1_0
CONSUME op.ff1.p.DATAV_OUT: 1, op.ff1.p.pegel_0_0_1_0: 1;
PRODUCE op.ff1.p.pegel_0_1_1_0: 1, op.ff1.p.n_DATAV_OUT: 1;


TRANSITION op.ff1.t.d0_1_1_0_0
CONSUME op.ff1.p.DATAV_OUT: 1, op.ff1.p.pegel_1_1_0_0: 1;
PRODUCE op.ff1.p.pegel_1_0_0_0: 1, op.ff1.p.n_DATAV_OUT: 1;

TRANSITION op.ff1.t.d0_1_1_0_1
CONSUME op.ff1.p.DATAV_OUT: 1, op.ff1.p.pegel_1_1_0_1: 1;
PRODUCE op.ff1.p.pegel_1_0_0_1: 1, op.ff1.p.n_DATAV_OUT: 1;

TRANSITION op.ff1.t.d0_1_1_1_0
CONSUME op.ff1.p.DATAV_OUT: 1, op.ff1.p.pegel_1_1_1_0: 1;
PRODUCE op.ff1.p.pegel_1_0_1_0: 1, op.ff1.p.n_DATAV_OUT: 1;

TRANSITION op.ff1.t.d1_1_0_0_0
CONSUME op.ff1.p.DATAV_OUT: 1, op.ff1.p.pegel_1_0_0_0: 1;
PRODUCE op.ff1.p.pegel_1_1_0_0: 1, op.ff1.p.n_DATAV_OUT: 1;

TRANSITION op.ff1.t.d1_1_0_0_1
CONSUME op.ff1.p.DATAV_OUT: 1, op.ff1.p.pegel_1_0_0_1: 1;
PRODUCE op.ff1.p.pegel_1_1_0_1: 1, op.ff1.p.n_DATAV_OUT: 1;

TRANSITION op.ff1.t.d1_1_0_1_0
CONSUME op.ff1.p.DATAV_OUT: 1, op.ff1.p.pegel_1_0_1_0: 1;
PRODUCE op.ff1.p.pegel_1_1_1_0: 1, op.ff1.p.n_DATAV_OUT: 1;


TRANSITION op.ff1.t.clk0_1_0_0_0
CONSUME op.ff1.p.INT_CLK: 1, op.ff1.p.pegel_1_0_0_0: 1;
PRODUCE op.ff1.p.pegel_0_0_0_0: 1, op.ff1.p.n_INT_CLK: 1;

TRANSITION op.ff1.t.clk0_1_0_0_1
CONSUME op.ff1.p.INT_CLK: 1, op.ff1.p.pegel_1_0_0_1: 1;
PRODUCE op.ff1.p.pegel_0_0_0_1: 1, op.ff1.p.n_INT_CLK: 1;

TRANSITION op.ff1.t.clk0_1_0_1_0
CONSUME op.ff1.p.INT_CLK: 1, op.ff1.p.pegel_1_0_1_0: 1;
PRODUCE op.ff1.p.pegel_0_0_1_0: 1, op.ff1.p.n_INT_CLK: 1;

TRANSITION op.ff1.t.clk0_1_1_0_0
CONSUME op.ff1.p.INT_CLK: 1, op.ff1.p.pegel_1_1_0_0: 1;
PRODUCE op.ff1.p.pegel_0_1_0_0: 1, op.ff1.p.n_INT_CLK: 1;

TRANSITION op.ff1.t.clk0_1_1_0_1
CONSUME op.ff1.p.INT_CLK: 1, op.ff1.p.pegel_1_1_0_1: 1;
PRODUCE op.ff1.p.pegel_0_1_0_1: 1, op.ff1.p.n_INT_CLK: 1;

TRANSITION op.ff1.t.clk0_1_1_1_0
CONSUME op.ff1.p.INT_CLK: 1, op.ff1.p.pegel_1_1_1_0: 1;
PRODUCE op.ff1.p.pegel_0_1_1_0: 1, op.ff1.p.n_INT_CLK: 1;


TRANSITION op.ff1.t.clk1_0_0_0_0
CONSUME op.ff1.p.INT_CLK: 1, op.ff1.p.pegel_0_0_0_0: 1;
PRODUCE op.ff1.p.pegel_1_0_0_0: 1, op.ff1.p.n_INT_CLK: 1;

TRANSITION op.ff1.t.clk1_0_0_0_1
CONSUME op.ff1.p.INT_CLK: 1, op.ff1.p.pegel_0_0_0_1: 1, op.oc.p.n_DONV: 1;
PRODUCE op.ff1.p.pegel_1_0_0_0: 1, op.oc.p.DONV: 1, op.ff1.p.n_INT_CLK: 1;

TRANSITION op.ff1.t.clk1_0_0_1_0
CONSUME op.ff1.p.INT_CLK: 1, op.ff1.p.pegel_0_0_1_0: 1;
PRODUCE op.ff1.p.pegel_1_0_1_0: 1, op.ff1.p.n_INT_CLK: 1;

TRANSITION op.ff1.t.clk1_0_1_0_0
CONSUME op.ff1.p.INT_CLK: 1, op.ff1.p.pegel_0_1_0_0: 1, op.oc.p.n_DONV: 1;
PRODUCE op.ff1.p.pegel_1_1_0_1: 1, op.oc.p.DONV: 1, op.ff1.p.n_INT_CLK: 1;

TRANSITION op.ff1.t.clk1_0_1_0_1
CONSUME op.ff1.p.INT_CLK: 1, op.ff1.p.pegel_0_1_0_1: 1;
PRODUCE op.ff1.p.pegel_1_1_0_1: 1, op.ff1.p.n_INT_CLK: 1;

TRANSITION op.ff1.t.clk1_0_1_1_0
CONSUME op.ff1.p.INT_CLK: 1, op.ff1.p.pegel_0_1_1_0: 1;
PRODUCE op.ff1.p.pegel_1_1_1_0: 1, op.ff1.p.n_INT_CLK: 1;


TRANSITION op.ff1.t.rst0_0_0_1_0
CONSUME op.ff1.p.rst: 1, op.ff1.p.pegel_0_0_1_0: 1;
PRODUCE op.ff1.p.pegel_0_0_0_0: 1, op.ff1.p.n_rst: 1;

TRANSITION op.ff1.t.rst0_0_1_1_0
CONSUME op.ff1.p.rst: 1, op.ff1.p.pegel_0_1_1_0: 1;
PRODUCE op.ff1.p.pegel_0_1_0_0: 1, op.ff1.p.n_rst: 1;

TRANSITION op.ff1.t.rst1_0_0_0_0
CONSUME op.ff1.p.rst: 1, op.ff1.p.pegel_0_0_0_0: 1;
PRODUCE op.ff1.p.pegel_0_0_1_0: 1, op.ff1.p.n_rst: 1;

TRANSITION op.ff1.t.rst1_0_0_0_1
CONSUME op.ff1.p.rst: 1, op.ff1.p.pegel_0_0_0_1: 1, op.oc.p.n_DONV: 1;
PRODUCE op.ff1.p.pegel_0_0_1_0: 1, op.oc.p.DONV: 1, op.ff1.p.n_rst: 1;

TRANSITION op.ff1.t.rst1_0_1_0_0
CONSUME op.ff1.p.rst: 1, op.ff1.p.pegel_0_1_0_0: 1;
PRODUCE op.ff1.p.pegel_0_1_1_0: 1, op.ff1.p.n_rst: 1;

TRANSITION op.ff1.t.rst1_0_1_0_1
CONSUME op.ff1.p.rst: 1, op.ff1.p.pegel_0_1_0_1: 1, op.oc.p.n_DONV: 1;
PRODUCE op.ff1.p.pegel_0_1_1_0: 1, op.oc.p.DONV: 1, op.ff1.p.n_rst: 1;


TRANSITION op.ff1.t.rst0_1_0_1_0
CONSUME op.ff1.p.rst: 1, op.ff1.p.pegel_1_0_1_0: 1;
PRODUCE op.ff1.p.pegel_1_0_0_0: 1, op.ff1.p.n_rst: 1;

TRANSITION op.ff1.t.rst0_1_1_1_0
CONSUME op.ff1.p.rst: 1, op.ff1.p.pegel_1_1_1_0: 1;
PRODUCE op.ff1.p.pegel_1_1_0_0: 1, op.ff1.p.n_rst: 1;

TRANSITION op.ff1.t.rst1_1_0_0_0
CONSUME op.ff1.p.rst: 1, op.ff1.p.pegel_1_0_0_0: 1;
PRODUCE op.ff1.p.pegel_1_0_1_0: 1, op.ff1.p.n_rst: 1;

TRANSITION op.ff1.t.rst1_1_0_0_1
CONSUME op.ff1.p.rst: 1, op.ff1.p.pegel_1_0_0_1: 1, op.oc.p.n_DONV: 1;
PRODUCE op.ff1.p.pegel_1_0_1_0: 1, op.oc.p.DONV: 1, op.ff1.p.n_rst: 1;

TRANSITION op.ff1.t.rst1_1_1_0_0
CONSUME op.ff1.p.rst: 1, op.ff1.p.pegel_1_1_0_0: 1;
PRODUCE op.ff1.p.pegel_1_1_1_0: 1, op.ff1.p.n_rst: 1;

TRANSITION op.ff1.t.rst1_1_1_0_1
CONSUME op.ff1.p.rst: 1, op.ff1.p.pegel_1_1_0_1: 1, op.oc.p.n_DONV: 1;
PRODUCE op.ff1.p.pegel_1_1_1_0: 1, op.oc.p.DONV: 1, op.ff1.p.n_rst: 1;



{2. D-FF mit D beliebig und RST im OP}

TRANSITION op.ff2.t.d0_0_1_0_0
CONSUME op.ff2.p.DATAV_OUT: 1, op.ff2.p.pegel_0_1_0_0: 1;
PRODUCE op.ff2.p.pegel_0_0_0_0: 1, op.ff2.p.n_DATAV_OUT: 1;

TRANSITION op.ff2.t.d0_0_1_0_1
CONSUME op.ff2.p.DATAV_OUT: 1, op.ff2.p.pegel_0_1_0_1: 1;
PRODUCE op.ff2.p.pegel_0_0_0_1: 1, op.ff2.p.n_DATAV_OUT: 1;

TRANSITION op.ff2.t.d0_0_1_1_0
CONSUME op.ff2.p.DATAV_OUT: 1, op.ff2.p.pegel_0_1_1_0: 1;
PRODUCE op.ff2.p.pegel_0_0_1_0: 1, op.ff2.p.n_DATAV_OUT: 1;

TRANSITION op.ff2.t.d1_0_0_0_0
CONSUME op.ff2.p.DATAV_OUT: 1, op.ff2.p.pegel_0_0_0_0: 1;
PRODUCE op.ff2.p.pegel_0_1_0_0: 1, op.ff2.p.n_DATAV_OUT: 1;

TRANSITION op.ff2.t.d1_0_0_0_1
CONSUME op.ff2.p.DATAV_OUT: 1, op.ff2.p.pegel_0_0_0_1: 1;
PRODUCE op.ff2.p.pegel_0_1_0_1: 1, op.ff2.p.n_DATAV_OUT: 1;

TRANSITION op.ff2.t.d1_0_0_1_0
CONSUME op.ff2.p.DATAV_OUT: 1, op.ff2.p.pegel_0_0_1_0: 1;
PRODUCE op.ff2.p.pegel_0_1_1_0: 1, op.ff2.p.n_DATAV_OUT: 1;


TRANSITION op.ff2.t.d0_1_1_0_0
CONSUME op.ff2.p.DATAV_OUT: 1, op.ff2.p.pegel_1_1_0_0: 1;
PRODUCE op.ff2.p.pegel_1_0_0_0: 1, op.ff2.p.n_DATAV_OUT: 1;

TRANSITION op.ff2.t.d0_1_1_0_1
CONSUME op.ff2.p.DATAV_OUT: 1, op.ff2.p.pegel_1_1_0_1: 1;
PRODUCE op.ff2.p.pegel_1_0_0_1: 1, op.ff2.p.n_DATAV_OUT: 1;

TRANSITION op.ff2.t.d0_1_1_1_0
CONSUME op.ff2.p.DATAV_OUT: 1, op.ff2.p.pegel_1_1_1_0: 1;
PRODUCE op.ff2.p.pegel_1_0_1_0: 1, op.ff2.p.n_DATAV_OUT: 1;

TRANSITION op.ff2.t.d1_1_0_0_0
CONSUME op.ff2.p.DATAV_OUT: 1, op.ff2.p.pegel_1_0_0_0: 1;
PRODUCE op.ff2.p.pegel_1_1_0_0: 1, op.ff2.p.n_DATAV_OUT: 1;

TRANSITION op.ff2.t.d1_1_0_0_1
CONSUME op.ff2.p.DATAV_OUT: 1, op.ff2.p.pegel_1_0_0_1: 1;
PRODUCE op.ff2.p.pegel_1_1_0_1: 1, op.ff2.p.n_DATAV_OUT: 1;

TRANSITION op.ff2.t.d1_1_0_1_0
CONSUME op.ff2.p.DATAV_OUT: 1, op.ff2.p.pegel_1_0_1_0: 1;
PRODUCE op.ff2.p.pegel_1_1_1_0: 1, op.ff2.p.n_DATAV_OUT: 1;


TRANSITION op.ff2.t.clk0_1_0_0_0
CONSUME op.ff2.p.INT_CLK: 1, op.ff2.p.pegel_1_0_0_0: 1;
PRODUCE op.ff2.p.pegel_0_0_0_0: 1, op.ff2.p.n_INT_CLK: 1;

TRANSITION op.ff2.t.clk0_1_0_0_1
CONSUME op.ff2.p.INT_CLK: 1, op.ff2.p.pegel_1_0_0_1: 1;
PRODUCE op.ff2.p.pegel_0_0_0_1: 1, op.ff2.p.n_INT_CLK: 1;

TRANSITION op.ff2.t.clk0_1_0_1_0
CONSUME op.ff2.p.INT_CLK: 1, op.ff2.p.pegel_1_0_1_0: 1;
PRODUCE op.ff2.p.pegel_0_0_1_0: 1, op.ff2.p.n_INT_CLK: 1;

TRANSITION op.ff2.t.clk0_1_1_0_0
CONSUME op.ff2.p.INT_CLK: 1, op.ff2.p.pegel_1_1_0_0: 1;
PRODUCE op.ff2.p.pegel_0_1_0_0: 1, op.ff2.p.n_INT_CLK: 1;

TRANSITION op.ff2.t.clk0_1_1_0_1
CONSUME op.ff2.p.INT_CLK: 1, op.ff2.p.pegel_1_1_0_1: 1;
PRODUCE op.ff2.p.pegel_0_1_0_1: 1, op.ff2.p.n_INT_CLK: 1;

TRANSITION op.ff2.t.clk0_1_1_1_0
CONSUME op.ff2.p.INT_CLK: 1, op.ff2.p.pegel_1_1_1_0: 1;
PRODUCE op.ff2.p.pegel_0_1_1_0: 1, op.ff2.p.n_INT_CLK: 1;


TRANSITION op.ff2.t.clk1_0_0_0_0
CONSUME op.ff2.p.INT_CLK: 1, op.ff2.p.pegel_0_0_0_0: 1;
PRODUCE op.ff2.p.pegel_1_0_0_0: 1, op.ff2.p.n_INT_CLK: 1;

TRANSITION op.ff2.t.clk1_0_0_0_1
CONSUME op.ff2.p.INT_CLK: 1, op.ff2.p.pegel_0_0_0_1: 1, op.oc.p.n_DOV: 1;
PRODUCE op.ff2.p.pegel_1_0_0_0: 1, op.oc.p.DOV: 1, op.ff2.p.n_INT_CLK: 1;

TRANSITION op.ff2.t.clk1_0_0_1_0
CONSUME op.ff2.p.INT_CLK: 1, op.ff2.p.pegel_0_0_1_0: 1;
PRODUCE op.ff2.p.pegel_1_0_1_0: 1, op.ff2.p.n_INT_CLK: 1;

TRANSITION op.ff2.t.clk1_0_1_0_0
CONSUME op.ff2.p.INT_CLK: 1, op.ff2.p.pegel_0_1_0_0: 1, op.oc.p.n_DOV: 1;
PRODUCE op.ff2.p.pegel_1_1_0_1: 1, op.oc.p.DOV: 1, op.ff2.p.n_INT_CLK: 1;

TRANSITION op.ff2.t.clk1_0_1_0_1
CONSUME op.ff2.p.INT_CLK: 1, op.ff2.p.pegel_0_1_0_1: 1;
PRODUCE op.ff2.p.pegel_1_1_0_1: 1, op.ff2.p.n_INT_CLK: 1;

TRANSITION op.ff2.t.clk1_0_1_1_0
CONSUME op.ff2.p.INT_CLK: 1, op.ff2.p.pegel_0_1_1_0: 1;
PRODUCE op.ff2.p.pegel_1_1_1_0: 1, op.ff2.p.n_INT_CLK: 1;


TRANSITION op.ff2.t.rst0_0_0_1_0
CONSUME op.ff2.p.rst: 1, op.ff2.p.pegel_0_0_1_0: 1;
PRODUCE op.ff2.p.pegel_0_0_0_0: 1, op.ff2.p.n_rst: 1;

TRANSITION op.ff2.t.rst0_0_1_1_0
CONSUME op.ff2.p.rst: 1, op.ff2.p.pegel_0_1_1_0: 1;
PRODUCE op.ff2.p.pegel_0_1_0_0: 1, op.ff2.p.n_rst: 1;

TRANSITION op.ff2.t.rst1_0_0_0_0
CONSUME op.ff2.p.rst: 1, op.ff2.p.pegel_0_0_0_0: 1;
PRODUCE op.ff2.p.pegel_0_0_1_0: 1, op.ff2.p.n_rst: 1;

TRANSITION op.ff2.t.rst1_0_0_0_1
CONSUME op.ff2.p.rst: 1, op.ff2.p.pegel_0_0_0_1: 1, op.oc.p.n_DOV: 1;
PRODUCE op.ff2.p.pegel_0_0_1_0: 1, op.oc.p.DOV: 1, op.ff2.p.n_rst: 1;

TRANSITION op.ff2.t.rst1_0_1_0_0
CONSUME op.ff2.p.rst: 1, op.ff2.p.pegel_0_1_0_0: 1;
PRODUCE op.ff2.p.pegel_0_1_1_0: 1, op.ff2.p.n_rst: 1;

TRANSITION op.ff2.t.rst1_0_1_0_1
CONSUME op.ff2.p.rst: 1, op.ff2.p.pegel_0_1_0_1: 1, op.oc.p.n_DOV: 1;
PRODUCE op.ff2.p.pegel_0_1_1_0: 1, op.oc.p.DOV: 1, op.ff2.p.n_rst: 1;


TRANSITION op.ff2.t.rst0_1_0_1_0
CONSUME op.ff2.p.rst: 1, op.ff2.p.pegel_1_0_1_0: 1;
PRODUCE op.ff2.p.pegel_1_0_0_0: 1, op.ff2.p.n_rst: 1;

TRANSITION op.ff2.t.rst0_1_1_1_0
CONSUME op.ff2.p.rst: 1, op.ff2.p.pegel_1_1_1_0: 1;
PRODUCE op.ff2.p.pegel_1_1_0_0: 1, op.ff2.p.n_rst: 1;

TRANSITION op.ff2.t.rst1_1_0_0_0
CONSUME op.ff2.p.rst: 1, op.ff2.p.pegel_1_0_0_0: 1;
PRODUCE op.ff2.p.pegel_1_0_1_0: 1, op.ff2.p.n_rst: 1;

TRANSITION op.ff2.t.rst1_1_0_0_1
CONSUME op.ff2.p.rst: 1, op.ff2.p.pegel_1_0_0_1: 1, op.oc.p.n_DOV: 1;
PRODUCE op.ff2.p.pegel_1_0_1_0: 1, op.oc.p.DOV: 1, op.ff2.p.n_rst: 1;

TRANSITION op.ff2.t.rst1_1_1_0_0
CONSUME op.ff2.p.rst: 1, op.ff2.p.pegel_1_1_0_0: 1;
PRODUCE op.ff2.p.pegel_1_1_1_0: 1, op.ff2.p.n_rst: 1;

TRANSITION op.ff2.t.rst1_1_1_0_1
CONSUME op.ff2.p.rst: 1, op.ff2.p.pegel_1_1_0_1: 1, op.oc.p.n_DOV: 1;
PRODUCE op.ff2.p.pegel_1_1_1_0: 1, op.oc.p.DOV: 1, op.ff2.p.n_rst: 1;



{AND im OP}

TRANSITION op.and.t.a1_pegel_0_0
CONSUME op.and.p.a: 1, op.and.p.pegel_0_0: 1;
PRODUCE op.and.p.pegel_1_0: 1, op.and.p.n_a: 1;

TRANSITION op.and.t.a1_pegel_0_1
CONSUME op.and.p.a: 1, op.and.p.pegel_0_1: 1, op.ff2.p.n_rst: 1;
PRODUCE op.and.p.pegel_1_1: 1, op.ff2.p.rst: 1, op.and.p.n_a: 1;

TRANSITION op.and.t.a0_pegel_1_0
CONSUME op.and.p.a: 1, op.and.p.pegel_1_0: 1;
PRODUCE op.and.p.pegel_0_0: 1, op.and.p.n_a: 1;

TRANSITION op.and.t.a0_pegel_1_1
CONSUME op.and.p.a: 1, op.and.p.pegel_1_1: 1, op.ff2.p.n_rst: 1;
PRODUCE op.and.p.pegel_0_1: 1, op.ff2.p.rst: 1, op.and.p.n_a: 1;


TRANSITION op.and.t.b1_pegel_0_0
CONSUME op.and.p.ACK_B: 1, op.and.p.pegel_0_0: 1;
PRODUCE op.and.p.pegel_0_1: 1, op.and.p.n_ACK_B: 1;

TRANSITION op.and.t.b0_pegel_0_1
CONSUME op.and.p.ACK_B: 1, op.and.p.pegel_0_1: 1;
PRODUCE op.and.p.pegel_0_0: 1, op.and.p.n_ACK_B: 1;

TRANSITION op.and.t.b1_pegel_1_0
CONSUME op.and.p.ACK_B: 1, op.and.p.pegel_1_0: 1, op.ff2.p.n_rst: 1;
PRODUCE op.and.p.pegel_1_1: 1, op.ff2.p.rst: 1, op.and.p.n_ACK_B: 1;

TRANSITION op.and.t.b0_pegel_1_1
CONSUME op.and.p.ACK_B: 1, op.and.p.pegel_1_1: 1, op.ff2.p.n_rst: 1;
PRODUCE op.and.p.pegel_1_0: 1, op.ff2.p.rst: 1, op.and.p.n_ACK_B: 1;



{Output Controller im OP}

TRANSITION op.oc.t.01
CONSUME op.oc.p.0: 1, op.oc.p.DOV: 1, op.oc.p.n_REQ_B: 1, op.oc.p.n_STRETCH: 1,
        op.oc.p.n_ACK_INT: 1;
PRODUCE op.oc.p.1: 1, op.oc.p.REQ_B: 1, op.oc.p.STRETCH: 1, op.oc.p.ACK_INT: 1,
        op.oc.p.n_DOV: 1;

TRANSITION op.oc.t.03
CONSUME op.oc.p.0: 1, op.oc.p.DONV: 1, op.oc.p.n_ACK_INT: 1;
PRODUCE op.oc.p.3: 1, op.oc.p.ACK_INT: 1, op.oc.p.n_DONV: 1;

TRANSITION op.oc.t.12
CONSUME op.oc.p.1: 1, op.oc.p.ACK_B: 1, op.oc.p.DOV: 1, op.oc.p.n_REQ_B: 1,
        op.oc.p.n_STRETCH: 1, op.oc.p.n_ACK_INT: 1;
PRODUCE op.oc.p.2: 1, op.oc.p.REQ_B: 1, op.oc.p.ACK_INT: 1, op.oc.p.STRETCH: 1,
        op.oc.p.n_ACK_B: 1, op.oc.p.n_DOV: 1;

TRANSITION op.oc.t.21
CONSUME op.oc.p.2: 1, op.oc.p.ACK_B: 1, op.oc.p.DOV: 1, op.oc.p.n_REQ_B: 1,
        op.oc.p.n_STRETCH: 1, op.oc.p.n_ACK_INT: 1;
PRODUCE op.oc.p.1: 1, op.oc.p.REQ_B: 1, op.oc.p.ACK_INT: 1, op.oc.p.STRETCH: 1,
        op.oc.p.n_ACK_B: 1, op.oc.p.n_DOV: 1;

TRANSITION op.oc.t.23
CONSUME op.oc.p.2: 1, op.oc.p.ACK_B: 1, op.oc.p.DONV: 1, op.oc.p.n_ACK_INT: 1;
PRODUCE op.oc.p.3: 1, op.oc.p.ACK_INT: 1, op.oc.p.n_ACK_B: 1, op.oc.p.n_DONV: 1;

TRANSITION op.oc.t.30
CONSUME op.oc.p.3: 1, op.oc.p.DONV: 1, op.oc.p.n_ACK_INT: 1;
PRODUCE op.oc.p.0: 1, op.oc.p.ACK_INT: 1, op.oc.p.n_DONV: 1;



{Anbindung an Aussenwelt}

{DATAV_OUT produzieren}
TRANSITION op.t.DATAV_OUT
CONSUME op.ff1.p.n_DATAV_OUT: 1, op.ff2.p.n_DATAV_OUT: 1;
PRODUCE op.ff1.p.DATAV_OUT: 1, op.ff2.p.DATAV_OUT: 1;

{INT_CLK produzieren}
TRANSITION op.t.INT_CLK
CONSUME op.ff1.p.n_INT_CLK: 1, op.ff2.p.n_INT_CLK: 1, op.ff1.p.n_rst: 1,
        op.and.p.n_a: 1;
PRODUCE op.ff1.p.INT_CLK: 1, op.ff2.p.INT_CLK: 1, op.ff1.p.rst: 1,
        op.and.p.a: 1;

{ACK_B produzieren}
TRANSITION op.t.ACK_B
CONSUME op.oc.p.n_ACK_B: 1, op.and.p.n_ACK_B: 1;
PRODUCE op.oc.p.ACK_B: 1, op.and.p.ACK_B: 1;

{ACK_INT abräumen}
TRANSITION op.t.ACK_INT
CONSUME op.oc.p.ACK_INT: 1;
PRODUCE op.oc.p.n_ACK_INT: 1;

{REQ_B abräumen}
TRANSITION op.t.REQ_B
CONSUME op.oc.p.REQ_B: 1;
PRODUCE op.oc.p.n_REQ_B: 1;

{STRETCH abräumen}
TRANSITION op.t.STRETCH
CONSUME op.oc.p.STRETCH: 1;
PRODUCE op.oc.p.n_STRETCH: 1;



{ vim: set ft=lola: }
