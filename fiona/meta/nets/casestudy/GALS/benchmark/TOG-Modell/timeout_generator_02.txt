{Timeout-Generator des zweiten GALS-Wrappers}

{01: konkret, unreduziert}
{02: alle Komponenten zu einem Modul zusammengefasst}

PLACE
    tog.p.STOPH,  {Input-Flanken}
    tog.p.n_STOPH,
    tog.p.REQ_A,
    tog.p.n_REQ_A,
    tog.p.LCLK,
    tog.p.n_LCLK,
    tog.p.RST,
    tog.p.n_RST,
    tog.p.STOP,  {Output-Flanken}
    tog.p.n_STOP,
    tog.p.REQ_A1,
    tog.p.n_REQ_A1,
    tog.p.ST,
    tog.p.n_ST,
    tog.p.pegel_STOPH_0,
    tog.p.pegel_STOPH_1,
    tog.p.pegel_REQ_A_0,
    tog.p.pegel_REQ_A_1,
    tog.p.pegel_LCLK_0,
    tog.p.pegel_LCLK_1,
    tog.p.pegel_RST_0,
    tog.p.pegel_RST_1,
    tog.p.pegel_STOP_0,
    tog.p.pegel_STOP_1,
    tog.p.pegel_REQ_A1_0,
    tog.p.pegel_REQ_A1_1,
    tog.p.pegel_ST_0,
    tog.p.pegel_ST_1,
    tog.p.pegel_mutex2_b_in_0,
    tog.p.pegel_mutex2_b_in_1,
    tog.p.pegel_mutex2_b_out_0,
    tog.p.pegel_mutex2_b_out_1,
    tog.p.pegel_mutex3_b_in_0,
    tog.p.pegel_mutex3_b_in_1,
    tog.p.pegel_ff2_clk_0,
    tog.p.pegel_ff2_clk_1;

MARKING
    tog.p.n_STOPH: 1,
    tog.p.n_REQ_A: 1,
    tog.p.n_LCLK: 1,
    tog.p.n_RST: 1,
    tog.p.n_STOP: 1,
    tog.p.n_REQ_A1: 1,
    tog.p.n_ST: 1,
    tog.p.pegel_STOPH_0: 1,
    tog.p.pegel_REQ_A_0: 1,
    tog.p.pegel_LCLK_0: 1,
    tog.p.pegel_RST_0: 1,
    tog.p.pegel_STOP_0: 1,
    tog.p.pegel_REQ_A1_0: 1,
    tog.p.pegel_ST_0: 1,
    tog.p.pegel_mutex2_b_in_0: 1,
    tog.p.pegel_mutex2_b_out_0: 1,
    tog.p.pegel_mutex3_b_in_0: 1,
    tog.p.pegel_ff2_clk_0: 1;

{Tabelle für STOPH-Flanke}

{Pegelkodierung: STOPH  mutex3.b_in  STOP  REQ_A1}
{Tabelle: alter Zustand -> neuer Zustand (Änderung) Flanke}

{0000 -> 1010 (1-1-) STOP+}
{0001 entfällt}
{0010 entfällt}
{0011 entfällt}
{0100 entfällt}
{0101 -> 1101 (1---)}
{0110 entfällt}
{0111 entfällt}
{1000 entfällt}
{1001 entfällt}
{1010 -> 0000 (0-0-) STOP-}
{1011 entfällt}
{1100 entfällt}
{1101 -> 0101 (0---)}
{1110 -> 0101 (0-01) STOP-, REQ_A1+}
{1111 entfällt}


TRANSITION tog.t.STOPH_1_pegel_01xx
CONSUME tog.p.STOPH: 1, tog.p.pegel_STOPH_0: 1, tog.p.pegel_mutex3_b_in_1: 1;
PRODUCE tog.p.n_STOPH: 1, tog.p.pegel_STOPH_1: 1, tog.p.pegel_mutex3_b_in_1: 1;

TRANSITION tog.t.STOPH_1_pegel_000x
CONSUME tog.p.STOPH: 1, tog.p.pegel_STOPH_0: 1, tog.p.pegel_mutex3_b_in_0: 1,
        tog.p.n_STOP: 1, tog.p.pegel_STOP_0: 1;
PRODUCE tog.p.n_STOPH: 1, tog.p.pegel_STOPH_1: 1, tog.p.pegel_mutex3_b_in_0: 1,
        tog.p.STOP: 1, tog.p.pegel_STOP_1: 1;

TRANSITION tog.t.STOPH_0_pegel_1xx1
CONSUME tog.p.STOPH: 1, tog.p.pegel_STOPH_1: 1, tog.p.pegel_REQ_A1_1: 1;
PRODUCE tog.p.n_STOPH: 1, tog.p.pegel_STOPH_0: 1, tog.p.pegel_REQ_A1_1: 1;

TRANSITION tog.t.STOPH_0_pegel_1010
CONSUME tog.p.STOPH: 1, tog.p.pegel_STOPH_1: 1, tog.p.pegel_REQ_A1_0: 1,
        tog.p.pegel_mutex3_b_in_0: 1, tog.p.n_STOP: 1, tog.p.pegel_STOP_1: 1;
PRODUCE tog.p.n_STOPH: 1, tog.p.pegel_STOPH_0: 1, tog.p.pegel_REQ_A1_0: 1,
        tog.p.pegel_mutex3_b_in_0: 1, tog.p.STOP: 1, tog.p.pegel_STOP_0: 1;

{TODO: warum hat der Zustandsraum (mit stubborn sets) einen Zustand mehr,}
{TODO: wenn die Transition tog.t.STOPH_0_pegel_1110yy heißt?}
TRANSITION tog.t.STOPH_0_pegel_1110
CONSUME tog.p.STOPH: 1, tog.p.pegel_STOPH_1: 1, tog.p.pegel_REQ_A1_0: 1,
        tog.p.pegel_mutex3_b_in_1: 1, tog.p.n_STOP: 1, tog.p.n_REQ_A1: 1,
        tog.p.pegel_STOP_1: 1;
PRODUCE tog.p.n_STOPH: 1, tog.p.pegel_STOPH_0: 1, tog.p.pegel_REQ_A1_1: 1,
        tog.p.pegel_mutex3_b_in_1: 1, tog.p.STOP: 1, tog.p.REQ_A1: 1,
        tog.p.pegel_STOP_0: 1;


{REQ_A-Flanke}
{abhängig von:}
{REQ_A mutex2_b_in mutex3_b_in mutex_2_b_out STOPH STOP REQ_A1 RST ST}

{REQ_A=0, mutex2_b_in=1 -> keine Flanke}
TRANSITION tog.t.REQ_A_1_pegel_01xxxxxxx
CONSUME tog.p.REQ_A: 1, tog.p.pegel_REQ_A_0: 1, tog.p.pegel_mutex2_b_in_1: 1;
PRODUCE tog.p.n_REQ_A: 1, tog.p.pegel_REQ_A_1: 1, tog.p.pegel_mutex2_b_in_1: 1;

{REQ_A=0, mutex2_b_in=0, STOPH=1 (impliziert mutex3_b_in=0) -> mutex3_b_in=1}
TRANSITION tog.t.REQ_A_1_pegel_00xx1xxxx
CONSUME tog.p.REQ_A: 1, tog.p.pegel_REQ_A_0: 1, tog.p.pegel_mutex2_b_in_0: 1,
        tog.p.pegel_STOPH_1: 1, tog.p.pegel_mutex3_b_in_0: 1;
PRODUCE tog.p.n_REQ_A: 1, tog.p.pegel_REQ_A_1: 1, tog.p.pegel_mutex2_b_in_0: 1,
        tog.p.pegel_STOPH_1: 1, tog.p.pegel_mutex3_b_in_1: 1;

{REQ_A=0, mutex2_b_in=0, STOPH=0 (impliziert mutex3_b_in=0, REQ_A1=0)}
{    -> mutex3_b_in=1, REQ_A1+ (REQ_A1=1)}
TRANSITION tog.t.REQ_A_1_pegel_00xx0xxxx
CONSUME tog.p.REQ_A: 1, tog.p.pegel_REQ_A_0: 1, tog.p.pegel_mutex2_b_in_0: 1,
        tog.p.pegel_STOPH_0: 1, tog.p.pegel_mutex3_b_in_0: 1,
        tog.p.pegel_REQ_A1_0: 1, tog.p.n_REQ_A1: 1;
PRODUCE tog.p.n_REQ_A: 1, tog.p.pegel_REQ_A_1: 1, tog.p.pegel_mutex2_b_in_0: 1,
        tog.p.pegel_STOPH_0: 1, tog.p.pegel_mutex3_b_in_1: 1,
        tog.p.pegel_REQ_A1_1: 1, tog.p.REQ_A1: 1;

{REQ_A=1, mutex2_b_out=1 -> keine Flanke}
TRANSITION tog.t.REQ_A_0_pegel_1xx1xxxxx
CONSUME tog.p.REQ_A: 1, tog.p.pegel_REQ_A_1: 1, tog.p.pegel_mutex2_b_out_1: 1;
PRODUCE tog.p.n_REQ_A: 1, tog.p.pegel_REQ_A_0: 1, tog.p.pegel_mutex2_b_out_1: 1;

{REQ_A=1, mutex2_b_out=0, mutex2_b_in=0, STOP=1 (impliziert mutex3_b_in=1)}
{    -> mutex3_b_in=0}
TRANSITION tog.t.REQ_A_0_pegel_10x0x1xxx
CONSUME tog.p.REQ_A: 1, tog.p.pegel_REQ_A_1: 1, tog.p.pegel_mutex2_b_out_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_mutex3_b_in_1: 1,
        tog.p.pegel_STOP_1: 1;
PRODUCE tog.p.n_REQ_A: 1, tog.p.pegel_REQ_A_0: 1, tog.p.pegel_mutex2_b_out_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_mutex3_b_in_0: 1,
        tog.p.pegel_STOP_1: 1;

{REQ_A=1, mutex2_b_out=0, mutex2_b_in=0, STOP=0, STOPH=0}
{(impliziert mutex3_b_in=1, REQ_A1=1)}
{    -> mutex3_b_in=0, REQ_A1-, (REQ_A1=0)}
TRANSITION tog.t.REQ_A_0_pegel_10x000xxx
CONSUME tog.p.REQ_A: 1, tog.p.pegel_REQ_A_1: 1, tog.p.pegel_mutex2_b_out_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_mutex3_b_in_1: 1,
        tog.p.pegel_STOP_0: 1, tog.p.pegel_STOPH_0: 1, tog.p.pegel_REQ_A1_1: 1,
        tog.p.n_REQ_A1: 1;
PRODUCE tog.p.n_REQ_A: 1, tog.p.pegel_REQ_A_0: 1, tog.p.pegel_mutex2_b_out_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_mutex3_b_in_0: 1,
        tog.p.pegel_STOP_0: 1, tog.p.pegel_STOPH_0: 1, tog.p.pegel_REQ_A1_0: 1,
        tog.p.REQ_A1: 1;

{REQ_A=1, mutex2_b_out=0, mutex2_b_in=0, STOP=0, STOPH=1}
{(impliziert mutex3_b_in=1, REQ_A1=1)}
{   -> mutex3_b_in=0, REQ_A1-, (REQ_A1=0), STOP+, (STOP=1)}
TRANSITION tog.t.REQ_A_0_pegel_10x010xxx
CONSUME tog.p.REQ_A: 1, tog.p.pegel_REQ_A_1: 1, tog.p.pegel_mutex2_b_out_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_mutex3_b_in_1: 1,
        tog.p.pegel_STOP_0: 1, tog.p.pegel_STOPH_1: 1, tog.p.pegel_REQ_A1_1: 1,
        tog.p.n_REQ_A1: 1, tog.p.n_STOP: 1;
PRODUCE tog.p.n_REQ_A: 1, tog.p.pegel_REQ_A_0: 1, tog.p.pegel_mutex2_b_out_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_mutex3_b_in_0: 1,
        tog.p.pegel_STOP_0: 1, tog.p.pegel_STOPH_1: 1, tog.p.pegel_REQ_A1_0: 1,
        tog.p.REQ_A1: 1, tog.p.STOP: 1;

{REQ_A=1, mutex2_b_out=0, mutex2_b_in=1, STOP=1}
{(impliziert RST=0, ST=0, mutex3_b_in=1)}
{    -> mutex3_b_in=0, mutex2_b_in=0, ST+, (ST=1), (mutex2_b_out=1 nur temporär}
TRANSITION tog.t.REQ_A_0_pegel_11x0x1xxx
CONSUME tog.p.REQ_A: 1, tog.p.pegel_REQ_A_1: 1, tog.p.pegel_mutex2_b_out_0: 1,
        tog.p.pegel_mutex2_b_in_1: 1, tog.p.pegel_mutex3_b_in_1: 1,
        tog.p.pegel_STOP_1: 1, tog.p.pegel_ST_0: 1, tog.p.n_ST: 1;
PRODUCE tog.p.n_REQ_A: 1, tog.p.pegel_REQ_A_0: 1, tog.p.pegel_mutex2_b_out_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_mutex3_b_in_0: 1,
        tog.p.pegel_STOP_1: 1, tog.p.pegel_ST_1: 1, tog.p.ST: 1;

{REQ_A=1, mutex2_b_out=0, mutex2_b_in=1, STOP=0, STOPH=0}
{(impliziert RST=0, ST=0, mutex3_b_in=1, REQ_A1=0)}
{    -> mutex3_b_in=0, mutex2_b_in=0, ST+, (ST=1), REQ_A1-, (REQ_A1=0),}
{       (mutex2_b_out=1 nur temporär}
TRANSITION tog.t.REQ_A_0_pegel_11x000xxx
CONSUME tog.p.REQ_A: 1, tog.p.pegel_REQ_A_1: 1, tog.p.pegel_mutex2_b_out_0: 1,
        tog.p.pegel_mutex2_b_in_1: 1, tog.p.pegel_mutex3_b_in_1: 1,
        tog.p.pegel_STOP_0: 1, tog.p.pegel_STOPH_0: 1, tog.p.pegel_ST_0: 1,
        tog.p.n_ST: 1, tog.p.pegel_REQ_A1_1: 1, tog.p.n_REQ_A1: 1;
PRODUCE tog.p.n_REQ_A: 1, tog.p.pegel_REQ_A_0: 1, tog.p.pegel_mutex2_b_out_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_mutex3_b_in_0: 1,
        tog.p.pegel_STOP_0: 1, tog.p.pegel_STOPH_0: 1, tog.p.pegel_ST_1: 1,
        tog.p.ST: 1, tog.p.pegel_REQ_A1_0: 1, tog.p.REQ_A1: 1;

{REQ_A=1, mutex2_b_out=0, mutex2_b_in=1, STOP=0, STOPH=1}
{(impliziert RST=0, ST=0, mutex3_b_in=1, REQ_A1=0)}
{    -> mutex3_b_in=0, mutex2_b_in=0, ST+, (ST=1), REQ_A1-, (REQ_A1=0),}
{       STOP+, (STOP=1), (mutex2_b_out=1 nur temporär)}
TRANSITION tog.t.REQ_A_0_pegel_11x010xxx
CONSUME tog.p.REQ_A: 1, tog.p.pegel_REQ_A_1: 1, tog.p.pegel_mutex2_b_out_0: 1,
        tog.p.pegel_mutex2_b_in_1: 1, tog.p.pegel_mutex3_b_in_1: 1,
        tog.p.pegel_STOP_0: 1, tog.p.pegel_STOPH_1: 1, tog.p.pegel_ST_0: 1,
        tog.p.n_ST: 1, tog.p.pegel_REQ_A1_1: 1, tog.p.n_REQ_A1: 1,
        tog.p.n_STOP: 1;
PRODUCE tog.p.n_REQ_A: 1, tog.p.pegel_REQ_A_0: 1, tog.p.pegel_mutex2_b_out_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_mutex3_b_in_0: 1,
        tog.p.pegel_STOP_1: 1, tog.p.pegel_STOPH_1: 1, tog.p.pegel_ST_1: 1,
        tog.p.ST: 1, tog.p.pegel_REQ_A1_0: 1, tog.p.REQ_A1: 1, tog.p.STOP: 1;


{LCLK-Flanke}
{abhängig von LCLK, RST, ff2_clk, ST, mutex2_b_in, mutex3_b_in}

{LCLK=0 -> keine Flanke}
TRANSITION tog.t.LCLK_1_pegel_0xxxxx
CONSUME tog.p.LCLK: 1, tog.p.pegel_LCLK_0: 1;
PRODUCE tog.p.n_LCLK: 1, tog.p.pegel_LCLK_1: 1;

{LCLK=1, RST=1 -> keine Flanke}
TRANSITION tog.t.LCLK_0_pegel_11xxxx
CONSUME tog.p.LCLK: 1, tog.p.pegel_LCLK_1: 1, tog.p.pegel_RST_1: 1;
PRODUCE tog.p.n_LCLK: 1, tog.p.pegel_LCLK_0: 1, tog.p.pegel_RST_1: 1;

{LCLK=1, RST=0, ff2_clk=1 -> keine Flanke}
TRANSITION tog.t.LCLK_0_pegel_101xxx
CONSUME tog.p.LCLK: 1, tog.p.pegel_LCLK_1: 1, tog.p.pegel_RST_0: 1,
        tog.p.pegel_ff2_clk_1: 1;
PRODUCE tog.p.n_LCLK: 1, tog.p.pegel_LCLK_0: 1, tog.p.pegel_RST_0: 1,
        tog.p.pegel_ff2_clk_1: 1;

{LCLK=1, RST=0, ff2_clk=0, ST=1 -> ff2_clk=1}
TRANSITION tog.t.LCLK_0_pegel_1001xx
CONSUME tog.p.LCLK: 1, tog.p.pegel_LCLK_1: 1, tog.p.pegel_RST_0: 1,
        tog.p.pegel_ff2_clk_0: 1, tog.p.pegel_ST_1: 1;
PRODUCE tog.p.n_LCLK: 1, tog.p.pegel_LCLK_0: 1, tog.p.pegel_RST_0: 1,
        tog.p.pegel_ff2_clk_1: 1, tog.p.pegel_ST_1: 1;

{LCLK=1, RST=0, ff2_clk=0, ST=0, mutex2_b_in=1 -> ff2_clk=1}
TRANSITION tog.t.LCLK_0_pegel_10001x
CONSUME tog.p.LCLK: 1, tog.p.pegel_LCLK_1: 1, tog.p.pegel_RST_0: 1,
        tog.p.pegel_ff2_clk_0: 1, tog.p.pegel_ST_0: 1,
        tog.p.pegel_mutex2_b_in_1: 1;
PRODUCE tog.p.n_LCLK: 1, tog.p.pegel_LCLK_0: 1, tog.p.pegel_RST_0: 1,
        tog.p.pegel_ff2_clk_1: 1, tog.p.pegel_ST_0: 1,
        tog.p.pegel_mutex2_b_in_1: 1;

{LCLK=1, RST=0, ff2_clk=0, ST=0, mutex2_b_in=0, mutex3_b_in=1}
{   -> ff2_clk=1, mutex2_b_in=1}
TRANSITION tog.t.LCLK_0_pegel_100001
CONSUME tog.p.LCLK: 1, tog.p.pegel_LCLK_1: 1, tog.p.pegel_RST_0: 1,
        tog.p.pegel_ff2_clk_0: 1, tog.p.pegel_ST_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_mutex3_b_in_1: 1;
PRODUCE tog.p.n_LCLK: 1, tog.p.pegel_LCLK_0: 1, tog.p.pegel_RST_0: 1,
        tog.p.pegel_ff2_clk_1: 1, tog.p.pegel_ST_0: 1,
        tog.p.pegel_mutex2_b_in_1: 1, tog.p.pegel_mutex3_b_in_1: 1;

{LCLK=1, RST=0, ff2_clk=0, ST=0, mutex2_b_in=0, mutex3_b_in=0}
{   -> (mutex2_b_out+ temporär), ST+, mutex2_b_in=0, mutex2_b_out=0}
TRANSITION tog.t.LCLK_0_pegel_100000
CONSUME tog.p.LCLK: 1, tog.p.pegel_LCLK_1: 1, tog.p.pegel_RST_0: 1,
        tog.p.pegel_ff2_clk_0: 1, tog.p.pegel_ST_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_mutex3_b_in_0: 1,
        tog.p.n_ST: 1;
PRODUCE tog.p.n_LCLK: 1, tog.p.pegel_LCLK_0: 1, tog.p.pegel_RST_0: 1,
        tog.p.pegel_ff2_clk_1: 1, tog.p.pegel_ST_1: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_mutex3_b_in_0: 1,
        tog.p.ST: 1;


{RST-Flanke}
{abhängig von RST, ff2_clk, mutex2_b_in, ST, mutex2_b_out, REQ_A, STOP}

{RST=1 -> keine Flanke}
TRANSITION tog.t.RST_0_pegel_1xxxxxx
CONSUME tog.p.RST: 1, tog.p.pegel_RST_1: 1;
PRODUCE tog.p.n_RST: 1, tog.p.pegel_RST_0: 1;

{RST=0 (für ff2_clk, mutex2_b_in, ST bleiben nur die Fälle: 000, 100, 101, 110)}

{RST=0, ff2_clk=0, mutex2_b_in=0, ST=0 -> keine Flanke}
TRANSITION tog.t.RST_1_pegel_0000xxx
CONSUME tog.p.RST: 1, tog.p.pegel_RST_0: 1, tog.p.pegel_ff2_clk_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_ST_0: 1; 
PRODUCE tog.p.n_RST: 1, tog.p.pegel_RST_1: 1, tog.p.pegel_ff2_clk_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_ST_0: 1;

{RST=0, ff2_clk=1, mutex2_b_in=0, ST=0 -> ff2_clk=0}
TRANSITION tog.t.RST_1_pegel_0100xxx
CONSUME tog.p.RST: 1, tog.p.pegel_RST_0: 1, tog.p.pegel_ff2_clk_1: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_ST_0: 1; 
PRODUCE tog.p.n_RST: 1, tog.p.pegel_RST_1: 1, tog.p.pegel_ff2_clk_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_ST_0: 1;

{RST=0, ff2_clk=1, mutex2_b_in=0, ST=1 -> ff2_clk=0, ST-, ST=0}
TRANSITION tog.t.RST_1_pegel_0101xxx
CONSUME tog.p.RST: 1, tog.p.pegel_RST_0: 1, tog.p.pegel_ff2_clk_1: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_ST_1: 1, tog.p.n_ST: 1; 
PRODUCE tog.p.n_RST: 1, tog.p.pegel_RST_1: 1, tog.p.pegel_ff2_clk_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_ST_0: 1, tog.p.ST: 1;

{RST=0, ff2_clk=1, mutex2_b_in=1, ST=0, mutex2_b_out=0}
{   -> ff2_clk=0, mutex2_b_in=0}
TRANSITION tog.t.RST_1_pegel_01100xx
CONSUME tog.p.RST: 1, tog.p.pegel_RST_0: 1, tog.p.pegel_ff2_clk_1: 1,
        tog.p.pegel_mutex2_b_in_1: 1, tog.p.pegel_ST_0: 1,
        tog.p.pegel_mutex2_b_out_0: 1; 
PRODUCE tog.p.n_RST: 1, tog.p.pegel_RST_1: 1, tog.p.pegel_ff2_clk_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_ST_0: 1,
        tog.p.pegel_mutex2_b_out_0: 1;

{RST=0, ff2_clk=1, mutex2_b_in=1, ST=0, mutex2_b_out=1, REQ_A=0}
{   -> ff2_clk=0, mutex2_b_in=0, mutex2_b_out=0}
TRANSITION tog.t.RST_1_pegel_011010x
CONSUME tog.p.RST: 1, tog.p.pegel_RST_0: 1, tog.p.pegel_ff2_clk_1: 1,
        tog.p.pegel_mutex2_b_in_1: 1, tog.p.pegel_ST_0: 1,
        tog.p.pegel_mutex2_b_out_1: 1, tog.p.pegel_REQ_A_0: 1; 
PRODUCE tog.p.n_RST: 1, tog.p.pegel_RST_1: 1, tog.p.pegel_ff2_clk_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_ST_0: 1,
        tog.p.pegel_mutex2_b_out_0: 1, tog.p.pegel_REQ_A_0: 1;

{RST=0, ff2_clk=1, mutex2_b_in=1, ST=0, mutex2_b_out=1, REQ_A=1, STOP=1}
{(impliziert: mutex3_b_in=0)}
{   -> ff2_clk=0,  mutex2_b_in=0, mutex2_b_out=0, mutex3_b_in=1}
TRANSITION tog.t.RST_1_pegel_0110111
CONSUME tog.p.RST: 1, tog.p.pegel_RST_0: 1, tog.p.pegel_ff2_clk_1: 1,
        tog.p.pegel_mutex2_b_in_1: 1, tog.p.pegel_ST_0: 1,
        tog.p.pegel_mutex2_b_out_1: 1, tog.p.pegel_REQ_A_1: 1,
        tog.p.pegel_STOP_1: 1, tog.p.pegel_mutex3_b_in_0: 1; 
PRODUCE tog.p.n_RST: 1, tog.p.pegel_RST_1: 1, tog.p.pegel_ff2_clk_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_ST_0: 1,
        tog.p.pegel_mutex2_b_out_0: 1, tog.p.pegel_REQ_A_1: 1,
        tog.p.pegel_STOP_1: 1, tog.p.pegel_mutex3_b_in_1: 1;

{RST=0, ff2_clk=1, mutex2_b_in=1, ST=0, mutex2_b_out=1, REQ_A=1, STOP=0}
{(impliziert: mutex3_b_in=0, REQ_A1=0)}
{   -> ff2_clk=0,  mutex2_b_in=0, mutex2_b_out=0, mutex3_b_in=1, REQ_A1+}
TRANSITION tog.t.RST_1_pegel_0110110
CONSUME tog.p.RST: 1, tog.p.pegel_RST_0: 1, tog.p.pegel_ff2_clk_1: 1,
        tog.p.pegel_mutex2_b_in_1: 1, tog.p.pegel_ST_0: 1,
        tog.p.pegel_mutex2_b_out_1: 1, tog.p.pegel_REQ_A_1: 1,
        tog.p.pegel_STOP_0: 1, tog.p.pegel_mutex3_b_in_0: 1,
        tog.p.pegel_REQ_A1_0: 1, tog.p.n_REQ_A1: 1; 
PRODUCE tog.p.n_RST: 1, tog.p.pegel_RST_1: 1, tog.p.pegel_ff2_clk_0: 1,
        tog.p.pegel_mutex2_b_in_0: 1, tog.p.pegel_ST_0: 1,
        tog.p.pegel_mutex2_b_out_0: 1, tog.p.pegel_REQ_A_1: 1,
        tog.p.pegel_STOP_0: 1, tog.p.pegel_mutex3_b_in_1: 1,
        tog.p.pegel_REQ_A1_1: 1, tog.p.REQ_A1: 1; 



{Anbindung an Außenwelt}

{STOPH produzieren}
TRANSITION tog.t.STOPH
CONSUME tog.p.n_STOPH: 1;
PRODUCE tog.p.STOPH: 1;

{REQ_A produzieren}
TRANSITION tog.t.REQ_A
CONSUME tog.p.n_REQ_A: 1;
PRODUCE tog.p.REQ_A: 1;

{LCLK produzieren}
TRANSITION tog.t.LCLK
CONSUME tog.p.n_LCLK: 1;
PRODUCE tog.p.LCLK: 1;

{RST produzieren}
TRANSITION tog.t.RST
CONSUME tog.p.n_RST: 1;
PRODUCE tog.p.RST: 1;

{STOP abräumen}
TRANSITION tog.t.STOP
CONSUME tog.p.STOP: 1;
PRODUCE tog.p.n_STOP: 1;

{REQ_A1 abräumen}
TRANSITION tog.t.REQ_A1
CONSUME tog.p.REQ_A1: 1;
PRODUCE tog.p.n_REQ_A1: 1;

{ST abräumen}
TRANSITION tog.t.ST
CONSUME tog.p.ST: 1;
PRODUCE tog.p.n_ST: 1;


{ vim: set ft=lola: }
