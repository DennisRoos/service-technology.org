AT_INIT

############################################################################
AT_BANNER([Standard Options])
############################################################################

m4_define([TEST_OPTIONS], [AT_CHECK([TOOL --help],0,ignore)
                           AT_KEYWORDS(basic)])
m4_define([TEST_VERSION], [AT_CHECK([TOOL --version],0,ignore)
                           AT_KEYWORDS(basic)])


AT_SETUP([Help output (Fiona2Wendy)])
m4_define([TOOL], [FIONA2WENDY])
TEST_OPTIONS
AT_CLEANUP

AT_SETUP([Help output (Wendy2Fiona)])
m4_define([TOOL], [WENDY2FIONA])
TEST_OPTIONS
AT_CLEANUP

AT_SETUP([Help output (WendyFormula2Bits)])
m4_define([TOOL], [WENDYFORMULA2BITS])
TEST_OPTIONS
AT_CLEANUP

AT_SETUP([Help output (ig2sa)])
m4_define([TOOL], [IG2SA])
TEST_OPTIONS
AT_CLEANUP

AT_SETUP([Help output (sa2ig)])
m4_define([TOOL], [SA2IG])
TEST_OPTIONS
AT_CLEANUP


AT_SETUP([Version output (Fiona2Wendy)])
m4_define([TOOL], [FIONA2WENDY])
TEST_VERSION
AT_CLEANUP

AT_SETUP([Version output (Wendy2Fiona)])
m4_define([TOOL], [WENDY2FIONA])
TEST_VERSION
AT_CLEANUP

AT_SETUP([Version output (WendyFormula2Bits)])
m4_define([TOOL], [WENDYFORMULA2BITS])
TEST_VERSION
AT_CLEANUP

AT_SETUP([Version output (ig2sa)])
m4_define([TOOL], [IG2SA])
TEST_VERSION
AT_CLEANUP

AT_SETUP([Version output (sa2ig)])
m4_define([TOOL], [SA2IG])
TEST_VERSION
AT_CLEANUP


############################################################################
AT_BANNER([Fiona <-> Wendy])
############################################################################

m4_define([TEST_F2W2F], [AT_CHECK([cp TESTFILES/NET .])
                         AT_CHECK([FIONA -s empty -t og NET], 0, ignore, ignore)
                         AT_CHECK([mv NET.og NET.2.og])
                         AT_CHECK([FIONA -t og NET], 0, ignore, ignore)
                         AT_CHECK([FIONA2WENDY --input=NET.og --output=NET.w.og], 0, ignore, stderr)
                         AT_CHECK([GREP -q "empty-node created" stderr])
                         AT_CHECK([WENDY2FIONA --input=NET.w.og --output=NET.f.og])
                         AT_CHECK([FIONA -t equivalence NET.2.og NET.f.og], 0, ignore, ignore)
                         AT_KEYWORDS(fiona wendy)])

m4_define([TEST_W2F], [AT_CHECK([cp TESTFILES/NET .])
                       AT_CHECK([FIONA -s empty -t og NET], 0, ignore, ignore)
                       AT_CHECK([WENDY --og=NET.w.og NET], 0, ignore, ignore)
                       AT_CHECK([WENDY2FIONA --input=NET.w.og --output=NET.f.og])
                       AT_CHECK([FIONA -t equivalence NET.og NET.f.og], 0, ignore, ignore)
                       AT_KEYWORDS(fiona wendy)])

m4_define([TEST_F2W2F_E], [AT_CHECK([cp TESTFILES/NET .])
                           AT_CHECK([FIONA -s empty -t og NET], 0, ignore, ignore)
                           AT_CHECK([FIONA2WENDY --input=NET.og --output=NET.w.og])
                           AT_CHECK([WENDY2FIONA --input=NET.w.og --output=NET.f.og])
                           AT_CHECK([FIONA -t equivalence NET.og NET.f.og], 0, ignore, ignore)
                           AT_KEYWORDS(fiona wendy empty)])

m4_define([TEST_F2W2F_S], [AT_CHECK([cp TESTFILES/NET.fiona.og .])
                           AT_CHECK([FIONA2WENDY --input=NET.fiona.og --output=NET.wendy.og])
                           AT_CHECK([WENDY2FIONA --input=NET.wendy.og --output=NET.fiona.2.og])
                           AT_CHECK([FIONA -t equivalence NET.fiona.og NET.fiona.2.og], 0, ignore, ignore)
                           AT_KEYWORDS(fiona wendy synchronous)])


AT_SETUP([Fiona->Wendy->Fiona (Syntax Example)])
m4_define([NET], [syntax_example.owfn])
TEST_F2W2F
AT_CLEANUP

AT_SETUP([Fiona->Wendy->Fiona (Coffee)])
m4_define([NET], [myCoffee.owfn])
TEST_F2W2F
AT_CLEANUP

AT_SETUP([Fiona->Wendy->Fiona (Zeus)])
m4_define([NET], [zeus.owfn])
TEST_F2W2F
AT_CLEANUP

AT_SETUP([Wendy->Fiona (Syntax Example)])
m4_define([NET], [syntax_example.owfn])
TEST_W2F
AT_CLEANUP

AT_SETUP([Wendy->Fiona (Coffee)])
m4_define([NET], [myCoffee.owfn])
TEST_W2F
AT_CLEANUP

AT_SETUP([Wendy->Fiona (Zeus)])
m4_define([NET], [zeus.owfn])
TEST_W2F
AT_CLEANUP

AT_SETUP([Fiona with Empty Node (Syntax Example)])
m4_define([NET], [syntax_example.owfn])
TEST_F2W2F_E
AT_CLEANUP

AT_SETUP([Fiona with Empty Node (Coffee)])
m4_define([NET], [myCoffee.owfn])
TEST_F2W2F_E
AT_CLEANUP

AT_SETUP([Fiona with Empty Node (Zeus)])
m4_define([NET], [zeus.owfn])
TEST_F2W2F_E
AT_CLEANUP

AT_SETUP([Synchronous Fiona OG])
m4_define([NET], [synchronous])
TEST_F2W2F_S
AT_CLEANUP


############################################################################
AT_BANNER([Wendy: CNF OG -> Bit OG])
############################################################################

m4_define([TEST_CNF2B], [AT_CHECK([cp TESTFILES/NET .])
                         AT_CHECK([WENDY --og=NET.c.og NET], 0, ignore, ignore)
                         AT_CHECK([WENDYFORMULA2BITS --input=NET.c.og --output=NET.b.og])
                         AT_CHECK([SAYO --input=NET.b.og --output=NET.sa])
                         AT_CHECK([SA2SM NET.sa NET.owfn])
                         AT_CHECK([FIONA -t og NET.owfn], 0, ignore, ignore)
                         AT_CHECK([FIONA -t og NET], 0, ignore, ignore)
                         AT_CHECK([FIONA -t equivalence NET.og NET.owfn.og], 0, ignore, ignore)
                         AT_KEYWORDS(wendy formula bit)])


AT_SETUP([Syntax Example])
m4_define([NET], [syntax_example.owfn])
TEST_CNF2B
AT_CLEANUP

AT_SETUP([Coffee])
m4_define([NET], [myCoffee.owfn])
TEST_CNF2B
AT_CLEANUP

AT_SETUP([Zeus])
m4_define([NET], [zeus.owfn])
TEST_CNF2B
AT_CLEANUP

AT_SETUP([S-Bit])
m4_define([NET], [bit_s.owfn])
TEST_CNF2B
AT_CLEANUP


############################################################################
AT_BANNER([IG <-> SA])
############################################################################

m4_define([TEST_IG2SA], [AT_CHECK([cp TESTFILES/NET .])
                         AT_CHECK([FIONA -t ig NET], 0, ignore, ignore)
                         AT_CHECK([IG2SA --input=NET.ig.og --output=NET.sa])
                         AT_CHECK([SA2SM NET.sa NET.owfn])
                         AT_CHECK([FIONA -t og NET], 0, ignore, ignore)
                         AT_CHECK([FIONA -t og NET.owfn], 0, ignore, ignore)
                         AT_CHECK([FIONA -t equivalence NET.og NET.owfn.og], 0, ignore, ignore)
                         AT_KEYWORDS(ig sa)])

m4_define([TEST_SA2IG], [AT_CHECK([cp TESTFILES/NET .])
                         AT_CHECK([PETRI -osa NET], 0, ignore, ignore)
                         AT_CHECK([SA2IG --input=NET.sa --output=NET.ig.og], 0, ignore, ignore)
                         AT_CHECK([IG2SA --input=NET.ig.og --output=NET.2.sa])
                         AT_CHECK([SA2SM NET.2.sa NET.owfn])
                         AT_CHECK([FIONA -t og NET], 0, ignore, ignore)
                         AT_CHECK([FIONA -t og NET.owfn], 0, ignore, ignore)
                         AT_CHECK([FIONA -t equivalence NET.og NET.owfn.og], 0, ignore, ignore)
                         AT_KEYWORDS(ig sa)])


AT_SETUP([IG->SA (Syntax Example)])
m4_define([NET], [syntax_example.owfn])
TEST_IG2SA
AT_CLEANUP

AT_SETUP([IG->SA (Coffee)])
m4_define([NET], [myCoffee.owfn])
TEST_IG2SA
AT_CLEANUP

AT_SETUP([IG->SA (Zeus)])
m4_define([NET], [zeus.owfn])
TEST_IG2SA
AT_CLEANUP

AT_SETUP([SA->IG->SA (Syntax Example)])
m4_define([NET], [syntax_example.owfn])
TEST_SA2IG
AT_CLEANUP

AT_SETUP([SA->IG->SA (Coffee)])
m4_define([NET], [myCoffee.owfn])
TEST_SA2IG
AT_CLEANUP

AT_SETUP([SA->IG->SA (Zeus)])
m4_define([NET], [zeus.owfn])
TEST_SA2IG
AT_CLEANUP

############################################################################
AT_BANNER([Wendy Bits OGs <-> Reduced Bit OGs])
############################################################################

m4_define([TEST_REDEX], [AT_CHECK([cp TESTFILES/NET .])
                         AT_CHECK([WENDY --og=NET.og NET], 0, ignore, ignore)
                         AT_CHECK([WENDYFORMULA2BITS --input=NET.og --output=NET.b.og])
                         AT_CHECK([WENDYREDUCEBITS --input=NET.b.og --output=NET.r.og])
                         AT_CHECK([WENDYEXPANDBITS --input=NET.r.og --output=NET.x.og])
                         AT_CHECK([DIFF --brief NET.b.og NET.x.og])
                         AT_KEYWORDS(wendy bit reduce)])

m4_define([TEST_RED], [AT_CHECK([cp TESTFILES/NET .])
                       AT_CHECK([WENDY --og=NET.og NET], 0, ignore, ignore)
                       AT_CHECK([WENDYFORMULA2BITS --input=NET.og --output=NET.b.og])
                       AT_CHECK([WENDYREDUCEBITS --input=NET.b.og --output=NET.r.og])
                       AT_CHECK([GREP -q ":: S" NET.b.og])
                       AT_CHECK([GREP -q ":: F" NET.b.og])
                       AT_CHECK([GREP -q ":: S" NET.r.og], 1, ignore, ignore)
                       AT_CHECK([GREP -q ":: F" NET.r.og], 1, ignore, ignore)
                       AT_KEYWORDS(wendy bit reduce)])


AT_SETUP([Unreduced -> Reduced -> Unreduced (Syntax Example)])
m4_define([NET], [syntax_example.owfn])
TEST_REDEX
AT_CLEANUP

AT_SETUP([Unreduced -> Reduced -> Unreduced (Coffee)])
m4_define([NET], [myCoffee.owfn])
TEST_REDEX
AT_CLEANUP

AT_SETUP([Unreduced -> Reduced -> Unreduced (Zeus)])
m4_define([NET], [zeus.owfn])
TEST_REDEX
AT_CLEANUP

AT_SETUP([Unreduced -> Reduced -> Unreduced (AP)])
m4_define([NET], [AP.owfn])
TEST_REDEX
AT_CLEANUP

AT_SETUP([Unreduced -> Reduced -> Unreduced (Auction)])
m4_define([NET], [auctionService.owfn])
TEST_REDEX
AT_CLEANUP

AT_SETUP([Unreduced -> Reduced -> Unreduced (BH)])
m4_define([NET], [BH.owfn])
TEST_REDEX
AT_CLEANUP

AT_SETUP([Unreduced -> Reduced -> Unreduced (CN)])
m4_define([NET], [CN.owfn])
TEST_REDEX
AT_CLEANUP

AT_SETUP([Unreduced -> Reduced -> Unreduced (DG)])
m4_define([NET], [DG.owfn])
TEST_REDEX
AT_CLEANUP

AT_SETUP([Unreduced -> Reduced -> Unreduced (Loan Approval)])
m4_define([NET], [loanApprovalProcess.owfn])
TEST_REDEX
AT_CLEANUP

AT_SETUP([Unreduced -> Reduced -> Unreduced (Phcontrol3.unf)])
m4_define([NET], [phcontrol3.unf.owfn])
TEST_REDEX
AT_CLEANUP

AT_SETUP([Unreduced -> Reduced -> Unreduced (PO)])
m4_define([NET], [PO.owfn])
TEST_REDEX
AT_CLEANUP

AT_SETUP([Unreduced -> Reduced -> Unreduced (QR)])
m4_define([NET], [QR.owfn])
TEST_REDEX
AT_CLEANUP

AT_SETUP([Unreduced -> Reduced -> Unreduced (RE)])
m4_define([NET], [RE.owfn])
TEST_REDEX
AT_CLEANUP

AT_SETUP([Unreduced -> Reduced -> Unreduced (RS)])
m4_define([NET], [RS.owfn])
TEST_REDEX
AT_CLEANUP

AT_SETUP([Unreduced -> Reduced -> Unreduced (SD)])
m4_define([NET], [SD.owfn])
TEST_REDEX
AT_CLEANUP

AT_SETUP([Unreduced -> Reduced -> Unreduced (TR)])
m4_define([NET], [TR.owfn])
TEST_REDEX
AT_CLEANUP

AT_SETUP([Unreduced -> Reduced])
m4_define([NET], [redex.owfn])
TEST_RED
AT_CLEANUP

