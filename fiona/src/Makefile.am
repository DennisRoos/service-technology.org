############################################################################
# Copyright 2005, 2006 Niels Lohmann, Christian Gierds, Dennis Reinert     #
#                                                                          #
# This file is part of BPEL2oWFN.                                          #
#                                                                          #
# BPEL2oWFN is free software; you can redistribute it and/or modify it     #
# under the terms of the GNU General Public License as published by the    #
# Free Software Foundation; either version 2 of the License, or (at your   #
# option) any later version.                                               #
#                                                                          #
# BPEL2oWFN is distributed in the hope that it will be useful, but WITHOUT #
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    #
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for #
# more details.                                                            #
#                                                                          #
# You should have received a copy of the GNU General Public License along  #
# with BPEL2oWFN; if not, write to the Free Software Foundation, Inc., 51  #
# Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.                     #
############################################################################

# File last changed $Date: 2008-06-03 09:20:18 $ by $Author: massuthe $.
# Version $Revision: 1.54 $

include $(top_srcdir)/Makefile.covcommon

bin_PROGRAMS = fiona

# define flags for Bison
AM_YFLAGS = --yacc --defines #--no-lines

# the list of sources
fiona_SOURCES = syntax_owfn.yy syntax_owfn_wrap.h \
        lexer_owfn.ll lexer_owfn_wrap.h\
        syntax_og.yy lexer_og.ll\
        syntax_stg.yy lexer_stg.ll \
        syntax_adapt_rules.yy lexer_adapt_rules.ll \
        syntax_dot.yy lexer_dot.ll \
        dot2tex.h dot2tex.cc\
        PetriNetNode.h PetriNetNode.cc\
        IG.cc owfnPlace.cc CommunicationGraph.h\
        IG.h owfnPlace.h\
        OG.cc owfnTransition.cc\
        OG.h owfnTransition.h\
        debug.cc\
        binDecision.h binDecision.cc \
        searchTrace.h \
        debug.h \
        GraphEdge.h GraphEdge.cc \
        AnnotatedGraphEdge.h AnnotatedGraphEdge.cc \
        dimensions.h main.cc symboltab.cc\
        main.h symboltab.h\
        options.cc userconfig.h\
        options.h GraphNode.cc \
        formula.cc owfn.cc GraphNode.h \
        AnnotatedGraphNode.h AnnotatedGraphNode.cc \
        formula.h owfn.h CommunicationGraph.cc\
        getopt.c getopt1.c getopt.h \
        BddRepresentation.h BddRepresentation.cc \
        BddLabel.h BddLabel.cc \
        state.h state.cc \
        newlogger.h newlogger.cc mynew.h \
        Exchangeability.h Exchangeability.cc \
        Graph.h Graph.cc \
        AnnotatedGraph.h AnnotatedGraph.cc GraphFormula.h GraphFormula.cc \
        containers.h containers.cc\
	adapter.h adapter.cc\
        stg2owfn.cc set_helpers.h SinglyLinkedList.h\
        GastexGraph.h GastexGraph.cc

# add here all files that are built by bison
YYSOURCES = syntax_owfn.cc syntax_og.cc syntax_stg.cc syntax_adapt_rules.cc syntax_dot.cc \
	    syntax_owfn.h syntax_og.h syntax_stg.h syntax_adapt_rules.h syntax_dot.h

# add here all files that are built by flex
LLSOURCES = lexer_owfn.cc lexer_og.cc lexer_stg.cc lexer_adapt_rules.cc lexer_dot.cc \
	    lexer_owfn.h 

# all files generated by additional tools like flex and bison
# note: always mention bison files before flex files, otherwise a missing header error will occur
BUILT_SOURCES = $(YYSOURCES) $(LLSOURCES)
		

EXTRA_DIST = lexer_owfn.h syntax_owfn.h syntax_og.h syntax_stg.h syntax_adapt_rules.h syntax_dot.h \
	     syntax_owfn.cc syntax_og.cc syntax_stg.cc syntax_adapt_rules.cc syntax_dot.cc

# BUILT_SOURCES are removed by make maintainerclean, any other files can be added here
MAINTAINERCLEANFILES =

# a target to avoid problems with Radon
veryclean: clean
	-rm -f $(BUILT_SOURCES)

# set the include path found by configure
INCLUDES = -I$(builddir)/../cudd/include $(all_includes)

# Set 64bit compile and link flags if 64bit was configured
if ENABLE_64BIT
LINK_COMPILE_64BIT_FLAG = -m64
else
LINK_COMPILE_64BIT_FLAG =
endif

OPTIMIZATION_LEVEL=-g -O2

WARNINGS=-W -Wall -Wno-unused

# Collect all compile flags
fiona_CXXFLAGS = ${LINK_COMPILE_64BIT_FLAG} $(OPTIMIZATION_LEVEL) $(WARNINGS)
fiona_CFLAGS = ${LINK_COMPILE_64BIT_FLAG} $(OPTIMIZATION_LEVEL) $(WARNINGS)

# the library search path.
fiona_LDFLAGS = ${LINK_COMPILE_64BIT_FLAG} $(all_libraries) 

fiona_LDADD = $(builddir)/../cudd/obj/libobj.a \
	$(builddir)/../cudd/dddmp/libdddmp.a $(builddir)/../cudd/cudd/libcudd.a \
	$(builddir)/../cudd/mtr/libmtr.a $(builddir)/../cudd/st/libst.a \
	$(builddir)/../cudd/util/libutil.a $(builddir)/../cudd/epd/libepd.a \
        lib_pnapi.a

lexer_owfn.h: lexer_owfn.cc
	$(EGREP) '^#define.*FLEX.*VERSION' $^ > $@

allcov: $(BUILT_SOURCES) fiona.h
	$(MAKE) $(AM_MAKEFLAGS) CXX="$(CXXCOV)" all
	$(MAKE) $(AM_MAKEFLAGS) cleandeps

clean-local: cleandeps

# the Petri net API
lib_LIBRARIES = lib_pnapi.a

lib_pnapi_a_SOURCES = pnapi/pnapi.cc pnapi/pnapi.h\
		      pnapi/helpers.cc pnapi/helpers.h \
		      pnapi/options.h \
		      pnapi/petrinet-output.cc \
		      pnapi/petrinet-reduction.cc \
		      pnapi/petrinet.cc \
		      pnapi/petrinet.h
