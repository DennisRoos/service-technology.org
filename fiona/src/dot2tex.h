/*****************************************************************************
 * Copyright 2007, 2008                                                      *
 *   Peter Massuthe, Robert Danitz                                           *
 *                                                                           *
 * This file is part of Fiona.                                               *
 *                                                                           *
 * Fiona is free software; you can redistribute it and/or modify it          *
 * under the terms of the GNU General Public License as published by the     *
 * Free Software Foundation; either version 2 of the License, or (at your    *
 * option) any later version.                                                *
 *                                                                           *
 * Fiona is distributed in the hope that it will be useful, but WITHOUT      *
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or     *
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for  *
 * more details.                                                             *
 *                                                                           *
 * You should have received a copy of the GNU General Public License along   *
 * with Fiona; if not, write to the Free Software Foundation, Inc., 51       *
 * Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.                      *
 *****************************************************************************/

/*!
 * \file    dot2tex.h
 *
 * \brief   utilities for dot to gastex conversion  
 *
 * \author  responsible: Robert Danitz <danitz@informatik.hu-berlin.de>
 *
 * \note    This file is part of the tool Fiona and was created during the
 *          project "Tools4BPEL" at the Humboldt-Universität zu Berlin. See
 *          http://www.informatik.hu-berlin.de/top/tools4bpel for details.
 *
 */

#ifndef _DOT2TEX_H_
#define _DOT2TEX_H_

#define YY_NO_UNPUT

#include <iostream>
#include <fstream>
#include <stdio.h>
#include <string>
#include <climits>

using namespace std;

class GasTexGraph;
extern GasTexGraph* gastexGraph;

string texFormat(string);

const bool stripCommandSequence = true;
const float charWidthRatio = 30.0;        // ratio between .dot width and .tex width
const float charHeightRatio = 10.0;       // ratio between .dot height and .tex height 
const float scaleFactor = .3;

const string pnNodeStdStmt = "";
const string pnNodeStmt[] = 
    {
        "\t\\node[", 
        "Nmr=",
        ",Nmarks=r",
        ", linegray=1.0",
        "](", 
        ")(", 
        ",", 
        "){\\textsf{", 
        "}}"
    };
const string pnInitialNodeStmt[] =
    {
        "\t\\drawcircle[fillcolor=Black](",
        ",",
        ",3)"
    };


const string ogNodeStdStmt = "";
const string ogNodeStmt[] = 
    {
        "\t\\node[", 
        "Nmr=", 
        ",Nmarks=",
        ",Nw=",
        ",Nh=",
        ",linecolor=",
        ",fillcolor=",
        "](", 
        ")(", 
        ",", 
        ")",
        "{\\textsf{", 
        "}}"
    };

const string pnEdgeStdStmt = "";
const string pnEdgeStmt[] = 
    {
        "\t\\drawedge",
        "[linegray=1.0,ELdist=0.0,AHangle=0,AHLength=0,AHlength=0,",
        "ELpos=65]",
        "ELpos=35]",
        "(", 
        ",", 
        "){\\textsf{", 
        "}}"
    };

const string ogEdgeStdStmt = "";
const string ogEdgeStmt[] = 
    {
        "\t\\drawedge",
        "[linecolor=",
        "]",
        "(", 
        ",", 
        "){\\textsf{", 
        "}}"
    };

const string pnBoxStmt[] = 
    {
        "\t\\drawrect[dash={3.0 3.0}{0.0},ExtNL=y,NLangle=45,NLdist=1.5](",
        ",",
        ",",
        ",",
        ")" 
    };

// this is specific to the output generated by fiona
// i.e.: "# 1\n((!A + ?B) * final)"
// higher order means higher priority when replacing
const int labelReplaceCount = 8; 
const string labelReplace[labelReplaceCount][2] = {

//  replace     into
    { "$", 	"\\$"       },
    { "# ",	"n"         },
    { "\\n", 	": "        },
    { "+",	"$\\vee$"   },
    { "*",	"$\\wedge$" },
    { "{", 	"\\{"       },
    { "}", 	"\\}"       },
    { "_",      "\\_"       }
};

const int texHeaderCount = 38;
const string texHeader[texHeaderCount] = {
    "\\documentclass{article}\n",
    "\\usepackage{gastex}\n",
    "\\usepackage[usenames]{color}% delete this line if you don't use colors\n",
    "\\pagestyle{empty}\n",
    "\n",
    "\\newcommand\\euro{{\\textsf{C}%\n",
    "  \\makebox[0pt][l]{\\kern-.73em\\mbox{--}}%\n",
    "  \\makebox[0pt][l]{\\kern-.71em\\raisebox{.25ex}{--}}}}\n",
    "\n",
    "\\newcommand\\msf[1]{{\\ensuremath{\\mathsf{#1}}}}\n",
    "\n",
    "\\begin{document}\n",
    "\\begin{center}\n",
    "\\begin{picture}(150, 0)(0, 200)\n",
    "%\\begin{picture}(oben-links)(unten-rechts)\n",
    "%\\begin{picture}(max-X, min-Y)(min-X, max-Y)\n",
    "%\\put(0,0){\\framebox(150, 200){}}\n",
    "\n",
    "  \\gasset{linewidth=0.3}                            % line width\n",
    "  \\gasset{ilength=5,iangle=130}                     % arc to initial node\n",
    "  \\gasset{Nw=5.5,Nh=5.5}                            % node width, node height\n",
    "%  \\gasset{Nmr=4.0}                                  % maximum radius of a node\n",
    "                                                     % (less than Nw/2 results in a rectangle)\n",
    "  \\gasset{AHangle=25,AHLength=2.7,AHlength=1.8}     % arrow shape\n",
    "  \\gasset{ELdist=1.3,ELside=r}                      % distance from edge to label, side of label\n",
    "  %\\gasset{ELpos=25}                                % position of edge label (0 = source, ..., 100 = des}\n",
    "\n",
    "  %\\drawedge[dash={2.0 2.0}{0.0},AHnb=0](n1,n2){ }  % a dashed line\n",
    "  %\\drawedge[curvedepth=3.0](n1,n2){ }              % a curved line\n",
    "\n",
    "  %\\node[Nfill=y,fillgray=0.8](p32)(30,20){ }       % a grey node\n",
    "  %\\node[Nfill=y,fillcolor=Blue](p33)(30,20){ }     % a blue node\n",
    "  %\\node[Nframe=n](p34)(30,20){ }                   % a node without frame\n",
    "\n",
    "  %\\node[Nw=6,Nh=6,Nmarks=r]                        % a final node\n",
    "\n",
    "% -------------------------------------------------------------------------------------------------------\n",
    "\n"
};

const int texFooterCount = 6;
const string texFooter[texFooterCount] = {
    "\n",
    "% -------------------------------------------------------------------------------------------------------\n",
    "\n",
    "\\end{picture}\n",
    "\\end{center}\n",
    "\\end{document}\n"
};

#endif // _DOT2TEX_H_

