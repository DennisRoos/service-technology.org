{
  generated by: Marlene 1.2-unreleased
  input file:   
  invocation:   marlene --rulefile=td_sync2.ar --asyncif --verbose ca1_sync.owfn td_cyclic.owfn 
  net size:     |P|= 40  |P_in|= 3  |P_out|= 2  |T|= 21  |F|= 84
}

PLACE
  INTERNAL
    control_rule_1, control_rule_2, control_rule_3, control_rule_4, control_rule_5, controller.p0, controller.p1, controller.p10, controller.p11, controller.p2, controller.p3, controller.p4, controller.p5, controller.p6, controller.p7, controller.p8, controller.p9, engine.MBevT_int, engine.MEuro_int, engine.TBevT_int, engine.TEuro_int, engine.comp_MBevT_int, engine.comp_MEuro_int, engine.comp_TBevT_int, engine.comp_TEuro_int, observe_rule_1, observe_rule_2, observe_rule_3, observe_rule_4, observe_rule_5, receive_MBevC, receive_MBevT, receive_TEuro, send_MEuro, send_TBevT;

  INPUT
    MBevC, MBevT, TEuro;

  OUTPUT
    MEuro, TBevT;

  SYNCHRONOUS
    MCB, MTB;

INITIALMARKING
  controller.p0, controller.p1, controller.p10, controller.p2, controller.p3, controller.p6, controller.p9, engine.comp_MBevT_int, engine.comp_MEuro_int, engine.comp_TBevT_int, engine.comp_TEuro_int;

FINALCONDITION
  (send_MEuro = 0 AND receive_TEuro = 0 AND receive_MBevT = 0 AND FALSE AND control_rule_5 = 0 AND observe_rule_2 = 0 AND control_rule_1 = 0 AND engine.comp_MBevT_int = 1 AND engine.comp_TBevT_int = 1 AND engine.comp_MEuro_int = 1 AND send_TBevT = 0 AND control_rule_4 = 0 AND engine.comp_TEuro_int = 1 AND observe_rule_1 = 0 AND control_rule_2 = 0 AND receive_MBevC = 0 AND control_rule_3 = 0 AND observe_rule_4 = 0 AND observe_rule_3 = 0 AND observe_rule_5 = 0 AND ALL_OTHER_PLACES_EMPTY);


TRANSITION controller.tcontrol_rule_1
  CONSUME controller.p1;
  PRODUCE control_rule_1, controller.p5;

TRANSITION controller.tcontrol_rule_2
  CONSUME controller.p3;
  PRODUCE control_rule_2, controller.p11;

TRANSITION controller.tcontrol_rule_3
  CONSUME controller.p9;
  PRODUCE control_rule_3, controller.p8;

TRANSITION controller.tobserve_rule_1
  CONSUME controller.p10, controller.p2, controller.p4, controller.p5, observe_rule_1;
  PRODUCE controller.p1, controller.p7;

TRANSITION controller.tobserve_rule_1/1
  CONSUME controller.p0, controller.p10, controller.p5, observe_rule_1;
  PRODUCE controller.p1, controller.p4;

TRANSITION controller.tobserve_rule_2
  CONSUME controller.p11, observe_rule_2;
  PRODUCE controller.p3;

TRANSITION controller.tobserve_rule_3
  CONSUME controller.p8, observe_rule_3;
  PRODUCE controller.p9;

TRANSITION controller.treceive_TEuro
  CONSUME controller.p2, controller.p4, controller.p6, receive_TEuro;
  PRODUCE controller.p7;

TRANSITION controller.treceive_TEuro/1
  CONSUME controller.p0, controller.p6, receive_TEuro;
  PRODUCE controller.p4;

TRANSITION controller.tsend_MEuro
  CONSUME controller.p7;
  PRODUCE controller.p4, send_MEuro;

TRANSITION controller.tsend_MEuro/1
  CONSUME controller.p2, controller.p4;
  PRODUCE controller.p0, send_MEuro;

TRANSITION engine.rule_1
  CONSUME control_rule_1, engine.TEuro_int, engine.comp_MEuro_int;
  PRODUCE engine.MEuro_int, engine.comp_TEuro_int, observe_rule_1;

TRANSITION engine.rule_2
  CONSUME control_rule_2;
  PRODUCE observe_rule_2;

TRANSITION engine.rule_3
  CONSUME control_rule_3;
  PRODUCE observe_rule_3;

TRANSITION engine.rule_4
  CONSUME control_rule_4, engine.MBevT_int, engine.comp_TBevT_int;
  PRODUCE engine.TBevT_int, engine.comp_MBevT_int, observe_rule_4;

TRANSITION engine.rule_5
  CONSUME control_rule_5, engine.MBevT_int, engine.comp_TBevT_int;
  PRODUCE engine.TBevT_int, engine.comp_MBevT_int, observe_rule_5;

TRANSITION engine.t_receive_MBevC
  CONSUME MBevC;
  PRODUCE receive_MBevC;

TRANSITION engine.t_receive_MBevT
  CONSUME MBevT, engine.comp_MBevT_int;
  PRODUCE engine.MBevT_int, receive_MBevT;

TRANSITION engine.t_receive_TEuro
  CONSUME TEuro, engine.comp_TEuro_int;
  PRODUCE engine.TEuro_int, receive_TEuro;

TRANSITION engine.t_send_MEuro
  CONSUME engine.MEuro_int, send_MEuro;
  PRODUCE MEuro, engine.comp_MEuro_int;

TRANSITION engine.t_send_TBevT
  CONSUME engine.TBevT_int, send_TBevT;
  PRODUCE TBevT, engine.comp_TBevT_int;


{ END OF FILE '' }
