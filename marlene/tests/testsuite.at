AT_INIT

# define macros to skip a test if LoLA or Fiona was not found by configure
m4_define(AT_CHECK_LOLA, [AT_CHECK([if test "LOLA" == ""; then exit 77; fi])])
m4_define(AT_CHECK_WENDY, [AT_CHECK([if test "WENDY" == ""; then exit 77; fi])])
m4_define(AT_CHECK_CANDY, [AT_CHECK([if test "CANDY" == ""; then exit 77; fi])])
m4_define(AT_CHECK_GENET, [AT_CHECK([if test "GENET" == "not_found"; then exit 77; fi])])
m4_define(AT_CHECK_PETRIFY, [AT_CHECK([if test "PETRIFY" == "not_found"; then exit 77; fi])])
#m4_define(AT_CHECK_FIONA, [AT_CHECK([if test "FIONA" == "not found"; then exit 77; fi])])

AT_TESTED(versions.sh)
#AT_TESTED(WENDY)
#AT_TESTED(LOLA_FULL)


############################################################################
AT_BANNER([Standard Options])
############################################################################

AT_SETUP([Help output])
AT_CHECK([MARLENE --help],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

AT_SETUP([Version output])
AT_CHECK([MARLENE --version],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

############################################################################
AT_BANNER([Small examples])
############################################################################

AT_SETUP([Small test (synchronous 1)])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/test.owfn TESTFILES/test.ar .])
AT_CHECK([MARLENE test.owfn --rulefile=test.ar --verbose],0,ignore,ignore)
AT_KEYWORDS(sample)
AT_CLEANUP

AT_SETUP([Small test (synchronous 2)])
AT_XFAIL_IF(true)
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/ca1_sync.owfn TESTFILES/td.owfn TESTFILES/td_sync.ar .])
AT_CHECK([MARLENE ca1_sync.owfn td.owfn --rulefile=td_sync.ar --verbose],0,ignore,ignore)
AT_KEYWORDS(sample)
AT_CLEANUP

AT_SETUP([Small test (asynchronous 1)])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/test.owfn TESTFILES/test.ar .])
AT_CHECK([MARLENE test.owfn --rulefile=test.ar --asyncif --verbose],0,ignore,ignore)
AT_KEYWORDS(sample)
AT_CLEANUP

#AT_SETUP([Small test (asynchronous 2)])
#AT_CHECK_WENDY
#AT_CHECK_LOLA
#AT_CHECK([cp TESTFILES/ca1_sync.owfn TESTFILES/td.owfn TESTFILES/td_sync.ar .])
#AT_CHECK([MARLENE ca1_sync.owfn td.owfn --rulefile=td_sync.ar --asyncif --verbose],0,ignore,ignore)
#AT_KEYWORDS(sample)
#AT_CLEANUP

AT_SETUP([Small test (no complement)])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/test-n.owfn TESTFILES/test-n.ar .])
AT_CHECK([MARLENE test-n.owfn --rulefile=test-n.ar --nocomplementplaces --verbose],0,ignore,stderr)
AT_CHECK([GREP -q "skipping creation of complementary places" stderr],0)
AT_KEYWORDS(sample)
AT_CLEANUP

AT_SETUP([Small test (piping)])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/test-n.owfn TESTFILES/test-n.ar .])
AT_CHECK([MARLENE --rulefile=test-n.ar --nocomplementplaces --verbose < test-n.owfn > out.owfn],0,ignore,ignore)
AT_KEYWORDS(sample)
AT_CLEANUP

AT_SETUP([Small test (saving result)])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/test-n.owfn TESTFILES/test-n.ar .])
AT_CHECK([MARLENE --rulefile=test-n.ar --nocomplementplaces --output=out.owfn --verbose < test-n.owfn],0,ignore,ignore)
AT_CHECK([test -f out.owfn])
AT_KEYWORDS(sample)
AT_CLEANUP

############################################################################
AT_BANNER([Special options])
############################################################################

AT_SETUP([Verbose and very verbose information])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/test.owfn TESTFILES/test.ar .])
AT_CHECK([MARLENE test.owfn --rulefile=test.ar --verbose --veryverbose],0,ignore,ignore)
AT_KEYWORDS(special)
AT_CLEANUP

AT_SETUP([Do not remove temporary files])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/test.owfn TESTFILES/test.ar .])
AT_CHECK([MARLENE test.owfn --rulefile=test.ar --verbose --veryverbose --noClean],0,ignore,ignore)
AT_KEYWORDS(special)
AT_CLEANUP

AT_SETUP([Bug information])
AT_CHECK([MARLENE --bug],0,,ignore)
AT_CHECK([test -f bug.log])
AT_KEYWORDS(special)
AT_CLEANUP

############################################################################
AT_BANNER([Special adapters])
############################################################################
AT_SETUP([control of rules])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/ca1.owfn TESTFILES/td.owfn TESTFILES/td.ar .])
AT_CHECK([MARLENE ca1.owfn td.owfn --rulefile=td.ar --verbose],0,ignore,ignore)
AT_KEYWORDS(specadapters)
AT_CLEANUP

AT_SETUP([chatty adapter])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/ca2.owfn TESTFILES/td.owfn TESTFILES/td.ar .])
AT_CHECK([MARLENE ca2.owfn td.owfn --rulefile=td.ar --asyncif --chatty --verbose],0,ignore,ignore)
AT_KEYWORDS(specadapters)
AT_CLEANUP

AT_SETUP([arrogant adapter])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/ca2.owfn TESTFILES/td.owfn TESTFILES/td.ar .])
AT_CHECK([MARLENE ca2.owfn td.owfn --rulefile=td.ar --asyncif --arrogant --verbose],0,ignore,ignore)
AT_KEYWORDS(specadapters)
AT_CLEANUP

AT_SETUP([costs optimized adapter])
AT_XFAIL_IF(true)
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK_CANDY
AT_CHECK([cp TESTFILES/ca1.owfn TESTFILES/td_ret.owfn TESTFILES/td_ret.ar .])
AT_CHECK([MARLENE ca1.owfn td_ret.owfn --rulefile=td_ret.ar --costoptimized --verbose],0,ignore,ignore)
AT_KEYWORDS(specadapters)
AT_CLEANUP

AT_SETUP([engine only])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/test.owfn TESTFILES/test.ar .])
AT_CHECK([MARLENE test.owfn --rulefile=test.ar --engineonly --verbose],0,ignore,ignore)
AT_KEYWORDS(sample)
AT_CLEANUP

AT_SETUP([controller only])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/test.owfn TESTFILES/test.ar .])
AT_CHECK([MARLENE test.owfn --rulefile=test.ar --controlleronly --verbose],0,ignore,ignore)
AT_KEYWORDS(sample)
AT_CLEANUP

AT_SETUP([adding prefixes to nets (1)])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/ca1.owfn TESTFILES/td.owfn TESTFILES/td.ar .])
AT_CHECK([MARLENE ca1.owfn td.owfn td.owfn --rulefile=td.ar --withprefix --verbose],0,ignore,ignore)
AT_KEYWORDS(specadapters)
AT_CLEANUP

AT_SETUP([adding prefix to net (2)])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/test.owfn TESTFILES/test.ar .])
AT_CHECK([MARLENE --rulefile=test.ar --withprefix --verbose < test.owfn],0,ignore,ignore)
AT_KEYWORDS(specadapters)
AT_CLEANUP

AT_SETUP([unadaptability])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/ca1.owfn TESTFILES/td.owfn TESTFILES/td.ar .])
AT_CHECK([MARLENE ca1.owfn td.owfn --verbose],1,ignore,stderr)
AT_CHECK([GREP -q "Controller was not built" stderr],0)
AT_KEYWORDS(specadapters)
AT_CLEANUP

AT_SETUP([diagnosis of unadaptability])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/ca1.owfn TESTFILES/td.owfn TESTFILES/td.ar .])
AT_CHECK([MARLENE ca1.owfn td.owfn --diagnosis --verbose],1,ignore,ignore)
AT_KEYWORDS(specadapters)
AT_CLEANUP

AT_SETUP([region based conversion (Petrify) for controller])
AT_CHECK_PETRIFY
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/ca1.owfn TESTFILES/td.owfn TESTFILES/td.ar .])
AT_CHECK([MARLENE ca1.owfn td.owfn --rulefile=td.ar --messagebound=1 --verbose --sa2on=petrify],0,ignore,stderr)
AT_CHECK([GREP -q "Using Petrify for conversion from SA to open net." stderr],0)
AT_KEYWORDS(specadapters)
AT_CLEANUP

AT_SETUP([region based conversion (Genet) for controller])
AT_CHECK_GENET
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/ca1.owfn TESTFILES/td.owfn TESTFILES/td.ar .])
AT_CHECK([MARLENE ca1.owfn td.owfn --rulefile=td.ar --messagebound=1 --verbose --sa2on=genet],0,ignore,stderr)
AT_CHECK([GREP -q "Using Genet for conversion from SA to open net." stderr],0)
AT_KEYWORDS(specadapters)
AT_CLEANUP

AT_SETUP([state machine conversion for controller])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/ca1.owfn TESTFILES/td.owfn TESTFILES/td.ar .])
AT_CHECK([MARLENE ca1.owfn td.owfn --rulefile=td.ar --messagebound=1 --verbose --sa2on=statemachine],0,ignore,stderr)
AT_CHECK([GREP -q "Using a state machine for conversion from SA to open net." stderr],0)
AT_KEYWORDS(specadapters)
AT_CLEANUP

AT_SETUP([state machine conversion for controller (fall-back from Petrify and Genet)])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/ca1.owfn TESTFILES/td.owfn TESTFILES/td.ar TESTFILES/nopetrify.conf .])
AT_CHECK([MARLENE ca1.owfn td.owfn --rulefile=td.ar --conf=nopetrify.conf --messagebound=1 --verbose --sa2on=petrify],0,ignore,stderr)
AT_CHECK([GREP -q "Using a state machine for conversion from SA to open net." stderr],0)
AT_CHECK([MARLENE ca1.owfn td.owfn --rulefile=td.ar --conf=nopetrify.conf --messagebound=1 --verbose --sa2on=genet],0,ignore,stderr)
AT_CHECK([GREP -q "Using a state machine for conversion from SA to open net." stderr],0)
AT_KEYWORDS(specadapters)
AT_CLEANUP

############################################################################
AT_BANNER([Infrastructure])
############################################################################

AT_SETUP([Using own configuration file])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/ca1.owfn TESTFILES/td.owfn TESTFILES/td.ar .])
AT_DATA([my.conf],[verbose
])
AT_CHECK([MARLENE ca1.owfn td.owfn --rulefile=td.ar --conf=my.conf --stats],0,ignore,stderr)
AT_CHECK([GREP -q "using configuration file 'my.conf'" stderr],0)
AT_KEYWORDS(infrastructure)
AT_CLEANUP

AT_SETUP([Using present configuration file])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/ca1.owfn TESTFILES/td.owfn TESTFILES/td.ar .])
AT_DATA([marlene.conf],[verbose
])
AT_CHECK([MARLENE ca1.owfn td.owfn --rulefile=td.ar --stats],0,ignore,stderr)
AT_CHECK([GREP -q "using configuration file 'marlene.conf'" stderr],0)
AT_KEYWORDS(infrastructure)
AT_CLEANUP

AT_SETUP([Failure using own configuration file])
AT_CHECK([cp TESTFILES/ca1.owfn TESTFILES/td.owfn TESTFILES/td.ar .])
AT_DATA([my.conf],[verbose
])
AT_CHECK([chmod 000 my.conf],0)
AT_CHECK([MARLENE ca1.owfn td.owfn --rulefile=td.ar --conf=my.conf --stats],1,ignore,stderr)
AT_CHECK([GREP -q "Error opening configuration file 'my.conf'" stderr],0)
AT_CHECK([chmod 666 my.conf],0)
AT_KEYWORDS(infrastructure)
AT_CLEANUP

#AT_SETUP([Failure using present configuration file])
#AT_CHECK([cp TESTFILES/ca1.owfn TESTFILES/td.owfn TESTFILES/td.ar .])
#AT_DATA([marlene.conf],[verbose
#])
#AT_CHECK([chmod 000 marlene.conf],0)
#AT_CHECK([MARLENE ca1.owfn td.owfn --rulefile=td.ar --stats],0,ignore,stderr)
#AT_CHECK([GREP -q "Error opening configuration file 'marlene.conf'" stderr],0)
#AT_CHECK([chmod 666 marlene.conf],0)
#AT_KEYWORDS(infrastructure)
#AT_CLEANUP

AT_SETUP([Determining runtime and allocated memory])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/ca1.owfn TESTFILES/td.owfn TESTFILES/td.ar .])
AT_CHECK([MARLENE ca1.owfn td.owfn --rulefile=td.ar --verbose --stats],0,ignore,stderr)
AT_CHECK([GREP -q "runtime" stderr])
AT_CHECK([GREP -q "memory consumption" stderr])
AT_KEYWORDS(infrastructure)
AT_CLEANUP

AT_SETUP([Checking for memory leaks with Valgrind])
AT_XFAIL_IF(true)
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/ca1.owfn TESTFILES/td.owfn TESTFILES/td.ar .])
AT_CHECK([VALGRIND --leak-check=full --show-reachable=yes MARLENE_RAW ca1.owfn td.owfn --rulefile=td.ar],0,ignore,stderr)
AT_CHECK([GREP -q "All heap blocks were freed -- no leaks are possible" stderr])
AT_KEYWORDS(infrastructure)
AT_CLEANUP

############################################################################
AT_BANNER([Error handling])
############################################################################
AT_SETUP([wrong command line option])
AT_CHECK([MARLENE --wrongparameter --verbose],1,ignore,stderr)
AT_CHECK([GREP -q "unrecognized option" stderr],0)
AT_KEYWORDS(errorhandling)
AT_CLEANUP

AT_SETUP([wrong command line argument])
AT_CHECK([MARLENE --sa2on=wrongoption --verbose],1,ignore,stderr)
AT_CHECK([GREP -q "invalid argument" stderr],0)
AT_KEYWORDS(errorhandling)
AT_CLEANUP

AT_SETUP([Reading open net fails])
AT_CHECK([MARLENE nichtda.owfn --verbose],1,ignore,stderr)
AT_CHECK([GREP -q "Open net file nichtda.owfn could not be opened for reading" stderr],0)
AT_KEYWORDS(errorhandling)
AT_CLEANUP

AT_SETUP([Reading adapter rules fails])
AT_CHECK([cp TESTFILES/test.owfn .])
AT_CHECK([MARLENE test.owfn --rulefile=nichtda.ar --verbose],1,ignore,stderr)
AT_CHECK([GREP -q "Rule file nichtda.ar could not be opened for reading" stderr],0)
AT_KEYWORDS(errorhandling)
AT_CLEANUP

AT_SETUP([no temporary file creation possible])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([MKDIR temptest])
AT_CHECK([chmod 400 temptest])
AT_CHECK([cp TESTFILES/ca1.owfn TESTFILES/td.owfn TESTFILES/td.ar .])
AT_CHECK([MARLENE ca1.owfn td.owfn --rulefile=td.ar --tmpfile=temptest/marlene-XXXXXX --verbose],1,ignore,stderr)
AT_CHECK([GREP -q "could not create to temporary file" stderr],0)
AT_KEYWORDS(errorhandling)
AT_CLEANUP

AT_SETUP([cannot write to output file])
AT_CHECK_WENDY
AT_CHECK_LOLA
AT_CHECK([MKDIR temptest])
AT_CHECK([chmod 400 temptest])
AT_CHECK([cp TESTFILES/test-n.owfn TESTFILES/test-n.ar .])
AT_CHECK([MARLENE --rulefile=test-n.ar --nocomplementplaces --output=temptest/out.owfn --verbose < test-n.owfn],1,ignore,stderr)
AT_CHECK([GREP -q "could not write to file 'temptest/out.owfn' -- aborting" stderr],0)
AT_KEYWORDS(errorhandling)
AT_CLEANUP

AT_SETUP([Wendy fails])
AT_CHECK([cp TESTFILES/test-n.owfn .])
AT_CHECK([MARLENE test-n.owfn --verbose --wendy=false],1,ignore,stderr)
AT_CHECK([GREP -q "Wendy returned with status" stderr],0)
AT_KEYWORDS(errorhandling)
AT_CLEANUP

AT_SETUP([Reading oWFN with wrong syntax (1)])
AT_CHECK([cp TESTFILES/wrongsyntax.owfn .])
AT_CHECK([MARLENE wrongsyntax.owfn --verbose],1,ignore,stderr)
AT_CHECK([GREP -q "wrongsyntax.owfn:1: error" stderr],0)
AT_KEYWORDS(errorhandling)
AT_CLEANUP

AT_SETUP([Reading oWFN with wrong syntax (2)])
AT_CHECK([cp TESTFILES/wrongsyntax.owfn .])
AT_CHECK([MARLENE --verbose < wrongsyntax.owfn],1,ignore,stderr)
AT_CHECK([GREP -q "marlene::1: error near" stderr],0)
AT_KEYWORDS(errorhandling)
AT_CLEANUP

AT_SETUP([Reading adapter rules with wrong syntax])
AT_CHECK([cp TESTFILES/test-n.owfn TESTFILES/wrongsyntax.ar .])
AT_CHECK([MARLENE test-n.owfn --rulefile=wrongsyntax.ar --verbose],1,ignore,stderr)
AT_CHECK([GREP -q "error while reading adapter rules" stderr],0)
AT_KEYWORDS(errorhandling)
AT_CLEANUP

AT_SETUP([Reading adapter rules with wrong lexic])
AT_CHECK([cp TESTFILES/test-n.owfn TESTFILES/wronglexic.ar .])
AT_CHECK([MARLENE test-n.owfn --rulefile=wronglexic.ar --verbose],1,ignore,stderr)
AT_CHECK([GREP -q "lexical error" stderr],0)
AT_KEYWORDS(errorhandling)
AT_CLEANUP

