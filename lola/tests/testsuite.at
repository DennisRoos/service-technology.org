AT_INIT

############################################################################
AT_BANNER([Standard Options])
############################################################################

AT_SETUP([Help output])
AT_CHECK([LOLA_BOUNDEDNET --help],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

AT_SETUP([Help output])
AT_CHECK([LOLA_DEADLOCK --help],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

AT_SETUP([Help output])
AT_CHECK([LOLA_FULLLIMITED --help],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

AT_SETUP([Help output])
AT_CHECK([LOLA_LIVEPROP --help],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

AT_SETUP([Help output])
AT_CHECK([LOLA_MODELCHECKING --help],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

AT_SETUP([Help output])
AT_CHECK([LOLA_STATEPREDICATE1 --help],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

AT_SETUP([Version output])
AT_CHECK([LOLA_BOUNDEDNET --version],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

AT_SETUP([Version output])
AT_CHECK([LOLA_DEADLOCK --version],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

AT_SETUP([Version output])
AT_CHECK([LOLA_FULLLIMITED --version],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

AT_SETUP([Version output])
AT_CHECK([LOLA_LIVEPROP --version],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

AT_SETUP([Version output])
AT_CHECK([LOLA_MODELCHECKING --version],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

AT_SETUP([Version output])
AT_CHECK([LOLA_STATEPREDICATE1 --version],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP


############################################################################
AT_BANNER([Debug Options])
############################################################################

AT_SETUP([Offspring generation])
AT_CHECK([LOLA_BOUNDEDNET --offspring],0,ignore,ignore)
AT_CHECK([test -f userconfig.H.offspring])
AT_KEYWORDS(debug)
AT_CLEANUP

AT_SETUP([Offspring generation])
AT_CHECK([LOLA_DEADLOCK --offspring],0,ignore,ignore)
AT_CHECK([test -f userconfig.H.offspring])
AT_KEYWORDS(debug)
AT_CLEANUP

AT_SETUP([Offspring generation])
AT_CHECK([LOLA_FULLLIMITED --offspring],0,ignore,ignore)
AT_CHECK([test -f userconfig.H.offspring])
AT_KEYWORDS(debug)
AT_CLEANUP

AT_SETUP([Offspring generation])
AT_CHECK([LOLA_LIVEPROP --offspring],0,ignore,ignore)
AT_CHECK([test -f userconfig.H.offspring])
AT_KEYWORDS(debug)
AT_CLEANUP

AT_SETUP([Offspring generation])
AT_CHECK([LOLA_MODELCHECKING --offspring],0,ignore,ignore)
AT_CHECK([test -f userconfig.H.offspring])
AT_KEYWORDS(debug)
AT_CLEANUP

AT_SETUP([Offspring generation])
AT_CHECK([LOLA_STATEPREDICATE1 --offspring],0,ignore,ignore)
AT_CHECK([test -f userconfig.H.offspring])
AT_KEYWORDS(debug)
AT_CLEANUP


############################################################################
AT_BANNER([File Output])
############################################################################

AT_SETUP([Graph output (-G)])
AT_CHECK([cp TESTFILES/phils.lola .])
AT_CHECK([LOLA_DEADLOCK phils.lola -G],0,stdout,ignore)
AT_CHECK([GREP -q "STATE *" stdout])
AT_KEYWORDS(output)
AT_CLEANUP

AT_SETUP([Graph output (-g)])
AT_CHECK([cp TESTFILES/phils.lola .])
AT_CHECK([LOLA_DEADLOCK phils.lola -g],0,ignore,ignore)
AT_CHECK([GREP -q "STATE *" phils.graph])
AT_KEYWORDS(output)
AT_CLEANUP

AT_SETUP([Graph output (-M)])
AT_CHECK([cp TESTFILES/phils.lola .])
AT_CHECK([LOLA_DEADLOCK phils.lola -M],0,stdout,ignore)
AT_CHECK([GREP -q "hl.10 : 1" stdout])
AT_KEYWORDS(output)
AT_CLEANUP

AT_SETUP([Graph output (-m)])
AT_CHECK([cp TESTFILES/phils.lola .])
AT_CHECK([LOLA_DEADLOCK phils.lola -m],0,ignore,ignore)
AT_CHECK([GREP -q "hl.10 : 1" phils.graph])
AT_KEYWORDS(output)
AT_CLEANUP

AT_SETUP([State output (-S)])
AT_CHECK([cp TESTFILES/phils.lola .])
AT_CHECK([LOLA_DEADLOCK phils.lola -S],0,stdout,ignore)
AT_CHECK([GREP -q "hl.10 : 1" stdout])
AT_KEYWORDS(output)
AT_CLEANUP

AT_SETUP([State output (-s)])
AT_CHECK([cp TESTFILES/phils.lola .])
AT_CHECK([LOLA_DEADLOCK phils.lola -s],0,ignore,ignore)
AT_CHECK([GREP -q "hl.10 : 1" phils.state])
AT_KEYWORDS(output)
AT_CLEANUP

AT_SETUP([Result output (-r)])
AT_CHECK([cp TESTFILES/phils.lola .])
AT_CHECK([LOLA_DEADLOCK phils.lola -r],0,ignore,ignore)
AT_CHECK([GREP -q "deadlock:" phils.result])
AT_KEYWORDS(output)
AT_CLEANUP


############################################################################
AT_BANNER([High-level Net Unfolding])
############################################################################

AT_SETUP([Data])
AT_CHECK([cp TESTFILES/data.lola .])
AT_CHECK([LOLA_DEADLOCK data.lola -n],1,stdout)
AT_CHECK([test -f data.llnet])
AT_CHECK([test -f data.pnml])
AT_KEYWORDS(unfolding)
AT_CLEANUP

AT_SETUP([Dining Philosophers])
AT_CHECK([cp TESTFILES/phils.lola .])
AT_CHECK([LOLA_DEADLOCK phils.lola -n],0,stdout)
AT_CHECK([test -f phils.llnet])
AT_CHECK([test -f phils.pnml])
AT_KEYWORDS(unfolding)
AT_CLEANUP

AT_SETUP([Echo Algorithm])
AT_CHECK([cp TESTFILES/echo.lola .])
AT_CHECK([LOLA_DEADLOCK echo.lola -n],0,stdout)
AT_CHECK([test -f echo.llnet])
AT_CHECK([test -f echo.pnml])
AT_KEYWORDS(unfolding)
AT_CLEANUP


############################################################################
AT_BANNER([Deadlock Check (lola-deadlock)])
############################################################################

AT_SETUP([Choreography])
AT_CHECK([cp TESTFILES/choreography.lola .])
AT_CHECK([LOLA_DEADLOCK choreography.lola],1,stdout)
AT_CHECK([GREP -q "net does not have deadlocks!" stdout],0)
AT_KEYWORDS(deadlock)
AT_CLEANUP

AT_SETUP([Data])
AT_CHECK([cp TESTFILES/data.lola .])
AT_CHECK([LOLA_DEADLOCK data.lola],1,stdout)
AT_CHECK([GREP -q "net does not have deadlocks!" stdout],0)
AT_KEYWORDS(deadlock)
AT_CLEANUP

AT_SETUP([Echo Algorithm])
AT_CHECK([cp TESTFILES/echo.lola .])
AT_CHECK([LOLA_DEADLOCK echo.lola],0,stdout)
AT_CHECK([GREP -q "dead state found!" stdout],0)
AT_KEYWORDS(deadlock)
AT_CLEANUP

AT_SETUP([Dining Philosophers])
AT_CHECK([cp TESTFILES/phils.lola .])
AT_CHECK([LOLA_DEADLOCK phils.lola],0,stdout)
AT_CHECK([GREP -q "dead state found!" stdout],0)
AT_KEYWORDS(deadlock)
AT_CLEANUP


############################################################################
AT_BANNER([Limited State Space (lola-fulllimited)])
############################################################################

AT_SETUP([Echo Algorithm])
AT_CHECK([cp TESTFILES/echo.lola .])
AT_CHECK([LOLA_FULLLIMITED echo.lola],5,ignore,stderr)
AT_CHECK([GREP -q "maximal number of states reached" stderr],0)
AT_KEYWORDS(fulllimited)
AT_CLEANUP

AT_SETUP([Garavel's Challenge])
AT_CHECK([cp TESTFILES/garavel.lola .])
AT_CHECK([LOLA_FULLLIMITED garavel.lola],5,ignore,stderr)
AT_CHECK([GREP -q "maximal number of states reached" stderr],0)
AT_KEYWORDS(fulllimited)
AT_CLEANUP

AT_SETUP([Unbounded Net])
AT_CHECK([cp TESTFILES/unbounded.lola .])
AT_CHECK([LOLA_FULLLIMITED unbounded.lola],5,ignore,stderr)
AT_CHECK([GREP -q "maximal number of states reached" stderr],0)
AT_KEYWORDS(fulllimited)
AT_CLEANUP


############################################################################
AT_BANNER([State Predicate (lola-statepredicate1)])
############################################################################

AT_SETUP([AI Planning Problem])
AT_CHECK([cp TESTFILES/planner.lola .])
AT_CHECK([cp TESTFILES/planner.task .])
AT_CHECK([LOLA_STATEPREDICATE1 planner.lola -aplanner.task],0,stdout)
AT_CHECK([GREP -q "state found!" stdout],0)
AT_KEYWORDS(statepredicate1)
AT_CLEANUP


############################################################################
AT_BANNER([CTL Model Checking (lola-modelchecking)])
############################################################################

AT_SETUP([Business Process])
AT_CHECK([cp TESTFILES/process.lola .])
AT_CHECK([cp TESTFILES/process.task .])
AT_CHECK([LOLA_MODELCHECKING process.lola -aprocess.task],1,stdout)
AT_CHECK([GREP -q "result: false" stdout],0)
AT_KEYWORDS(modelchecking)
AT_CLEANUP


############################################################################
AT_BANNER([Liveprop (lola-liveprop)])
############################################################################

AT_SETUP([UML Activity Diagram])
AT_CHECK([cp TESTFILES/umlprocess.lola .])
AT_CHECK([LOLA_LIVEPROP umlprocess.lola],1,stdout)
AT_CHECK([GREP -q "predicate not live: not satisfiable beyond reported state" stdout],0)
AT_KEYWORDS(liveprop)
AT_CLEANUP


############################################################################
AT_BANNER([Boundedness Check (lola-boundednet)])
############################################################################

AT_SETUP([Business Process])
AT_CHECK([cp TESTFILES/process.lola .])
AT_CHECK([LOLA_BOUNDEDNET process.lola],1,stdout)
AT_CHECK([GREP -q "net is bounded!" stdout],0)
AT_KEYWORDS(boundednet)
AT_CLEANUP

#AT_SETUP([Choreography])
#AT_CHECK([cp TESTFILES/choreography.lola .])
#AT_CHECK([LOLA_BOUNDEDNET choreography.lola],1,stdout)
#AT_CHECK([GREP -q "net is bounded!" stdout],0)
#AT_KEYWORDS(boundednet)
#AT_CLEANUP

AT_SETUP([Data])
AT_CHECK([cp TESTFILES/data.lola .])
AT_CHECK([LOLA_BOUNDEDNET data.lola],1,stdout)
AT_CHECK([GREP -q "net is bounded!" stdout],0)
AT_KEYWORDS(boundednet)
AT_CLEANUP

#AT_SETUP([Dining Philosophers])
#AT_CHECK([cp TESTFILES/phils.lola .])
#AT_CHECK([LOLA_BOUNDEDNET phils.lola],1,stdout)
#AT_CHECK([GREP -q "net is bounded!" stdout],0)
#AT_KEYWORDS(boundednet)
#AT_CLEANUP

AT_SETUP([Garavel's Challenge])
AT_CHECK([cp TESTFILES/garavel.lola .])
AT_CHECK([LOLA_BOUNDEDNET garavel.lola],1,stdout)
AT_CHECK([GREP -q "net is bounded!" stdout],0)
AT_KEYWORDS(boundednet)
AT_CLEANUP

AT_SETUP([UML Activity Diagram])
AT_CHECK([cp TESTFILES/umlprocess.lola .])
AT_CHECK([LOLA_BOUNDEDNET umlprocess.lola],1,stdout)
AT_CHECK([GREP -q "net is bounded!" stdout],0)
AT_KEYWORDS(boundednet)
AT_CLEANUP

AT_SETUP([Unbounded Net])
AT_CHECK([cp TESTFILES/unbounded.lola .])
AT_CHECK([LOLA_BOUNDEDNET unbounded.lola],0,stdout)
AT_CHECK([GREP -q "net is unbounded!" stdout],0)
AT_KEYWORDS(boundednet)
AT_CLEANUP


############################################################################
AT_BANNER([Regression Tests])
############################################################################

AT_SETUP([Bug 15282 (https://gna.org/bugs/?15282)])
AT_CHECK([cp TESTFILES/bug15282.lola .])
AT_CHECK([LOLA_STATESPACE bug15282.lola -M],0,stdout)
AT_CHECK([GREP -q "STATE 2 Lowlink: 2" stdout],0)
AT_KEYWORDS(bugs)
AT_CLEANUP



