AT_INIT

# define macros to skip a test if the tools were not found by configure
m4_define(AT_CHECK_FIONA, [AT_CHECK([if test "FIONA" == "not found"; then exit 77; fi])])
m4_define(AT_CHECK_WENDY, [AT_CHECK([if test "WENDY" == "not found"; then exit 77; fi])])
m4_define(AT_CHECK_SA2SM, [AT_CHECK([if test "SA2SM" == "not found"; then exit 77; fi])])

############################################################################
AT_BANNER([Standard Options])
############################################################################

AT_SETUP([Help output])
AT_CHECK([SAYO --help],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

AT_SETUP([Version output])
AT_CHECK([SAYO --version],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

############################################################################
AT_BANNER([I/O Tests])
############################################################################

AT_SETUP([File In, File Out])
AT_CHECK([cp TESTFILES/zeus.wendy.og .])
AT_CHECK([SAYO --input=zeus.wendy.og --output=zeus.sa],0)
AT_CHECK([test -f zeus.sa])
AT_KEYWORDS(io)
AT_CLEANUP

AT_SETUP([File In, Pipe Out])
AT_CHECK([cp TESTFILES/zeus.wendy.og .])
AT_CHECK([SAYO --input=zeus.wendy.og > zeus.sa],0)
AT_CHECK([test -f zeus.sa])
AT_KEYWORDS(io)
AT_CLEANUP

AT_SETUP([Pipe In, File Out])
AT_CHECK([cp TESTFILES/zeus.wendy.og .])
AT_CHECK([cat zeus.wendy.og | SAYO --output=zeus.sa],0)
AT_CHECK([test -f zeus.sa])
AT_KEYWORDS(io)
AT_CLEANUP

AT_SETUP([Pipe In, Pipe Out])
AT_CHECK([cp TESTFILES/zeus.wendy.og .])
AT_CHECK([cat zeus.wendy.og | SAYO > zeus.sa],0)
AT_CHECK([test -f zeus.sa])
AT_KEYWORDS(io)
AT_CLEANUP

############################################################################
AT_BANNER([Equivalence Tests])
############################################################################

AT_SETUP([Coffee Automaton])
AT_CHECK([cp TESTFILES/myCoffee.*.og .])
AT_CHECK([SAYO --input=myCoffee.wendy.og --output=myCoffee.sa])
AT_CHECK_SA2SM
AT_CHECK([SA2SM myCoffee.sa myCoffee.owfn])
AT_CHECK_WENDY
AT_CHECK([WENDY myCoffee.owfn --og --fionaFormat],0, ignore, ignore)
AT_CHECK_FIONA
AT_CHECK([FIONA -t equivalence myCoffee.og myCoffee.fiona.og], 0, stdout, ignore)
AT_CHECK([GREP -q "equivalent: YES" stdout])
AT_KEYWORDS(equivalence)
AT_CLEANUP

AT_SETUP([Dining Philosophers])
AT_CHECK([cp TESTFILES/phcontrol3.unf.*.og .])
AT_CHECK([SAYO --input=phcontrol3.unf.wendy.og --output=phcontrol3.unf.sa])
AT_CHECK_SA2SM
AT_CHECK([SA2SM phcontrol3.unf.sa phcontrol3.unf.owfn])
AT_CHECK_WENDY
AT_CHECK([WENDY phcontrol3.unf.owfn --og --fionaFormat],0, ignore, ignore)
AT_CHECK_FIONA
AT_CHECK([FIONA -t equivalence phcontrol3.unf.og phcontrol3.unf.fiona.og], 0, stdout, ignore)
AT_CHECK([GREP -q "equivalent: YES" stdout])
AT_KEYWORDS(equivalence)
AT_CLEANUP

AT_SETUP([Purchase Order Process])
AT_CHECK([cp TESTFILES/PO.*.og .])
AT_CHECK([SAYO --input=PO.wendy.og --output=PO.sa])
AT_CHECK_SA2SM
AT_CHECK([SA2SM PO.sa PO.owfn])
AT_CHECK_WENDY
AT_CHECK([WENDY PO.owfn --og --fionaFormat],0, ignore, ignore)
AT_CHECK_FIONA
AT_CHECK([FIONA -t equivalence PO.og PO.fiona.og], 0, stdout, ignore)
AT_CHECK([GREP -q "equivalent: YES" stdout])
AT_KEYWORDS(equivalence)
AT_CLEANUP

AT_SETUP([Sequence])
AT_CHECK([cp TESTFILES/sequence10.*.og .])
AT_CHECK([SAYO --input=sequence10.wendy.og --output=sequence10.sa])
AT_CHECK_SA2SM
AT_CHECK([SA2SM sequence10.sa sequence10.owfn])
AT_CHECK_WENDY
AT_CHECK([WENDY sequence10.owfn --og --fionaFormat],0, ignore, ignore)
AT_CHECK_FIONA
AT_CHECK([FIONA -t equivalence sequence10.og sequence10.fiona.og], 0, stdout, ignore)
AT_CHECK([GREP -q "equivalent: YES" stdout])
AT_KEYWORDS(equivalence)
AT_CLEANUP

AT_SETUP([SMTP Protocol])
AT_CHECK([cp TESTFILES/smtp3.*.og .])
AT_CHECK([SAYO --input=smtp3.wendy.og --output=smtp3.sa])
AT_CHECK_SA2SM
AT_CHECK([SA2SM smtp3.sa smtp3.owfn])
AT_CHECK_WENDY
AT_CHECK([WENDY smtp3.owfn --og --fionaFormat],0, ignore, ignore)
AT_CHECK_FIONA
AT_CHECK([FIONA -t equivalence smtp3.og smtp3.fiona.og], 0, stdout, ignore)
AT_CHECK([GREP -q "equivalent: YES" stdout])
AT_KEYWORDS(equivalence)
AT_CLEANUP

AT_SETUP([ZEUS Seller Service])
AT_CHECK([cp TESTFILES/zeus.*.og .])
AT_CHECK([SAYO --input=zeus.wendy.og --output=zeus.sa])
AT_CHECK_SA2SM
AT_CHECK([SA2SM zeus.sa zeus.owfn])
AT_CHECK_WENDY
AT_CHECK([WENDY zeus.owfn --og --fionaFormat],0, ignore, ignore)
AT_CHECK_FIONA
AT_CHECK([FIONA -t equivalence zeus.og zeus.fiona.og], 0, stdout, ignore)
AT_CHECK([GREP -q "equivalent: YES" stdout])
AT_KEYWORDS(equivalence)
AT_CLEANUP
