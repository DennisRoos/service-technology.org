AT_INIT
AT_COLOR_TESTS

############################################################################
AT_BANNER([Standard Options])
############################################################################

AT_SETUP([Help output])
AT_CHECK([STANCA --help],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

AT_SETUP([Version output])
AT_CHECK([STANCA --version],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

############################################################################
AT_BANNER([Standard examples (using the standard formula)])
############################################################################

#AT_SETUP([Siphon-Trap Property holds.])
#AT_CHECK([cp TESTFILES/e2.owfn .])
#AT_CHECK([STANCA e2.owfn],0,stdout,stderr)
#AT_CHECK([GREP -q "the formula is not satisfiable" stdout])
#AT_KEYWORDS(basic)
#AT_CLEANUP

#AT_SETUP([Siphon-Trap Property does not hold.])
#AT_CHECK([cp TESTFILES/phils5.llnet.owfn .])
#AT_CHECK([STANCA phils5.llnet.owfn],0,stdout,stderr)
#AT_CHECK([GREP -q "the formula is satisfiable" stdout])
#AT_KEYWORDS(basic)
#AT_CLEANUP

#AT_SETUP([Siphon-Trap Property does not hold.])
#AT_CHECK([cp TESTFILES/assy.owfn .])
#AT_CHECK([STANCA assy.owfn],0,stdout,stderr)
#AT_CHECK([GREP -q "the formula is not satisfiable" stdout])
#AT_KEYWORDS(basic)
#AT_CLEANUP

#AT_SETUP([Siphon-Trap Property does not hold.])
#AT_CHECK([cp TESTFILES/hms.owfn .])
#AT_CHECK([STANCA hms.owfn],0,stdout,stderr)
#AT_CHECK([GREP -q "the formula is satisfiable" stdout])
#AT_KEYWORDS(basic)
#AT_CLEANUP

#AT_SETUP([Siphon-Trap Property does not hold.])
#AT_CHECK([cp TESTFILES/st.owfn .])
#AT_CHECK([STANCA st.owfn],0,stdout,stderr)
#AT_CHECK([GREP -q "the formula is satisfiable" stdout])
#AT_KEYWORDS(basic)
#AT_CLEANUP

#AT_SETUP([Smallest example for the ST property.])
#AT_CHECK([cp TESTFILES/sm.owfn .])
#AT_CHECK([STANCA sm.owfn],0,stdout,stderr)
#AT_CHECK([GREP -q "the formula is not satisfiable" stdout])
#AT_KEYWORDS(basic)
#AT_CLEANUP


############################################################################
AT_BANNER([Extracting siphons and traps (partial results)])
############################################################################


#AT_SETUP([Smallest example for the ST property.])
#AT_CHECK([cp TESTFILES/su.owfn .])
#AT_CHECK([STANCA --verbose su.owfn],0,stdout,stderr)
#AT_CHECK([GREP -q "the formula is satisfiable" stdout])
#AT_CHECK([GREP -q "Siphon p trap p unmarked p" stdout])
#AT_KEYWORDS(diagnosis)
#AT_CLEANUP


AT_SETUP([Extract a siphon.])
AT_CHECK([cp TESTFILES/assy.owfn .])
AT_CHECK([STANCA --siphon assy.owfn],0,stdout,stderr)
AT_CHECK([GREP -q "p0" stdout && GREP -q "p1" stdout && GREP -q "p2" stdout])
AT_KEYWORDS(diagnosis)
AT_CLEANUP

AT_SETUP([Extract parametrized siphon.])
AT_CHECK([cp TESTFILES/assy.owfn .])
AT_CHECK([STANCA --semisiphon p0 assy.owfn],0,stdout,stderr)
AT_CHECK([GREP -q "p0" stdout && GREP -q "p1" stdout && GREP -q "p2" stdout])
AT_KEYWORDS(diagnosis)
AT_CLEANUP

AT_SETUP([No traps.])
AT_CHECK([cp TESTFILES/assy.owfn .])
AT_CHECK([STANCA --trap assy.owfn],0,stdout,stderr)
AT_CHECK([GREP -q "The net does not contain any trap" stdout])
AT_KEYWORDS(diagnosis)
AT_CLEANUP

#AT_SETUP([A marked trap inside a siphon.])
#AT_CHECK([cp TESTFILES/e2.owfn .])
#AT_CHECK([STANCA --siphon --trap e2.owfn],0,stdout,stderr)
#AT_CHECK([GREP -q "The net contains a siphon with a marked trap inside:" stdout])
#AT_CHECK([GREP -q "p0_2" stdout || GREP  -q "p0_1" stdout])
#AT_CHECK([GREP -q "p1_1" stdout || GREP  -q "p1_2" stdout])
#AT_KEYWORDS(diagnosis)
#AT_CLEANUP


#AT_SETUP([Siphon with no trap inside it (using ST formula).])
#AT_CHECK([cp TESTFILES/hms.owfn .])
#AT_CHECK([STANCA  hms.owfn ],0,stdout,stderr)
#AT_CHECK([GREP -q "p1" stdout])
#AT_CHECK([GREP -q "p6" stdout])
#AT_CHECK([GREP -q -w p3 stdout || GREP -q -w p2 stdout])
#AT_KEYWORDS(diagnosis)
#AT_CLEANUP

#AT_SETUP([Siphon with no trap inside it (using ST formula).])
#AT_CHECK([cp TESTFILES/st.owfn .])
#AT_CHECK([STANCA  st.owfn ],0,stdout,stderr)
#AT_CHECK([GREP -q "p1" stdout && (GREP -q "p5" stdout || GREP -q "p4" stdout)  && GREP -q "p6" stdout && GREP -q "p7" stdout])
#AT_CHECK([GREP -q "no trap inside it." stdout])
#AT_KEYWORDS(diagnosis)
#AT_CLEANUP

#AT_SETUP([A marked trap inside a siphon.])
#AT_CHECK([cp TESTFILES/st.owfn .])
#AT_CHECK([STANCA --siphon --trap st.owfn],0,stdout,stderr)
#AT_CHECK([GREP -q "The net contains a siphon with a marked trap inside:" stdout])
#AT_CHECK([ ( GREP -q "p2" stdout && GREP -q "p3" stdout ) ||
#( GREP -q "p1" stdout && GREP -q "p4" stdout && GREP -q "p5" stdout && GREP -q "p7" stdout ) || 
#( GREP -q "p1" stdout && GREP -q "p3" stdout && GREP -q "p5" stdout && GREP -q "p7" stdout ) 
#])
#AT_KEYWORDS(diagnosis)
#AT_CLEANUP

############################################################################
AT_BANNER([Extracting semi-siphons and semi-traps.])
############################################################################

#AT_SETUP([Semi-siphon.])
#AT_CHECK([cp TESTFILES/st.owfn .])
#AT_CHECK([STANCA --semisiphon st.owfn],0,stdout,stderr)
#AT_KEYWORDS(semi-siphon)
#AT_CLEANUP

#AT_SETUP([Basis of traps.])
#AT_CHECK([cp TESTFILES/st.owfn .])
#AT_CHECK([STANCA --semitrap st.owfn],0,stdout,stderr)
#AT_KEYWORDS(semi-trap)
#AT_CLEANUP

############################################################################
AT_BANNER([Extracting basis of siphons and traps.])
############################################################################

#AT_SETUP([Basis of traps.])
#AT_CHECK([cp TESTFILES/st.owfn .])
#AT_CHECK([STANCA --siphonbasis st.owfn],0,stdout,stderr)
#AT_KEYWORDS(basis)
#AT_CLEANUP

#AT_SETUP([Basis of traps.])
#AT_CHECK([cp TESTFILES/st.owfn .])
#AT_CHECK([STANCA --trapbasis st.owfn],0,stdout,stderr)
#AT_KEYWORDS(basis)
#AT_CLEANUP

