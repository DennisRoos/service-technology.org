\input texinfo
@setfilename rachel.info
@include version.texi
@afourpaper
@finalout
@settitle Rachel User's Manual

@c --------------------------------------------------------------------------

@copying

@b{About this document:}

This manual is for Rachel, version @value{VERSION}, a tool to repair automata for choreographies by editing labels, last updated @value{UPDATED}.

Copyright @copyright{} 2008 Niels Lohmann

@quotation
Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.2 or any later version published by the Free Software Foundation; with no Invariant Sections, with the Front-Cover Texts being ``A GNU Manual,'' and with the Back-Cover Texts as in (a) below.  A copy of the license is included in the section entitled ``GNU Free Documentation License.''

(a) The FSF's Back-Cover Text is: ``You are free to copy and modify this GNU Manual. Buying copies from GNU Press supports the FSF in developing GNU and promoting software freedom.''
@end quotation
@end copying

@dircategory service-technology.org
@direntry
* rachel: (rachel).       Rachel.
@end direntry


@c --------------------------------------------------------------------------

@titlepage

@title Rachel

@subtitle @b{R}epairing @b{A}utomata for @b{Ch}oreographies by @b{E}diting @b{L}abels
@subtitle @url{http://service-technology.org/rachel}
@vskip 0.5em
@subtitle Version @value{VERSION}, @value{UPDATED}

@author Niels Lohmann
@page


@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c --------------------------------------------------------------------------

@ifnottex
@node Top
@top Rachel
@insertcopying
@end ifnottex

@c --------------------------------------------------------------------------

@menu
* What is Rachel?::What is Rachel?
* First Steps::How to set up and install Rachel.
* Command Line Options::How to run Rachel.
* ChangeLog::Version history.
* GNU Free Documentation License::The license of this manual.
@end menu

@c --------------------------------------------------------------------------

@contents
@paragraphindent none

@c --------------------------------------------------------------------------

@node What is Rachel?
@chapter What is Rachel?

Rachel is a tool to repair deadlocking service choreographies. Much work has been conducted to analyze service choreographies to assert manyfold correctness criteria. While errors can be detected automatically, the @i{correction} of defective services is usually done manually. Rachel implements a graph-based approach to calculate the minimal edit distance between a given defective service and synthesized correct services. This edit distance helps to automatically fix found errors while keeping the rest of the service untouched.

For more information, see the following publications or links:

@itemize
@item Niels Lohmann. @b{Fixing Deadlocking Service Choreographies Using a Simulation-based Graph Edit Distance}. In Monika Solanki, Barry Norton, and Stephan Reiff-Marganiec, editors, @i{3rd Young Researchers Workshop on Service Oriented Computing, YR-SOC 2008, London, UK, 12--13 June 2008, Proceedings}, pages 13--20, June 2008.

This paper briefly describes the setting in which Rachel can be used as well as first experimental results. The paper is part of the distribution of Rachel  (@file{doc/background.pdf}) and is freely available at @url{http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Lohmann_2008_yrsoc.pdf}. Furthermore, slides of the talk are available at @url{http://service-technology.org/wiki/publications/lohmann_2008_yrsoc}.

@item Niels Lohmann. @b{Correcting Deadlocking Service Choreographies Using a Simulation-Based Graph Edit Distance}. In Marlon Dumas, Manfred Reichert, and Ming-Chien Shan, editors, @i{Business Process Management, 6th International Conference, BPM 2008, Milan, Italy, September 1--4, 2008, Proceedings}, volume 5240 of @i{Lecture Notes in Computer Science}, pages 132--147. Springer-Verlag, September 2008.

This paper (a preprint is available at @url{http://wwwteo.informatik.uni-rostock.de/ls_tpp/publications/Lohmann_2008_bpm.pdf}) gives all definitions and details on the algorithms implemented in Rachel. In addition, a case study is described and runtimes of Rachel are examined. This case study is part of the distribution of Rachel (@file{exp/bpm2008.tar.gz}) and can be executed with @samp{make experiments}.
@end itemize



@c --------------------------------------------------------------------------

@node First Steps
@chapter First Steps

@section Setup and Installation

@enumerate
@item Go to @url{http://service-technology.org/files/rachel} and download the latest release version of Rachel, say @file{rachel-@value{VERSION}.tar.gz}. To setup and compile Rachel, change into your download directory and type

@cartouche
@smallexample
tar xfz rachel-@value{VERSION}.tar.gz
cd rachel-@value{VERSION}
./configure
make
@end smallexample
@end cartouche

After compilation, a binary @samp{src/rachel} is generated.@footnote{On Microsoft Windows, the file will be called @file{rachel.exe}.} If you experience any compiler warnings, don't panic: Rachel contains some generated or third party code that we cannot influence.

@item To test whether everything went fine, type

@cartouche
@smallexample
make check
@end smallexample
@end cartouche

to execute the testcases located in @file{tests}. If everything went fine, you should see something like:

@smallexample
======================================================
All 16 tests behaved as expected (5 expected failures)
======================================================
@end smallexample

If an error occurs, please send the output to @email{rachel@@service-technology.org}.

@item To install the binary, the manpage, and the documentation, type

@cartouche
@smallexample
make install
@end smallexample
@end cartouche

You might need superuser permissions to do so.
@end enumerate

If you need any further information, see file @file{INSTALL} for detailed instructions.


@section Contents of the Distribution

The distribution contains several directories:

@table @file
@item doc
The Texinfo documentation of Rachel and a @acronym{PDF} file @file{background.pdf} with a short description of the setting in which Rachel should be used. The documentation can be created using @samp{make pdf}. Note you need to have Rachel properly installed before (see Installation description above).

@item exp
Experiments and case studies published in several papers. For each file, say @file{bpm2008.tar.gz}, a Makefile target @samp{bpm2008} exists. You can run all experiments with @samp{make experiments}. Note you need to have Rachel properly installed before (see Installation description above).

@item man
The manpage of Rachel which can be displayed using @samp{man rachel} after having Rachel installed (see Installation description above).

@item maintainer
Some scripts for maintainers of Rachel which can be used to create and distribute releases.

@item src
The source code of Rachel.

@item tests
Testcases for Rachel which check the generated binary. The testscripts check the command line options, file input and output, simulation calculation, and matching calculation.
@end table




@c --------------------------------------------------------------------------


@node Command Line Options
@chapter Invoking Rachel

Rachel is a command line tool and does not come with a fancy GUI. However, Rachel can be easily scripted and combined with other tools.

@section Command Line Options

For an overview of the command line options, type @samp{rachel -h} to see the following help screen:

@smallexample
@include cmdline.out
@end smallexample


@section Configuration Files

The parameters of the simulation and matching algorithm can be controlled using a configuration file that can be read using the @samp{conf-file} option; for example:

@cartouche
@smallexample
rachel --automaton=impl.og --og=spec.og --conf-file=rachel.conf
@end smallexample
@end cartouche

A configuration file consistes of @code{paramter = value} lines, each line setting the value of a parameter. An example file @file{rachel.conf} is located in the @file{src} folder.

Note: If not all parameters are defined, the standard values apply. Mandatory command-line options such as @samp{automaton} or @samp{og} cannot be defined in configuration files.




@c --------------------------------------------------------------------------


@node ChangeLog
@chapter Version History

Rachel is developed under the ``Release Early, Release Often'' maxime (see @url{http://catb.org/~esr/writings/cathedral-bazaar/cathedral-bazaar/ar01s04.html}): Whenever enough integrated or a non-trivial changes have summed up, a new version is published. Though this releases might now always mark significant changes, they at least allow to quickly fix bugs and avoid infinite procrastination.

@include ChangeLog.texi

@sp 3

The most recent change log is available at Rachel's website at @url{http://service-technology.org/files/rachel/ChangeLog}.



@c --------------------------------------------------------------------------

@include fdl.texi

@bye
