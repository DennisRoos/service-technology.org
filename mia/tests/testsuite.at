AT_INIT
AT_COLOR_TESTS

m4_define(AT_CHECK_WENDY, [AT_CHECK([if test "WENDY" == ""; then exit 77; fi])])
m4_define(AT_CHECK_LOLA, [AT_CHECK([if test "LOLA_FULL" == ""; then exit 77; fi])])

############################################################################
AT_BANNER([Standard Options])
############################################################################

AT_SETUP([Help output])
AT_CHECK([MIA --help],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

AT_SETUP([Version output])
AT_CHECK([MIA --version],0,ignore)
AT_KEYWORDS(basic)
AT_CLEANUP

############################################################################
AT_BANNER([Examples])
############################################################################

AT_SETUP([Small example (1 -> 2)])
AT_CHECK_LOLA
AT_CHECK_WENDY
AT_CHECK([cp TESTFILES/ex1.owfn TESTFILES/ex2.owfn .])
AT_CHECK([MIA ex1.owfn ex2.owfn --verbose],0,stdout,ignore)
AT_CHECK([GREP -c "\->" stdout],0,[3
],ignore)
AT_CLEANUP

AT_SETUP([Small example (2 -> 1)])
AT_CHECK_LOLA
AT_CHECK_WENDY
AT_CHECK([cp TESTFILES/ex1.owfn TESTFILES/ex2.owfn .])
AT_CHECK([MIA ex2.owfn ex1.owfn --verbose],0,stdout,ignore)
AT_CHECK([GREP -c "\->" stdout],0,[3
],ignore)
AT_CLEANUP

AT_SETUP([Registration office service (old -> new)])
AT_CHECK_LOLA
AT_CHECK_WENDY
AT_CHECK([cp TESTFILES/reg_old.owfn TESTFILES/reg_new.owfn .])
AT_CHECK([MIA reg_old.owfn reg_new.owfn --verbose],0,stdout,ignore)
AT_CHECK([GREP -c "\->" stdout],0,[9
],ignore)
AT_CLEANUP

AT_SETUP([Sequence 5 (original -> public view)])
AT_CHECK_LOLA
AT_CHECK_WENDY
AT_CHECK([cp TESTFILES/sequence5.owfn TESTFILES/sequence5-pv.owfn .])
AT_CHECK([MIA sequence5.owfn sequence5-pv.owfn --verbose],0,stdout,ignore)
AT_CHECK([GREP -c "\->" stdout],0,[12
],ignore)
AT_CLEANUP

AT_SETUP([Sequence 5 (public view -> original)])
AT_CHECK_LOLA
AT_CHECK_WENDY
AT_CHECK([cp TESTFILES/sequence5.owfn TESTFILES/sequence5-pv.owfn .])
AT_CHECK([MIA sequence5-pv.owfn sequence5.owfn --verbose],0,stdout,ignore)
AT_CHECK([GREP -c "\->" stdout],0,[12
],ignore)
AT_CLEANUP

AT_SETUP([Purchase Order (original -> public view)])
AT_CHECK_LOLA
AT_CHECK_WENDY
AT_CHECK([cp TESTFILES/PO.owfn TESTFILES/PO-pv.owfn .])
AT_CHECK([MIA PO.owfn PO-pv.owfn --verbose],0,stdout,ignore)
AT_CHECK([GREP -c "\->" stdout],0,[429
],ignore)
AT_CLEANUP

AT_SETUP([Purchase Order (public view -> original)])
AT_CHECK_LOLA
AT_CHECK_WENDY
AT_CHECK([cp TESTFILES/PO.owfn TESTFILES/PO-pv.owfn .])
AT_CHECK([MIA PO-pv.owfn PO.owfn --verbose],0,stdout,ignore)
AT_CHECK([GREP -c "\->" stdout],0,[429
],ignore)
AT_CLEANUP

AT_SETUP([Checking for memory leaks with Valgrind])
AT_CHECK_LOLA
AT_CHECK_WENDY
AT_CHECK([cp TESTFILES/ex1.owfn TESTFILES/ex2.owfn .])
AT_CHECK([VALGRIND --leak-check=full --show-reachable=yes MIA_RAW ex1.owfn ex2.owfn --verbose --finalize],0,ignore,stderr)
AT_CHECK([GREP -q "All heap blocks were freed -- no leaks are possible" stderr])
AT_CLEANUP


############################################################################
AT_BANNER([Regression Tests])
############################################################################

AT_SETUP([Bug 16835 (https://gna.org/bugs/?16835)])
AT_CHECK_LOLA
AT_CHECK([cp TESTFILES/bug16835_old.owfn TESTFILES/bug16835_new.owfn .])
AT_CHECK([MIA bug16835_old.owfn bug16835_new.owfn --verbose],1,stdout,stderr)
AT_CHECK([GREP -q "mia: the input open net must be normal -- aborting \[[#14\]]" stderr])
AT_KEYWORDS(bug)
AT_CLEANUP

